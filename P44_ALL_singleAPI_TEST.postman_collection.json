{
	"info": {
		"_postman_id": "53f01442-aff9-4623-a194-ab9cd65f6bf1",
		"name": "P44_ALL_singleAPI_TEST",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28168622",
		"_collection_link": "https://www.postman.com/shailesh1994/workspace/p44/collection/28168622-53f01442-aff9-4623-a194-ab9cd65f6bf1?action=share&creator=28168622&source=collection_link"
	},
	"item": [
		{
			"name": "LOGIN",
			"item": [
				{
					"name": "Valid p44 user with correct email & password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"const jsonData=pm.response.json();\r",
									"pm.test('kxToken is String and not null-valid user test', function () {\r",
									"   pm.expect(jsonData.kxToken).to.be.a(\"String\");\r",
									"   pm.expect(jsonData.kxToken,\"req id is not null\").to.not.be.null;\r",
									"});\r",
									"\r",
									" //header validation\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"haeder value is present\", function () {\r",
									"   pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  {\r\n    \"email\":\"deepa.choudhary@klearnow.com\",\r\n    \"password\":\"bol12345\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/login",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "valid p44 user with incorrect password length",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"const jsonData=pm.response.json();\r",
									"pm.test('Invalid field errMessage', function () {\r",
									"   pm.expect(jsonData.errMessage).to.be.a(\"String\");\r",
									"   pm.expect(jsonData.errMessage,\"req id is not null\").to.include(\"Length limits : Min 6 Max 20\");\r",
									"});\r",
									"\r",
									" //header validation\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"haeder value is present\", function () {\r",
									"   pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  {\r\n    \"email\":\"deepa.choudhary@klearnow.com\",\r\n    \"password\":\"bol1\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/login",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "valid p44 user with incorrect password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"const jsonData=pm.response.json();\r",
									"pm.test('Invalid field errMessage', function () {\r",
									"   pm.expect(jsonData.errMessage).to.be.a(\"String\");\r",
									"   pm.expect(jsonData.errMessage,\"wrong error message\").to.include(\"Invalid email or password\");\r",
									"});\r",
									"\r",
									" //header validation\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"haeder value is present\", function () {\r",
									"   pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  {\r\n    \"email\":\"deepa.choudhary@klearnow.com\",\r\n    \"password\":\"bol1234\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/login",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "valid p44 user with missing password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"const jsonData=pm.response.json();\r",
									"pm.test('Missing mandatory field  errMessage', function () {\r",
									"   pm.expect(jsonData.errMessage).to.be.a(\"String\");\r",
									"   pm.expect(jsonData.errMessage,\"wrong error message\").to.include(\"Missing mandatory field 'password' .\");\r",
									"});\r",
									"\r",
									" //header validation\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"haeder value is present\", function () {\r",
									"   pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  {\r\n    \"email\":\"deepa.choudhary@klearnow.com\",\r\n    \"password\":\"\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/login",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Valid p44 user with missing email & password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"const jsonData=pm.response.json();\r",
									"pm.test('Missing mandatory field errMessage', function () {\r",
									"   pm.expect(jsonData.errMessage).to.be.a(\"String\");\r",
									"   pm.expect(jsonData.errMessage,\"wrong error message\").to.include(\"Missing mandatory field 'email' .\");\r",
									"});\r",
									"\r",
									" //header validation\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"haeder value is present\", function () {\r",
									"   pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  {\r\n    \"email\":\"\",\r\n    \"password\":\"\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/login",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "user login with email(length<10) & password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"const jsonData=pm.response.json();\r",
									"pm.test('Invalid field errMessage', function () {\r",
									"   pm.expect(jsonData.errMessage).to.be.a(\"String\");\r",
									"   pm.expect(jsonData.errMessage,\"req id is not null\").to.include(\"Length limits : Min 10 Max 200\");\r",
									"});\r",
									"\r",
									" //header validation\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"haeder value is present\", function () {\r",
									"   pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"s@p44.com\",\r\n    \"password\":\"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/login",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Submit_BOL_API_TEST",
			"item": [
				{
					"name": "Submit BOL_LengthTest",
					"item": [
						{
							"name": "P44_LOGIN Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData=pm.response.json();\r",
											"pm.environment.set(\"P44token\",jsonData.kxToken);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "  {\r\n    \"email\":\"deepa.choudhary@klearnow.com\",\r\n    \"password\":\"bol12345\"\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.klearnow.com/api-staging/v1/login",
									"protocol": "https",
									"host": [
										"api",
										"klearnow",
										"com"
									],
									"path": [
										"api-staging",
										"v1",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "User submit BOL when bolRequestId length is more than 36",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"var currentTime = Math.floor(Date.now() / 1000);\r",
											"pm.environment.set(\"epochTime\", currentTime);\r",
											"//random data \r",
											"var random = Math.random().toString(36).substring(2, 36);\r",
											"\r",
											"var useremail=\"P44\"+random;\r",
											"var username=\"M\"+random;\r",
											"var mscac=random;\r",
											"var random1 =Math.random().toString(12).substring(2,5);\r",
											"var hscac= random1;\r",
											"var hbl= \"H\"+random1;\r",
											"\r",
											"pm.environment.set(\"id\",useremail);\r",
											"pm.environment.set(\"id1\",username);\r",
											"pm.environment.set(\"ms\",mscac);\r",
											"pm.environment.set(\"hs\",hscac);\r",
											"pm.environment.set(\"hb\",hbl);\r",
											"\r",
											"\r",
											"// Set the request body\r",
											"\r",
											"var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"bol\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"bolRequestId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mot\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"bolNumber\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"masterScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"masterBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"masterScac\",\r",
											"                \"masterBolNumber\",\r",
											"                \"houseScac\",\r",
											"                \"houseBolNumber\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfLading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfUnlading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"customer\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"customerTrackingId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerEINNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerContact\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerAddress\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"customerTrackingId\",\r",
											"                \"customerEINNumber\",\r",
											"                \"customerName\",\r",
											"                \"customerContact\",\r",
											"                \"customerAddress\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"bolRequestId\",\r",
											"            \"mot\",\r",
											"            \"bolNumber\",\r",
											"            \"portOfLading\",\r",
											"            \"portOfUnlading\",\r",
											"            \"customer\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"bol\"\r",
											"  ]\r",
											"}\r",
											"//schema test\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"pm.test('requesttest:rSchema is valid', function () {\r",
											"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
											"\r",
											"});\r",
											"\r",
											"pm.test('requesttest:BOL request id validation length test', function () {\r",
											"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
											"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData=pm.response.json();\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('error message Displayed', function () {\r",
											"   pm.expect(jsonData.errMessage).to.eql(\"Transaction rolled back because it has been marked as rollback-only\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "kxToken",
										"value": "{{P44token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"RAIL\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"{{hs}}\",\r\n                \"houseBolNumber\": \"{{hb}}\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
									"protocol": "https",
									"host": [
										"api",
										"klearnow",
										"com"
									],
									"path": [
										"api-staging",
										"v1",
										"submitbol"
									]
								}
							},
							"response": []
						},
						{
							"name": "User submit BOL when masterScac length is more than 4",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"var currentTime = Math.floor(Date.now() / 1000);\r",
											"pm.environment.set(\"epochTime\", currentTime);\r",
											"//random data \r",
											"var random = Math.random().toString(36).substring(2, 36);\r",
											"\r",
											"var useremail=\"P44\"+random;\r",
											"var username=\"M\"+random;\r",
											"var mscac=random;\r",
											"var random1 =Math.random().toString(12).substring(2,5);\r",
											"var hscac= random1;\r",
											"var hbl= \"H\"+random1;\r",
											"\r",
											"pm.environment.set(\"id\",useremail);\r",
											"pm.environment.set(\"id1\",username);\r",
											"pm.environment.set(\"ms\",mscac);\r",
											"pm.environment.set(\"hs\",hscac);\r",
											"pm.environment.set(\"hb\",hbl);\r",
											"\r",
											"\r",
											"// Set the request body\r",
											"\r",
											"var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"bol\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"bolRequestId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mot\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"bolNumber\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"masterScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"masterBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"masterScac\",\r",
											"                \"masterBolNumber\",\r",
											"                \"houseScac\",\r",
											"                \"houseBolNumber\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfLading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfUnlading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"customer\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"customerTrackingId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerEINNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerContact\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerAddress\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"customerTrackingId\",\r",
											"                \"customerEINNumber\",\r",
											"                \"customerName\",\r",
											"                \"customerContact\",\r",
											"                \"customerAddress\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"bolRequestId\",\r",
											"            \"mot\",\r",
											"            \"bolNumber\",\r",
											"            \"portOfLading\",\r",
											"            \"portOfUnlading\",\r",
											"            \"customer\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"bol\"\r",
											"  ]\r",
											"}\r",
											"//schema test\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"pm.test('requesttest:rSchema is valid', function () {\r",
											"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
											"\r",
											"});\r",
											"\r",
											"pm.test('requesttest:BOL request id validation length test', function () {\r",
											"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
											"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData=pm.response.json();\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('error message Displayed', function () {\r",
											"   pm.expect(jsonData.errMessage).to.eql(\"Transaction rolled back because it has been marked as rollback-only\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "kxToken",
										"value": "{{P44token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"RAIL\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"{{hs}}\",\r\n                \"houseBolNumber\": \"{{hb}}\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
									"protocol": "https",
									"host": [
										"api",
										"klearnow",
										"com"
									],
									"path": [
										"api-staging",
										"v1",
										"submitbol"
									]
								}
							},
							"response": []
						},
						{
							"name": "User submit BOL when masterBolNumber length is more than 12",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"var currentTime = Math.floor(Date.now() / 1000);\r",
											"pm.environment.set(\"epochTime\", currentTime);\r",
											"//random data \r",
											"var random = Math.random().toString(36).substring(2, 36);\r",
											"\r",
											"var useremail=\"P44\"+random;\r",
											"var username=\"M\"+random;\r",
											"var mscac=random;\r",
											"var random1 =Math.random().toString(12).substring(2,5);\r",
											"var hscac= random1;\r",
											"var hbl= \"H\"+random1;\r",
											"\r",
											"pm.environment.set(\"id\",useremail);\r",
											"pm.environment.set(\"id1\",username);\r",
											"pm.environment.set(\"ms\",mscac);\r",
											"pm.environment.set(\"hs\",hscac);\r",
											"pm.environment.set(\"hb\",hbl);\r",
											"\r",
											"\r",
											"// Set the request body\r",
											"\r",
											"var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"bol\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"bolRequestId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mot\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"bolNumber\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"masterScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"masterBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"masterScac\",\r",
											"                \"masterBolNumber\",\r",
											"                \"houseScac\",\r",
											"                \"houseBolNumber\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfLading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfUnlading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"customer\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"customerTrackingId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerEINNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerContact\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerAddress\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"customerTrackingId\",\r",
											"                \"customerEINNumber\",\r",
											"                \"customerName\",\r",
											"                \"customerContact\",\r",
											"                \"customerAddress\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"bolRequestId\",\r",
											"            \"mot\",\r",
											"            \"bolNumber\",\r",
											"            \"portOfLading\",\r",
											"            \"portOfUnlading\",\r",
											"            \"customer\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"bol\"\r",
											"  ]\r",
											"}\r",
											"//schema test\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"pm.test('requesttest:rSchema is valid', function () {\r",
											"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
											"\r",
											"});\r",
											"\r",
											"pm.test('requesttest:BOL request id validation length test', function () {\r",
											"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
											"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData=pm.response.json();\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('error message Displayed', function () {\r",
											"   pm.expect(jsonData.errMessage).to.eql(\"Transaction rolled back because it has been marked as rollback-only\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "kxToken",
										"value": "{{P44token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"RAIL\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"{{hs}}\",\r\n                \"houseBolNumber\": \"{{hb}}\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
									"protocol": "https",
									"host": [
										"api",
										"klearnow",
										"com"
									],
									"path": [
										"api-staging",
										"v1",
										"submitbol"
									]
								}
							},
							"response": []
						},
						{
							"name": "User submit BOL when houseScac length is more than 4",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"var currentTime = Math.floor(Date.now() / 1000);\r",
											"pm.environment.set(\"epochTime\", currentTime);\r",
											"//random data \r",
											"var random = Math.random().toString(36).substring(2, 36);\r",
											"\r",
											"var useremail=\"P44\"+random;\r",
											"var username=\"M\"+random;\r",
											"var mscac=random;\r",
											"var random1 =Math.random().toString(12).substring(2,5);\r",
											"var hscac= random1;\r",
											"var hbl= \"H\"+random1;\r",
											"\r",
											"pm.environment.set(\"id\",useremail);\r",
											"pm.environment.set(\"id1\",username);\r",
											"pm.environment.set(\"ms\",mscac);\r",
											"pm.environment.set(\"hs\",hscac);\r",
											"pm.environment.set(\"hb\",hbl);\r",
											"\r",
											"\r",
											"// Set the request body\r",
											"\r",
											"var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"bol\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"bolRequestId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mot\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"bolNumber\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"masterScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"masterBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"masterScac\",\r",
											"                \"masterBolNumber\",\r",
											"                \"houseScac\",\r",
											"                \"houseBolNumber\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfLading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfUnlading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"customer\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"customerTrackingId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerEINNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerContact\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerAddress\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"customerTrackingId\",\r",
											"                \"customerEINNumber\",\r",
											"                \"customerName\",\r",
											"                \"customerContact\",\r",
											"                \"customerAddress\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"bolRequestId\",\r",
											"            \"mot\",\r",
											"            \"bolNumber\",\r",
											"            \"portOfLading\",\r",
											"            \"portOfUnlading\",\r",
											"            \"customer\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"bol\"\r",
											"  ]\r",
											"}\r",
											"//schema test\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"pm.test('requesttest:rSchema is valid', function () {\r",
											"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
											"\r",
											"});\r",
											"\r",
											"pm.test('requesttest:BOL request id validation length test', function () {\r",
											"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
											"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData=pm.response.json();\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('error message Displayed', function () {\r",
											"   pm.expect(jsonData.errMessage).to.eql(\"Transaction rolled back because it has been marked as rollback-only\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "kxToken",
										"value": "{{P44token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"RAIL\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"{{hs}}\",\r\n                \"houseBolNumber\": \"{{hb}}\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
									"protocol": "https",
									"host": [
										"api",
										"klearnow",
										"com"
									],
									"path": [
										"api-staging",
										"v1",
										"submitbol"
									]
								}
							},
							"response": []
						},
						{
							"name": "User submit BOL when houseBolNumber length is more than 12",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"var currentTime = Math.floor(Date.now() / 1000);\r",
											"pm.environment.set(\"epochTime\", currentTime);\r",
											"//random data \r",
											"var random = Math.random().toString(36).substring(2, 36);\r",
											"\r",
											"var useremail=\"P44\"+random;\r",
											"var username=\"M\"+random;\r",
											"var mscac=random;\r",
											"var random1 =Math.random().toString(12).substring(2,5);\r",
											"var hscac= random1;\r",
											"var hbl= \"H\"+random1;\r",
											"\r",
											"pm.environment.set(\"id\",useremail);\r",
											"pm.environment.set(\"id1\",username);\r",
											"pm.environment.set(\"ms\",mscac);\r",
											"pm.environment.set(\"hs\",hscac);\r",
											"pm.environment.set(\"hb\",hbl);\r",
											"\r",
											"\r",
											"// Set the request body\r",
											"\r",
											"var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"bol\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"bolRequestId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mot\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"bolNumber\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"masterScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"masterBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"masterScac\",\r",
											"                \"masterBolNumber\",\r",
											"                \"houseScac\",\r",
											"                \"houseBolNumber\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfLading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfUnlading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"customer\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"customerTrackingId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerEINNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerContact\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerAddress\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"customerTrackingId\",\r",
											"                \"customerEINNumber\",\r",
											"                \"customerName\",\r",
											"                \"customerContact\",\r",
											"                \"customerAddress\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"bolRequestId\",\r",
											"            \"mot\",\r",
											"            \"bolNumber\",\r",
											"            \"portOfLading\",\r",
											"            \"portOfUnlading\",\r",
											"            \"customer\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"bol\"\r",
											"  ]\r",
											"}\r",
											"//schema test\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"pm.test('requesttest:rSchema is valid', function () {\r",
											"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
											"\r",
											"});\r",
											"\r",
											"pm.test('requesttest:BOL request id validation length test', function () {\r",
											"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
											"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData=pm.response.json();\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('error message Displayed', function () {\r",
											"   pm.expect(jsonData.errMessage).to.eql(\"Transaction rolled back because it has been marked as rollback-only\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "kxToken",
										"value": "{{P44token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"RAIL\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"{{hs}}\",\r\n                \"houseBolNumber\": \"{{hb}}\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
									"protocol": "https",
									"host": [
										"api",
										"klearnow",
										"com"
									],
									"path": [
										"api-staging",
										"v1",
										"submitbol"
									]
								}
							},
							"response": []
						},
						{
							"name": "User submit BOL when portCode length is more than 5 for portOfLading",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"var currentTime = Math.floor(Date.now() / 1000);\r",
											"pm.environment.set(\"epochTime\", currentTime);\r",
											"//random data \r",
											"var random = Math.random().toString(36).substring(2, 36);\r",
											"\r",
											"var useremail=\"P44\"+random;\r",
											"var username=\"M\"+random;\r",
											"var mscac=random;\r",
											"var random1 =Math.random().toString(12).substring(2,5);\r",
											"var hscac= random1;\r",
											"var hbl= \"H\"+random1;\r",
											"\r",
											"pm.environment.set(\"id\",useremail);\r",
											"pm.environment.set(\"id1\",username);\r",
											"pm.environment.set(\"ms\",mscac);\r",
											"pm.environment.set(\"hs\",hscac);\r",
											"pm.environment.set(\"hb\",hbl);\r",
											"\r",
											"\r",
											"// Set the request body\r",
											"\r",
											"var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"bol\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"bolRequestId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mot\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"bolNumber\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"masterScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"masterBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"masterScac\",\r",
											"                \"masterBolNumber\",\r",
											"                \"houseScac\",\r",
											"                \"houseBolNumber\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfLading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfUnlading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"customer\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"customerTrackingId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerEINNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerContact\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerAddress\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"customerTrackingId\",\r",
											"                \"customerEINNumber\",\r",
											"                \"customerName\",\r",
											"                \"customerContact\",\r",
											"                \"customerAddress\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"bolRequestId\",\r",
											"            \"mot\",\r",
											"            \"bolNumber\",\r",
											"            \"portOfLading\",\r",
											"            \"portOfUnlading\",\r",
											"            \"customer\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"bol\"\r",
											"  ]\r",
											"}\r",
											"//schema test\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"pm.test('requesttest:rSchema is valid', function () {\r",
											"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
											"\r",
											"});\r",
											"\r",
											"pm.test('requesttest:BOL request id validation length test', function () {\r",
											"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
											"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData=pm.response.json();\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('error message Displayed', function () {\r",
											"   pm.expect(jsonData.errMessage).to.eql(\"Transaction rolled back because it has been marked as rollback-only\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "kxToken",
										"value": "{{P44token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"RAIL\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"{{hs}}\",\r\n                \"houseBolNumber\": \"{{hb}}\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
									"protocol": "https",
									"host": [
										"api",
										"klearnow",
										"com"
									],
									"path": [
										"api-staging",
										"v1",
										"submitbol"
									]
								}
							},
							"response": []
						},
						{
							"name": "User submit BOL when portName length is more than 64 for portOfLading",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"var currentTime = Math.floor(Date.now() / 1000);\r",
											"pm.environment.set(\"epochTime\", currentTime);\r",
											"//random data \r",
											"var random = Math.random().toString(36).substring(2, 36);\r",
											"\r",
											"var useremail=\"P44\"+random;\r",
											"var username=\"M\"+random;\r",
											"var mscac=random;\r",
											"var random1 =Math.random().toString(12).substring(2,5);\r",
											"var hscac= random1;\r",
											"var hbl= \"H\"+random1;\r",
											"\r",
											"pm.environment.set(\"id\",useremail);\r",
											"pm.environment.set(\"id1\",username);\r",
											"pm.environment.set(\"ms\",mscac);\r",
											"pm.environment.set(\"hs\",hscac);\r",
											"pm.environment.set(\"hb\",hbl);\r",
											"\r",
											"\r",
											"// Set the request body\r",
											"\r",
											"var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"bol\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"bolRequestId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mot\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"bolNumber\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"masterScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"masterBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"masterScac\",\r",
											"                \"masterBolNumber\",\r",
											"                \"houseScac\",\r",
											"                \"houseBolNumber\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfLading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfUnlading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"customer\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"customerTrackingId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerEINNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerContact\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerAddress\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"customerTrackingId\",\r",
											"                \"customerEINNumber\",\r",
											"                \"customerName\",\r",
											"                \"customerContact\",\r",
											"                \"customerAddress\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"bolRequestId\",\r",
											"            \"mot\",\r",
											"            \"bolNumber\",\r",
											"            \"portOfLading\",\r",
											"            \"portOfUnlading\",\r",
											"            \"customer\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"bol\"\r",
											"  ]\r",
											"}\r",
											"//schema test\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"pm.test('requesttest:rSchema is valid', function () {\r",
											"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
											"\r",
											"});\r",
											"\r",
											"pm.test('requesttest:BOL request id validation length test', function () {\r",
											"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
											"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData=pm.response.json();\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('error message Displayed', function () {\r",
											"   pm.expect(jsonData.errMessage).to.eql(\"Transaction rolled back because it has been marked as rollback-only\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "kxToken",
										"value": "{{P44token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"RAIL\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"{{hs}}\",\r\n                \"houseBolNumber\": \"{{hb}}\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
									"protocol": "https",
									"host": [
										"api",
										"klearnow",
										"com"
									],
									"path": [
										"api-staging",
										"v1",
										"submitbol"
									]
								}
							},
							"response": []
						},
						{
							"name": "User submit BOL when countryISOCode length is more than 2 for portOfLading",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"var currentTime = Math.floor(Date.now() / 1000);\r",
											"pm.environment.set(\"epochTime\", currentTime);\r",
											"//random data \r",
											"var random = Math.random().toString(36).substring(2, 36);\r",
											"\r",
											"var useremail=\"P44\"+random;\r",
											"var username=\"M\"+random;\r",
											"var mscac=random;\r",
											"var random1 =Math.random().toString(12).substring(2,5);\r",
											"var hscac= random1;\r",
											"var hbl= \"H\"+random1;\r",
											"\r",
											"pm.environment.set(\"id\",useremail);\r",
											"pm.environment.set(\"id1\",username);\r",
											"pm.environment.set(\"ms\",mscac);\r",
											"pm.environment.set(\"hs\",hscac);\r",
											"pm.environment.set(\"hb\",hbl);\r",
											"\r",
											"\r",
											"// Set the request body\r",
											"\r",
											"var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"bol\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"bolRequestId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mot\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"bolNumber\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"masterScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"masterBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"masterScac\",\r",
											"                \"masterBolNumber\",\r",
											"                \"houseScac\",\r",
											"                \"houseBolNumber\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfLading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfUnlading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"customer\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"customerTrackingId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerEINNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerContact\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerAddress\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"customerTrackingId\",\r",
											"                \"customerEINNumber\",\r",
											"                \"customerName\",\r",
											"                \"customerContact\",\r",
											"                \"customerAddress\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"bolRequestId\",\r",
											"            \"mot\",\r",
											"            \"bolNumber\",\r",
											"            \"portOfLading\",\r",
											"            \"portOfUnlading\",\r",
											"            \"customer\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"bol\"\r",
											"  ]\r",
											"}\r",
											"//schema test\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"pm.test('requesttest:rSchema is valid', function () {\r",
											"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
											"\r",
											"});\r",
											"\r",
											"pm.test('requesttest:BOL request id validation length test', function () {\r",
											"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
											"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData=pm.response.json();\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('error message Displayed', function () {\r",
											"   pm.expect(jsonData.errMessage).to.eql(\"Transaction rolled back because it has been marked as rollback-only\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "kxToken",
										"value": "{{P44token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"RAIL\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"{{hs}}\",\r\n                \"houseBolNumber\": \"{{hb}}\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
									"protocol": "https",
									"host": [
										"api",
										"klearnow",
										"com"
									],
									"path": [
										"api-staging",
										"v1",
										"submitbol"
									]
								}
							},
							"response": []
						},
						{
							"name": "User submit BOL when portArrivalEpoch length is more than 32 for portOfLading",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"var currentTime = Math.floor(Date.now() / 1000);\r",
											"pm.environment.set(\"epochTime\", currentTime);\r",
											"//random data \r",
											"var random = Math.random().toString(36).substring(2, 36);\r",
											"\r",
											"var useremail=\"P44\"+random;\r",
											"var username=\"M\"+random;\r",
											"var mscac=random;\r",
											"var random1 =Math.random().toString(12).substring(2,5);\r",
											"var hscac= random1;\r",
											"var hbl= \"H\"+random1;\r",
											"\r",
											"pm.environment.set(\"id\",useremail);\r",
											"pm.environment.set(\"id1\",username);\r",
											"pm.environment.set(\"ms\",mscac);\r",
											"pm.environment.set(\"hs\",hscac);\r",
											"pm.environment.set(\"hb\",hbl);\r",
											"\r",
											"\r",
											"// Set the request body\r",
											"\r",
											"var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"bol\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"bolRequestId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mot\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"bolNumber\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"masterScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"masterBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"masterScac\",\r",
											"                \"masterBolNumber\",\r",
											"                \"houseScac\",\r",
											"                \"houseBolNumber\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfLading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfUnlading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"customer\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"customerTrackingId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerEINNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerContact\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerAddress\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"customerTrackingId\",\r",
											"                \"customerEINNumber\",\r",
											"                \"customerName\",\r",
											"                \"customerContact\",\r",
											"                \"customerAddress\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"bolRequestId\",\r",
											"            \"mot\",\r",
											"            \"bolNumber\",\r",
											"            \"portOfLading\",\r",
											"            \"portOfUnlading\",\r",
											"            \"customer\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"bol\"\r",
											"  ]\r",
											"}\r",
											"//schema test\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"pm.test('requesttest:rSchema is valid', function () {\r",
											"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
											"\r",
											"});\r",
											"\r",
											"pm.test('requesttest:BOL request id validation length test', function () {\r",
											"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
											"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData=pm.response.json();\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('error message Displayed', function () {\r",
											"   pm.expect(jsonData.errMessage).to.eql(\"Transaction rolled back because it has been marked as rollback-only\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "kxToken",
										"value": "{{P44token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"RAIL\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"{{hs}}\",\r\n                \"houseBolNumber\": \"{{hb}}\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
									"protocol": "https",
									"host": [
										"api",
										"klearnow",
										"com"
									],
									"path": [
										"api-staging",
										"v1",
										"submitbol"
									]
								}
							},
							"response": []
						},
						{
							"name": "User submit BOL when portCode length is more than 5 for portOfUnlading",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"var currentTime = Math.floor(Date.now() / 1000);\r",
											"pm.environment.set(\"epochTime\", currentTime);\r",
											"//random data \r",
											"var random = Math.random().toString(36).substring(2, 36);\r",
											"\r",
											"var useremail=\"P44\"+random;\r",
											"var username=\"M\"+random;\r",
											"var mscac=random;\r",
											"var random1 =Math.random().toString(12).substring(2,5);\r",
											"var hscac= random1;\r",
											"var hbl= \"H\"+random1;\r",
											"\r",
											"pm.environment.set(\"id\",useremail);\r",
											"pm.environment.set(\"id1\",username);\r",
											"pm.environment.set(\"ms\",mscac);\r",
											"pm.environment.set(\"hs\",hscac);\r",
											"pm.environment.set(\"hb\",hbl);\r",
											"\r",
											"\r",
											"// Set the request body\r",
											"\r",
											"var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"bol\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"bolRequestId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mot\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"bolNumber\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"masterScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"masterBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"masterScac\",\r",
											"                \"masterBolNumber\",\r",
											"                \"houseScac\",\r",
											"                \"houseBolNumber\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfLading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfUnlading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"customer\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"customerTrackingId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerEINNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerContact\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerAddress\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"customerTrackingId\",\r",
											"                \"customerEINNumber\",\r",
											"                \"customerName\",\r",
											"                \"customerContact\",\r",
											"                \"customerAddress\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"bolRequestId\",\r",
											"            \"mot\",\r",
											"            \"bolNumber\",\r",
											"            \"portOfLading\",\r",
											"            \"portOfUnlading\",\r",
											"            \"customer\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"bol\"\r",
											"  ]\r",
											"}\r",
											"//schema test\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"pm.test('requesttest:rSchema is valid', function () {\r",
											"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
											"\r",
											"});\r",
											"\r",
											"pm.test('requesttest:BOL request id validation length test', function () {\r",
											"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
											"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData=pm.response.json();\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('error message Displayed', function () {\r",
											"   pm.expect(jsonData.errMessage).to.eql(\"Transaction rolled back because it has been marked as rollback-only\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "kxToken",
										"value": "{{P44token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"RAIL\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"{{hs}}\",\r\n                \"houseBolNumber\": \"{{hb}}\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
									"protocol": "https",
									"host": [
										"api",
										"klearnow",
										"com"
									],
									"path": [
										"api-staging",
										"v1",
										"submitbol"
									]
								}
							},
							"response": []
						},
						{
							"name": "User submit BOL when portName length is more than 64 for portOfUnlading",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"var currentTime = Math.floor(Date.now() / 1000);\r",
											"pm.environment.set(\"epochTime\", currentTime);\r",
											"//random data \r",
											"var random = Math.random().toString(36).substring(2, 36);\r",
											"\r",
											"var useremail=\"P44\"+random;\r",
											"var username=\"M\"+random;\r",
											"var mscac=random;\r",
											"var random1 =Math.random().toString(12).substring(2,5);\r",
											"var hscac= random1;\r",
											"var hbl= \"H\"+random1;\r",
											"\r",
											"pm.environment.set(\"id\",useremail);\r",
											"pm.environment.set(\"id1\",username);\r",
											"pm.environment.set(\"ms\",mscac);\r",
											"pm.environment.set(\"hs\",hscac);\r",
											"pm.environment.set(\"hb\",hbl);\r",
											"\r",
											"\r",
											"// Set the request body\r",
											"\r",
											"var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"bol\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"bolRequestId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mot\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"bolNumber\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"masterScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"masterBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"masterScac\",\r",
											"                \"masterBolNumber\",\r",
											"                \"houseScac\",\r",
											"                \"houseBolNumber\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfLading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfUnlading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"customer\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"customerTrackingId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerEINNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerContact\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerAddress\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"customerTrackingId\",\r",
											"                \"customerEINNumber\",\r",
											"                \"customerName\",\r",
											"                \"customerContact\",\r",
											"                \"customerAddress\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"bolRequestId\",\r",
											"            \"mot\",\r",
											"            \"bolNumber\",\r",
											"            \"portOfLading\",\r",
											"            \"portOfUnlading\",\r",
											"            \"customer\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"bol\"\r",
											"  ]\r",
											"}\r",
											"//schema test\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"pm.test('requesttest:rSchema is valid', function () {\r",
											"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
											"\r",
											"});\r",
											"\r",
											"pm.test('requesttest:BOL request id validation length test', function () {\r",
											"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
											"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData=pm.response.json();\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('error message Displayed', function () {\r",
											"   pm.expect(jsonData.errMessage).to.eql(\"Transaction rolled back because it has been marked as rollback-only\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "kxToken",
										"value": "{{P44token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"RAIL\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"{{hs}}\",\r\n                \"houseBolNumber\": \"{{hb}}\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
									"protocol": "https",
									"host": [
										"api",
										"klearnow",
										"com"
									],
									"path": [
										"api-staging",
										"v1",
										"submitbol"
									]
								}
							},
							"response": []
						},
						{
							"name": "User submit BOL when countryISOCode length is more than 2 for portOfUnlading",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"var currentTime = Math.floor(Date.now() / 1000);\r",
											"pm.environment.set(\"epochTime\", currentTime);\r",
											"//random data \r",
											"var random = Math.random().toString(36).substring(2, 36);\r",
											"\r",
											"var useremail=\"P44\"+random;\r",
											"var username=\"M\"+random;\r",
											"var mscac=random;\r",
											"var random1 =Math.random().toString(12).substring(2,5);\r",
											"var hscac= random1;\r",
											"var hbl= \"H\"+random1;\r",
											"\r",
											"pm.environment.set(\"id\",useremail);\r",
											"pm.environment.set(\"id1\",username);\r",
											"pm.environment.set(\"ms\",mscac);\r",
											"pm.environment.set(\"hs\",hscac);\r",
											"pm.environment.set(\"hb\",hbl);\r",
											"\r",
											"\r",
											"// Set the request body\r",
											"\r",
											"var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"bol\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"bolRequestId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mot\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"bolNumber\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"masterScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"masterBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"masterScac\",\r",
											"                \"masterBolNumber\",\r",
											"                \"houseScac\",\r",
											"                \"houseBolNumber\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfLading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfUnlading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"customer\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"customerTrackingId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerEINNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerContact\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerAddress\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"customerTrackingId\",\r",
											"                \"customerEINNumber\",\r",
											"                \"customerName\",\r",
											"                \"customerContact\",\r",
											"                \"customerAddress\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"bolRequestId\",\r",
											"            \"mot\",\r",
											"            \"bolNumber\",\r",
											"            \"portOfLading\",\r",
											"            \"portOfUnlading\",\r",
											"            \"customer\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"bol\"\r",
											"  ]\r",
											"}\r",
											"//schema test\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"pm.test('requesttest:rSchema is valid', function () {\r",
											"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
											"\r",
											"});\r",
											"\r",
											"pm.test('requesttest:BOL request id validation length test', function () {\r",
											"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
											"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData=pm.response.json();\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('error message Displayed', function () {\r",
											"   pm.expect(jsonData.errMessage).to.eql(\"Transaction rolled back because it has been marked as rollback-only\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "kxToken",
										"value": "{{P44token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"RAIL\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"{{hs}}\",\r\n                \"houseBolNumber\": \"{{hb}}\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
									"protocol": "https",
									"host": [
										"api",
										"klearnow",
										"com"
									],
									"path": [
										"api-staging",
										"v1",
										"submitbol"
									]
								}
							},
							"response": []
						},
						{
							"name": "User submit BOL when portArrivalEpoch length is more than 32 for portOfUnlading",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"var currentTime = Math.floor(Date.now() / 1000);\r",
											"pm.environment.set(\"epochTime\", currentTime);\r",
											"//random data \r",
											"var random = Math.random().toString(36).substring(2, 36);\r",
											"\r",
											"var useremail=\"P44\"+random;\r",
											"var username=\"M\"+random;\r",
											"var mscac=random;\r",
											"var random1 =Math.random().toString(12).substring(2,5);\r",
											"var hscac= random1;\r",
											"var hbl= \"H\"+random1;\r",
											"\r",
											"pm.environment.set(\"id\",useremail);\r",
											"pm.environment.set(\"id1\",username);\r",
											"pm.environment.set(\"ms\",mscac);\r",
											"pm.environment.set(\"hs\",hscac);\r",
											"pm.environment.set(\"hb\",hbl);\r",
											"\r",
											"\r",
											"// Set the request body\r",
											"\r",
											"var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"bol\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"bolRequestId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mot\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"bolNumber\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"masterScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"masterBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"masterScac\",\r",
											"                \"masterBolNumber\",\r",
											"                \"houseScac\",\r",
											"                \"houseBolNumber\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfLading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfUnlading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"customer\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"customerTrackingId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerEINNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerContact\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerAddress\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"customerTrackingId\",\r",
											"                \"customerEINNumber\",\r",
											"                \"customerName\",\r",
											"                \"customerContact\",\r",
											"                \"customerAddress\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"bolRequestId\",\r",
											"            \"mot\",\r",
											"            \"bolNumber\",\r",
											"            \"portOfLading\",\r",
											"            \"portOfUnlading\",\r",
											"            \"customer\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"bol\"\r",
											"  ]\r",
											"}\r",
											"//schema test\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"pm.test('requesttest:rSchema is valid', function () {\r",
											"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
											"\r",
											"});\r",
											"\r",
											"pm.test('requesttest:BOL request id validation length test', function () {\r",
											"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
											"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData=pm.response.json();\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('error message Displayed', function () {\r",
											"   pm.expect(jsonData.errMessage).to.eql(\"Transaction rolled back because it has been marked as rollback-only\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "kxToken",
										"value": "{{P44token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"RAIL\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"{{hs}}\",\r\n                \"houseBolNumber\": \"{{hb}}\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
									"protocol": "https",
									"host": [
										"api",
										"klearnow",
										"com"
									],
									"path": [
										"api-staging",
										"v1",
										"submitbol"
									]
								}
							},
							"response": []
						},
						{
							"name": "User submit BOL when customerTrackingId length is more than 32",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"var currentTime = Math.floor(Date.now() / 1000);\r",
											"pm.environment.set(\"epochTime\", currentTime);\r",
											"//random data \r",
											"var random = Math.random().toString(36).substring(2, 36);\r",
											"\r",
											"var useremail=\"P44\"+random;\r",
											"var username=\"M\"+random;\r",
											"var mscac=random;\r",
											"var random1 =Math.random().toString(12).substring(2,5);\r",
											"var hscac= random1;\r",
											"var hbl= \"H\"+random1;\r",
											"\r",
											"pm.environment.set(\"id\",useremail);\r",
											"pm.environment.set(\"id1\",username);\r",
											"pm.environment.set(\"ms\",mscac);\r",
											"pm.environment.set(\"hs\",hscac);\r",
											"pm.environment.set(\"hb\",hbl);\r",
											"\r",
											"\r",
											"// Set the request body\r",
											"\r",
											"var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"bol\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"bolRequestId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mot\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"bolNumber\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"masterScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"masterBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"masterScac\",\r",
											"                \"masterBolNumber\",\r",
											"                \"houseScac\",\r",
											"                \"houseBolNumber\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfLading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfUnlading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"customer\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"customerTrackingId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerEINNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerContact\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerAddress\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"customerTrackingId\",\r",
											"                \"customerEINNumber\",\r",
											"                \"customerName\",\r",
											"                \"customerContact\",\r",
											"                \"customerAddress\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"bolRequestId\",\r",
											"            \"mot\",\r",
											"            \"bolNumber\",\r",
											"            \"portOfLading\",\r",
											"            \"portOfUnlading\",\r",
											"            \"customer\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"bol\"\r",
											"  ]\r",
											"}\r",
											"//schema test\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"pm.test('requesttest:rSchema is valid', function () {\r",
											"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
											"\r",
											"});\r",
											"\r",
											"pm.test('requesttest:BOL request id validation length test', function () {\r",
											"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
											"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData=pm.response.json();\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('error message Displayed', function () {\r",
											"   pm.expect(jsonData.errMessage).to.eql(\"Transaction rolled back because it has been marked as rollback-only\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "kxToken",
										"value": "{{P44token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"RAIL\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"{{hs}}\",\r\n                \"houseBolNumber\": \"{{hb}}\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
									"protocol": "https",
									"host": [
										"api",
										"klearnow",
										"com"
									],
									"path": [
										"api-staging",
										"v1",
										"submitbol"
									]
								}
							},
							"response": []
						},
						{
							"name": "User submit BOL when customerEINNumber length is more than 12",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"var currentTime = Math.floor(Date.now() / 1000);\r",
											"pm.environment.set(\"epochTime\", currentTime);\r",
											"//random data \r",
											"var random = Math.random().toString(36).substring(2, 36);\r",
											"\r",
											"var useremail=\"P44\"+random;\r",
											"var username=\"M\"+random;\r",
											"var mscac=random;\r",
											"var random1 =Math.random().toString(12).substring(2,5);\r",
											"var hscac= random1;\r",
											"var hbl= \"H\"+random1;\r",
											"\r",
											"pm.environment.set(\"id\",useremail);\r",
											"pm.environment.set(\"id1\",username);\r",
											"pm.environment.set(\"ms\",mscac);\r",
											"pm.environment.set(\"hs\",hscac);\r",
											"pm.environment.set(\"hb\",hbl);\r",
											"\r",
											"\r",
											"// Set the request body\r",
											"\r",
											"var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"bol\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"bolRequestId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mot\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"bolNumber\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"masterScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"masterBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"masterScac\",\r",
											"                \"masterBolNumber\",\r",
											"                \"houseScac\",\r",
											"                \"houseBolNumber\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfLading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfUnlading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"customer\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"customerTrackingId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerEINNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerContact\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerAddress\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"customerTrackingId\",\r",
											"                \"customerEINNumber\",\r",
											"                \"customerName\",\r",
											"                \"customerContact\",\r",
											"                \"customerAddress\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"bolRequestId\",\r",
											"            \"mot\",\r",
											"            \"bolNumber\",\r",
											"            \"portOfLading\",\r",
											"            \"portOfUnlading\",\r",
											"            \"customer\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"bol\"\r",
											"  ]\r",
											"}\r",
											"//schema test\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"pm.test('requesttest:rSchema is valid', function () {\r",
											"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
											"\r",
											"});\r",
											"\r",
											"pm.test('requesttest:BOL request id validation length test', function () {\r",
											"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
											"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData=pm.response.json();\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('error message Displayed', function () {\r",
											"   pm.expect(jsonData.errMessage).to.eql(\"Transaction rolled back because it has been marked as rollback-only\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "kxToken",
										"value": "{{P44token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"RAIL\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"{{hs}}\",\r\n                \"houseBolNumber\": \"{{hb}}\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
									"protocol": "https",
									"host": [
										"api",
										"klearnow",
										"com"
									],
									"path": [
										"api-staging",
										"v1",
										"submitbol"
									]
								}
							},
							"response": []
						},
						{
							"name": "User submit BOL when customerName length is more than 128",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"var currentTime = Math.floor(Date.now() / 1000);\r",
											"pm.environment.set(\"epochTime\", currentTime);\r",
											"//random data \r",
											"var random = Math.random().toString(36).substring(2, 36);\r",
											"\r",
											"var useremail=\"P44\"+random;\r",
											"var username=\"M\"+random;\r",
											"var mscac=random;\r",
											"var random1 =Math.random().toString(12).substring(2,5);\r",
											"var hscac= random1;\r",
											"var hbl= \"H\"+random1;\r",
											"\r",
											"pm.environment.set(\"id\",useremail);\r",
											"pm.environment.set(\"id1\",username);\r",
											"pm.environment.set(\"ms\",mscac);\r",
											"pm.environment.set(\"hs\",hscac);\r",
											"pm.environment.set(\"hb\",hbl);\r",
											"\r",
											"\r",
											"// Set the request body\r",
											"\r",
											"var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"bol\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"bolRequestId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mot\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"bolNumber\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"masterScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"masterBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"masterScac\",\r",
											"                \"masterBolNumber\",\r",
											"                \"houseScac\",\r",
											"                \"houseBolNumber\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfLading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfUnlading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"customer\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"customerTrackingId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerEINNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerContact\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerAddress\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"customerTrackingId\",\r",
											"                \"customerEINNumber\",\r",
											"                \"customerName\",\r",
											"                \"customerContact\",\r",
											"                \"customerAddress\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"bolRequestId\",\r",
											"            \"mot\",\r",
											"            \"bolNumber\",\r",
											"            \"portOfLading\",\r",
											"            \"portOfUnlading\",\r",
											"            \"customer\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"bol\"\r",
											"  ]\r",
											"}\r",
											"//schema test\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"pm.test('requesttest:rSchema is valid', function () {\r",
											"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
											"\r",
											"});\r",
											"\r",
											"pm.test('requesttest:BOL request id validation length test', function () {\r",
											"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
											"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData=pm.response.json();\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('error message Displayed', function () {\r",
											"   pm.expect(jsonData.errMessage).to.eql(\"Transaction rolled back because it has been marked as rollback-only\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "kxToken",
										"value": "{{P44token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"RAIL\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"{{hs}}\",\r\n                \"houseBolNumber\": \"{{hb}}\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
									"protocol": "https",
									"host": [
										"api",
										"klearnow",
										"com"
									],
									"path": [
										"api-staging",
										"v1",
										"submitbol"
									]
								}
							},
							"response": []
						},
						{
							"name": "User submit BOL when customerContact length is more than 64",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"var currentTime = Math.floor(Date.now() / 1000);\r",
											"pm.environment.set(\"epochTime\", currentTime);\r",
											"//random data \r",
											"var random = Math.random().toString(36).substring(2, 36);\r",
											"\r",
											"var useremail=\"P44\"+random;\r",
											"var username=\"M\"+random;\r",
											"var mscac=random;\r",
											"var random1 =Math.random().toString(12).substring(2,5);\r",
											"var hscac= random1;\r",
											"var hbl= \"H\"+random1;\r",
											"\r",
											"pm.environment.set(\"id\",useremail);\r",
											"pm.environment.set(\"id1\",username);\r",
											"pm.environment.set(\"ms\",mscac);\r",
											"pm.environment.set(\"hs\",hscac);\r",
											"pm.environment.set(\"hb\",hbl);\r",
											"\r",
											"\r",
											"// Set the request body\r",
											"\r",
											"var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"bol\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"bolRequestId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mot\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"bolNumber\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"masterScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"masterBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"masterScac\",\r",
											"                \"masterBolNumber\",\r",
											"                \"houseScac\",\r",
											"                \"houseBolNumber\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfLading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfUnlading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"customer\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"customerTrackingId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerEINNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerContact\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerAddress\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"customerTrackingId\",\r",
											"                \"customerEINNumber\",\r",
											"                \"customerName\",\r",
											"                \"customerContact\",\r",
											"                \"customerAddress\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"bolRequestId\",\r",
											"            \"mot\",\r",
											"            \"bolNumber\",\r",
											"            \"portOfLading\",\r",
											"            \"portOfUnlading\",\r",
											"            \"customer\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"bol\"\r",
											"  ]\r",
											"}\r",
											"//schema test\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"pm.test('requesttest:rSchema is valid', function () {\r",
											"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
											"\r",
											"});\r",
											"\r",
											"pm.test('requesttest:BOL request id validation length test', function () {\r",
											"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
											"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData=pm.response.json();\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('error message Displayed', function () {\r",
											"   pm.expect(jsonData.errMessage).to.eql(\"Transaction rolled back because it has been marked as rollback-only\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "kxToken",
										"value": "{{P44token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"RAIL\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"{{hs}}\",\r\n                \"houseBolNumber\": \"{{hb}}\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
									"protocol": "https",
									"host": [
										"api",
										"klearnow",
										"com"
									],
									"path": [
										"api-staging",
										"v1",
										"submitbol"
									]
								}
							},
							"response": []
						},
						{
							"name": "User submit BOL when customerAddress length is more than 256",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"\r",
											"var random = Math.random().toString(36).substring(2, 36);\r",
											"\r",
											"var useremail=\"P44\"+random;\r",
											"var username=\"M\"+random;\r",
											"var mscac=random;\r",
											"var random1 =Math.random().toString(12).substring(2,5);\r",
											"var hscac= random1;\r",
											"var hbl= \"H\"+random1;\r",
											"\r",
											"pm.environment.set(\"id\",useremail);\r",
											"pm.environment.set(\"id1\",username);\r",
											"pm.environment.set(\"ms\",mscac);\r",
											"pm.environment.set(\"hs\",hscac);\r",
											"pm.environment.set(\"hb\",hbl);\r",
											"\r",
											"\r",
											"// Set the request body\r",
											"\r",
											"var schema ={\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"object\",\r",
											"  \"properties\": {\r",
											"    \"bol\": {\r",
											"      \"type\": \"array\",\r",
											"      \"items\": [\r",
											"        {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"bolRequestId\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"mot\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"bolNumber\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"masterScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"masterBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseScac\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"houseBolNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"masterScac\",\r",
											"                \"masterBolNumber\",\r",
											"                \"houseScac\",\r",
											"                \"houseBolNumber\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfLading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"portOfUnlading\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"portCode\": {\r",
											"                  \"type\": \"integer\"\r",
											"                },\r",
											"                \"portName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"countryISOCode\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"portArrivalEpoch\": {\r",
											"                  \"type\": \"integer\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"portCode\",\r",
											"                \"portName\",\r",
											"                \"countryISOCode\",\r",
											"                \"portArrivalEpoch\"\r",
											"              ]\r",
											"            },\r",
											"            \"customer\": {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"customerTrackingId\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerEINNumber\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerName\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerContact\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"customerAddress\": {\r",
											"                  \"type\": \"string\"\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"customerTrackingId\",\r",
											"                \"customerEINNumber\",\r",
											"                \"customerName\",\r",
											"                \"customerContact\",\r",
											"                \"customerAddress\"\r",
											"              ]\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"bolRequestId\",\r",
											"            \"mot\",\r",
											"            \"bolNumber\",\r",
											"            \"portOfLading\",\r",
											"            \"portOfUnlading\",\r",
											"            \"customer\"\r",
											"          ]\r",
											"        }\r",
											"      ]\r",
											"    }\r",
											"  },\r",
											"  \"required\": [\r",
											"    \"bol\"\r",
											"  ]\r",
											"}\r",
											"//schema test\r",
											"const reqBody=JSON.parse(pm.request.body.raw);\r",
											"pm.test('requesttest:rSchema is valid', function () {\r",
											"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
											"\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData=pm.response.json();\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test('error message Displayed', function () {\r",
											"   pm.expect(jsonData.errMessage).to.eql(\"Transaction rolled back because it has been marked as rollback-only\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "kxToken",
										"value": "{{P44token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"RAIL\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"{{hs}}\",\r\n                \"houseBolNumber\": \"{{hb}}\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
									"protocol": "https",
									"host": [
										"api",
										"klearnow",
										"com"
									],
									"path": [
										"api-staging",
										"v1",
										"submitbol"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "P44_LOGIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"pm.environment.set(\"P44token\",jsonData.kxToken);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  {\r\n    \"email\":\"deepa.choudhary@klearnow.com\",\r\n    \"password\":\"bol12345\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/login",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "SUBMIT VALID BOL without token (key & value)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var currentTime = Math.floor(Date.now() / 1000);\r",
									"var epoch=currentTime;\r",
									"pm.environment.set(\"e\",epoch);\r",
									"// Retrieve the value of the 'epochTime' environment variable\r",
									"var epochTime = pm.environment.get('e');\r",
									"\r",
									"\r",
									"//random data \r",
									"var random =Math.random().toString(14).substring(2,6);\r",
									"var useremail=\"P44\"+random;\r",
									"var username=\"M\"+random;\r",
									"var mscac=random;\r",
									"var random1 =Math.random().toString(12).substring(2,5);\r",
									"var hscac= random1;\r",
									"var hbl= \"H\"+random1;\r",
									"\r",
									"pm.environment.set(\"id\",useremail);\r",
									"pm.environment.set(\"id1\",username);\r",
									"pm.environment.set(\"ms\",mscac);\r",
									"pm.environment.set(\"hs\",hscac);\r",
									"pm.environment.set(\"hb\",hbl);\r",
									"\r",
									"\r",
									"// Set the request body\r",
									"\r",
									"var schema =\r",
									"{\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"bol\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"bolRequestId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"mot\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"bolNumber\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"masterScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"masterBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"masterScac\",\r",
									"                \"masterBolNumber\",\r",
									"                \"houseScac\",\r",
									"                \"houseBolNumber\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfLading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfUnlading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"customer\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"customerTrackingId\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerEINNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerContact\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerAddress\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"customerTrackingId\",\r",
									"                \"customerEINNumber\",\r",
									"                \"customerName\",\r",
									"                \"customerContact\",\r",
									"                \"customerAddress\"\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"bolRequestId\",\r",
									"            \"mot\",\r",
									"            \"bolNumber\",\r",
									"            \"portOfLading\",\r",
									"            \"portOfUnlading\",\r",
									"            \"customer\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"bol\"\r",
									"  ]\r",
									"}\r",
									"//schema test\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('requesttest:rSchema is valid', function () {\r",
									"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
									"\r",
									"});\r",
									"//datatype test\r",
									"// pm.test('requesttest:BOL request id validation length test', function () {\r",
									"//    pm.expect(reqBody.eventMessage.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
									"//    pm.expect(reqBody.eventMessage.bol[0].bolRequestId.length).to.be.below(33);\r",
									"// });\r",
									"\r",
									"pm.environment.set(\"MA\",reqBody.bol[0].bolNumber.masterBolNumber);\r",
									"pm.environment.set(\"Ms\",reqBody.bol[0].bolNumber.masterScac);\r",
									"pm.environment.set(\"P\",reqBody.bol[0].portOfUnlading.portCode);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"const jsonData=pm.response.json();\r",
									"pm.test('Missing mandatory field  errMessage', function () {\r",
									"   pm.expect(jsonData.errMessage).to.be.a(\"String\");\r",
									"   pm.expect(jsonData.errMessage,\"wrong error message\").to.include(\"Missing KxToken in request.\");\r",
									"});\r",
									"\r",
									" //header validation\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"haeder value is present\", function () {\r",
									"   pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"SEA\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"i12345\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"\",\r\n                \"houseBolNumber\": \"\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 12345\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"submitbol"
							]
						}
					},
					"response": []
				},
				{
					"name": "SUBMIT VALID BOL without token (value)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var currentTime = Math.floor(Date.now() / 1000);\r",
									"var epoch=currentTime;\r",
									"pm.environment.set(\"e\",epoch);\r",
									"// Retrieve the value of the 'epochTime' environment variable\r",
									"var epochTime = pm.environment.get('e');\r",
									"\r",
									"\r",
									"//random data \r",
									"var random =Math.random().toString(14).substring(2,6);\r",
									"var useremail=\"P44\"+random;\r",
									"var username=\"M\"+random;\r",
									"var mscac=random;\r",
									"var random1 =Math.random().toString(12).substring(2,5);\r",
									"var hscac= random1;\r",
									"var hbl= \"H\"+random1;\r",
									"\r",
									"pm.environment.set(\"id\",useremail);\r",
									"pm.environment.set(\"id1\",username);\r",
									"pm.environment.set(\"ms\",mscac);\r",
									"pm.environment.set(\"hs\",hscac);\r",
									"pm.environment.set(\"hb\",hbl);\r",
									"\r",
									"\r",
									"// Set the request body\r",
									"\r",
									"var schema =\r",
									"{\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"bol\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"bolRequestId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"mot\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"bolNumber\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"masterScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"masterBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"masterScac\",\r",
									"                \"masterBolNumber\",\r",
									"                \"houseScac\",\r",
									"                \"houseBolNumber\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfLading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfUnlading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"customer\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"customerTrackingId\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerEINNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerContact\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerAddress\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"customerTrackingId\",\r",
									"                \"customerEINNumber\",\r",
									"                \"customerName\",\r",
									"                \"customerContact\",\r",
									"                \"customerAddress\"\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"bolRequestId\",\r",
									"            \"mot\",\r",
									"            \"bolNumber\",\r",
									"            \"portOfLading\",\r",
									"            \"portOfUnlading\",\r",
									"            \"customer\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"bol\"\r",
									"  ]\r",
									"}\r",
									"//schema test\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('requesttest:rSchema is valid', function () {\r",
									"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
									"\r",
									"});\r",
									"//datatype test\r",
									"// pm.test('requesttest:BOL request id validation length test', function () {\r",
									"//    pm.expect(reqBody.eventMessage.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
									"//    pm.expect(reqBody.eventMessage.bol[0].bolRequestId.length).to.be.below(33);\r",
									"// });\r",
									"\r",
									"pm.environment.set(\"MA\",reqBody.bol[0].bolNumber.masterBolNumber);\r",
									"pm.environment.set(\"Ms\",reqBody.bol[0].bolNumber.masterScac);\r",
									"pm.environment.set(\"P\",reqBody.bol[0].portOfUnlading.portCode);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"const jsonData=pm.response.json();\r",
									"pm.test('Missing mandatory field  errMessage', function () {\r",
									"   pm.expect(jsonData.errMessage).to.be.a(\"String\");\r",
									"   pm.expect(jsonData.errMessage,\"wrong error message\").to.include(\"Event not allowed for user\");\r",
									"});\r",
									"\r",
									" //header validation\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"haeder value is present\", function () {\r",
									"   pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxToken",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"SEA\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"i12345\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"\",\r\n                \"houseBolNumber\": \"\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 12345\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"submitbol"
							]
						}
					},
					"response": []
				},
				{
					"name": "SUBMIT VALID BOL with wrong token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var currentTime = Math.floor(Date.now() / 1000);\r",
									"var epoch=currentTime;\r",
									"pm.environment.set(\"e\",epoch);\r",
									"// Retrieve the value of the 'epochTime' environment variable\r",
									"var epochTime = pm.environment.get('e');\r",
									"\r",
									"\r",
									"//random data \r",
									"var random =Math.random().toString(14).substring(2,6);\r",
									"var useremail=\"P44\"+random;\r",
									"var username=\"M\"+random;\r",
									"var mscac=random;\r",
									"var random1 =Math.random().toString(12).substring(2,5);\r",
									"var hscac= random1;\r",
									"var hbl= \"H\"+random1;\r",
									"\r",
									"pm.environment.set(\"id\",useremail);\r",
									"pm.environment.set(\"id1\",username);\r",
									"pm.environment.set(\"ms\",mscac);\r",
									"pm.environment.set(\"hs\",hscac);\r",
									"pm.environment.set(\"hb\",hbl);\r",
									"\r",
									"\r",
									"// Set the request body\r",
									"\r",
									"var schema =\r",
									"{\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"bol\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"bolRequestId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"mot\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"bolNumber\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"masterScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"masterBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"masterScac\",\r",
									"                \"masterBolNumber\",\r",
									"                \"houseScac\",\r",
									"                \"houseBolNumber\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfLading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfUnlading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"customer\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"customerTrackingId\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerEINNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerContact\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerAddress\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"customerTrackingId\",\r",
									"                \"customerEINNumber\",\r",
									"                \"customerName\",\r",
									"                \"customerContact\",\r",
									"                \"customerAddress\"\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"bolRequestId\",\r",
									"            \"mot\",\r",
									"            \"bolNumber\",\r",
									"            \"portOfLading\",\r",
									"            \"portOfUnlading\",\r",
									"            \"customer\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"bol\"\r",
									"  ]\r",
									"}\r",
									"//schema test\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('requesttest:rSchema is valid', function () {\r",
									"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
									"\r",
									"});\r",
									"//datatype test\r",
									"// pm.test('requesttest:BOL request id validation length test', function () {\r",
									"//    pm.expect(reqBody.eventMessage.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
									"//    pm.expect(reqBody.eventMessage.bol[0].bolRequestId.length).to.be.below(33);\r",
									"// });\r",
									"\r",
									"pm.environment.set(\"MA\",reqBody.bol[0].bolNumber.masterBolNumber);\r",
									"pm.environment.set(\"Ms\",reqBody.bol[0].bolNumber.masterScac);\r",
									"pm.environment.set(\"P\",reqBody.bol[0].portOfUnlading.portCode);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"const jsonData=pm.response.json();\r",
									"pm.test('Missing mandatory field  errMessage', function () {\r",
									"   pm.expect(jsonData.errMessage).to.be.a(\"String\");\r",
									"   pm.expect(jsonData.errMessage,\"wrong error message\").to.include(\"Expired token used in request\");\r",
									"});\r",
									"\r",
									" //header validation\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"haeder value is present\", function () {\r",
									"   pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxToken",
								"value": "KXID",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"SEA\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"i12345\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"\",\r\n                \"houseBolNumber\": \"\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 12345\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"submitbol"
							]
						}
					},
					"response": []
				},
				{
					"name": "User submit new BOL for OCEAN MOT",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var currentTime = Math.floor(Date.now() / 1000);\r",
									"pm.environment.set(\"epochTime\", currentTime);\r",
									"//random data \r",
									"var random =Math.random().toString(14).substring(2,6);\r",
									"var useremail=\"L44\"+random;\r",
									"var username=\"M\"+random;\r",
									"var mscac=random;\r",
									"var random1 =Math.random().toString(12).substring(2,5);\r",
									"var hscac= random1;\r",
									"var hbl= \"H\"+random1;\r",
									"\r",
									"pm.environment.set(\"id\",useremail);\r",
									"pm.environment.set(\"id1\",username);\r",
									"pm.environment.set(\"ms\",mscac);\r",
									"pm.environment.set(\"hs\",hscac);\r",
									"pm.environment.set(\"hb\",hbl);\r",
									"\r",
									"\r",
									"// Set the request body\r",
									"\r",
									"var schema ={\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"bol\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"bolRequestId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"mot\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"bolNumber\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"masterScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"masterBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"masterScac\",\r",
									"                \"masterBolNumber\",\r",
									"                \"houseScac\",\r",
									"                \"houseBolNumber\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfLading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfUnlading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"customer\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"customerTrackingId\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerEINNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerContact\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerAddress\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"customerTrackingId\",\r",
									"                \"customerEINNumber\",\r",
									"                \"customerName\",\r",
									"                \"customerContact\",\r",
									"                \"customerAddress\"\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"bolRequestId\",\r",
									"            \"mot\",\r",
									"            \"bolNumber\",\r",
									"            \"portOfLading\",\r",
									"            \"portOfUnlading\",\r",
									"            \"customer\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"bol\"\r",
									"  ]\r",
									"}\r",
									"//schema test\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('requesttest:rSchema is valid', function () {\r",
									"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('requesttest:BOL request id validation length test', function () {\r",
									"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
									"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"M\",reqBody.bol[0].bolNumber.masterBolNumber);\r",
									"pm.environment.set(\"MSC\",reqBody.bol[0].bolNumber.masterScac);\r",
									"pm.environment.set(\"P\",reqBody.bol[0].portOfUnlading.portCode);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].bolRequestId).to.eql(reqBody.bol[0].bolRequestId);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('Success test', function () {\r",
									"   pm.expect(jsonData[0].messageTypeCode).to.eql(\"SUCCESSFUL\");\r",
									"});\r",
									"\r",
									"pm.test('Text test', function () {\r",
									"   pm.expect(jsonData[0].text).to.eql(\"Scheduled\");\r",
									"});\r",
									"var a=jsonData[0].bolRequestId;\r",
									"pm.environment.set(\"REQUEST\",a);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxToken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"SEA\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"\",\r\n                \"houseBolNumber\": \"\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"submitbol"
							]
						}
					},
					"response": []
				},
				{
					"name": "User submit new BOL for AIR MOT",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var currentTime = Math.floor(Date.now() / 1000);\r",
									"pm.environment.set(\"epochTime\", currentTime);\r",
									"//random data \r",
									"var random =Math.random().toString(14).substring(2,6);\r",
									"var useremail=\"P44\"+random;\r",
									"var username=\"M\"+random;\r",
									"var mscac=random;\r",
									"var random1 =Math.random().toString(12).substring(2,5);\r",
									"var hscac= random1;\r",
									"var hbl= \"H\"+random1;\r",
									"\r",
									"pm.environment.set(\"id\",useremail);\r",
									"pm.environment.set(\"id1\",username);\r",
									"pm.environment.set(\"ms\",mscac);\r",
									"pm.environment.set(\"hs\",hscac);\r",
									"pm.environment.set(\"hb\",hbl);\r",
									"\r",
									"\r",
									"// Set the request body\r",
									"\r",
									"var schema ={\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"bol\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"bolRequestId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"mot\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"bolNumber\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"masterScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"masterBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"masterScac\",\r",
									"                \"masterBolNumber\",\r",
									"                \"houseScac\",\r",
									"                \"houseBolNumber\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfLading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfUnlading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"customer\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"customerTrackingId\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerEINNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerContact\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerAddress\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"customerTrackingId\",\r",
									"                \"customerEINNumber\",\r",
									"                \"customerName\",\r",
									"                \"customerContact\",\r",
									"                \"customerAddress\"\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"bolRequestId\",\r",
									"            \"mot\",\r",
									"            \"bolNumber\",\r",
									"            \"portOfLading\",\r",
									"            \"portOfUnlading\",\r",
									"            \"customer\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"bol\"\r",
									"  ]\r",
									"}\r",
									"//schema test\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('requesttest:rSchema is valid', function () {\r",
									"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('requesttest:BOL request id validation length test', function () {\r",
									"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
									"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"M\",reqBody.bol[0].bolNumber.masterBolNumber);\r",
									"pm.environment.set(\"MSC\",reqBody.bol[0].bolNumber.masterScac);\r",
									"pm.environment.set(\"P\",reqBody.bol[0].portOfUnlading.portCode);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].bolRequestId).to.eql(reqBody.bol[0].bolRequestId);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].messageTypeCode).to.eql(\"FAILURE\");\r",
									"});\r",
									"\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].text).to.eql(\"We do not support AIR at the moment\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxToken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"AIR\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"\",\r\n                \"houseBolNumber\": \"\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"submitbol"
							]
						}
					},
					"response": []
				},
				{
					"name": "User submit new BOL for TRUCK MOT",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var currentTime = Math.floor(Date.now() / 1000);\r",
									"pm.environment.set(\"epochTime\", currentTime);\r",
									"//random data \r",
									"var random =Math.random().toString(14).substring(2,6);\r",
									"var useremail=\"P44\"+random;\r",
									"var username=\"M\"+random;\r",
									"var mscac=random;\r",
									"var random1 =Math.random().toString(12).substring(2,5);\r",
									"var hscac= random1;\r",
									"var hbl= \"H\"+random1;\r",
									"\r",
									"pm.environment.set(\"id\",useremail);\r",
									"pm.environment.set(\"id1\",username);\r",
									"pm.environment.set(\"ms\",mscac);\r",
									"pm.environment.set(\"hs\",hscac);\r",
									"pm.environment.set(\"hb\",hbl);\r",
									"\r",
									"\r",
									"// Set the request body\r",
									"\r",
									"var schema ={\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"bol\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"bolRequestId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"mot\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"bolNumber\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"masterScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"masterBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"masterScac\",\r",
									"                \"masterBolNumber\",\r",
									"                \"houseScac\",\r",
									"                \"houseBolNumber\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfLading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfUnlading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"customer\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"customerTrackingId\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerEINNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerContact\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerAddress\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"customerTrackingId\",\r",
									"                \"customerEINNumber\",\r",
									"                \"customerName\",\r",
									"                \"customerContact\",\r",
									"                \"customerAddress\"\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"bolRequestId\",\r",
									"            \"mot\",\r",
									"            \"bolNumber\",\r",
									"            \"portOfLading\",\r",
									"            \"portOfUnlading\",\r",
									"            \"customer\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"bol\"\r",
									"  ]\r",
									"}\r",
									"//schema test\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('requesttest:rSchema is valid', function () {\r",
									"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('requesttest:BOL request id validation length test', function () {\r",
									"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
									"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"M\",reqBody.bol[0].bolNumber.masterBolNumber);\r",
									"pm.environment.set(\"MSC\",reqBody.bol[0].bolNumber.masterScac);\r",
									"pm.environment.set(\"P\",reqBody.bol[0].portOfUnlading.portCode);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].bolRequestId).to.eql(reqBody.bol[0].bolRequestId);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].messageTypeCode).to.eql(\"FAILURE\");\r",
									"});\r",
									"\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].text).to.eql(\"For Truck Mot House Bol Or House Scac is not required\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxToken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"TRUCK\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"{{hs}}\",\r\n                \"houseBolNumber\": \"{{hb}}\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"submitbol"
							]
						}
					},
					"response": []
				},
				{
					"name": "User submit new BOL for RAIL MOT",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var currentTime = Math.floor(Date.now() / 1000);\r",
									"pm.environment.set(\"epochTime\", currentTime);\r",
									"//random data \r",
									"var random =Math.random().toString(14).substring(2,6);\r",
									"var useremail=\"P44\"+random;\r",
									"var username=\"M\"+random;\r",
									"var mscac=random;\r",
									"var random1 =Math.random().toString(12).substring(2,5);\r",
									"var hscac= random1;\r",
									"var hbl= \"H\"+random1;\r",
									"\r",
									"pm.environment.set(\"id\",useremail);\r",
									"pm.environment.set(\"id1\",username);\r",
									"pm.environment.set(\"ms\",mscac);\r",
									"pm.environment.set(\"hs\",hscac);\r",
									"pm.environment.set(\"hb\",hbl);\r",
									"\r",
									"\r",
									"// Set the request body\r",
									"\r",
									"var schema ={\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"bol\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"bolRequestId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"mot\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"bolNumber\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"masterScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"masterBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"masterScac\",\r",
									"                \"masterBolNumber\",\r",
									"                \"houseScac\",\r",
									"                \"houseBolNumber\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfLading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfUnlading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"customer\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"customerTrackingId\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerEINNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerContact\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerAddress\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"customerTrackingId\",\r",
									"                \"customerEINNumber\",\r",
									"                \"customerName\",\r",
									"                \"customerContact\",\r",
									"                \"customerAddress\"\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"bolRequestId\",\r",
									"            \"mot\",\r",
									"            \"bolNumber\",\r",
									"            \"portOfLading\",\r",
									"            \"portOfUnlading\",\r",
									"            \"customer\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"bol\"\r",
									"  ]\r",
									"}\r",
									"//schema test\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('requesttest:rSchema is valid', function () {\r",
									"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('requesttest:BOL request id validation length test', function () {\r",
									"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
									"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].bolRequestId).to.eql(reqBody.bol[0].bolRequestId);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].messageTypeCode).to.eql(\"SUCCESSFUL\");\r",
									"});\r",
									"\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].text).to.eql(\"Scheduled\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxToken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"RAIL\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"\",\r\n                \"houseBolNumber\": \"\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"submitbol"
							]
						}
					},
					"response": []
				},
				{
					"name": "User submit invalid BOL",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var currentTime = Math.floor(Date.now() / 1000);\r",
									"pm.environment.set(\"epochTime\", currentTime);\r",
									"//random data \r",
									"var random =Math.random().toString(14).substring(2,6);\r",
									"var useremail=\"P44\"+random;\r",
									"var username=\"M\"+random;\r",
									"var mscac=random;\r",
									"var random1 =Math.random().toString(12).substring(2,8);\r",
									"var hscac= random1;\r",
									"var hbl= \"H\"+random1;\r",
									"\r",
									"pm.environment.set(\"id\",useremail);\r",
									"pm.environment.set(\"id1\",username);\r",
									"pm.environment.set(\"ms\",mscac);\r",
									"pm.environment.set(\"hs\",hscac);\r",
									"pm.environment.set(\"hb\",hbl);\r",
									"\r",
									"\r",
									"// Set the request body\r",
									"\r",
									"var schema ={\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"bol\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"bolRequestId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"mot\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"bolNumber\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"masterScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"masterBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"masterScac\",\r",
									"                \"masterBolNumber\",\r",
									"                \"houseScac\",\r",
									"                \"houseBolNumber\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfLading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfUnlading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"customer\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"customerTrackingId\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerEINNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerContact\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerAddress\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"customerTrackingId\",\r",
									"                \"customerEINNumber\",\r",
									"                \"customerName\",\r",
									"                \"customerContact\",\r",
									"                \"customerAddress\"\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"bolRequestId\",\r",
									"            \"mot\",\r",
									"            \"bolNumber\",\r",
									"            \"portOfLading\",\r",
									"            \"portOfUnlading\",\r",
									"            \"customer\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"bol\"\r",
									"  ]\r",
									"}\r",
									"//schema test\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('requesttest:rSchema is valid', function () {\r",
									"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('requesttest:BOL request id validation length test', function () {\r",
									"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
									"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"M\",reqBody.bol[0].bolNumber.masterBolNumber);\r",
									"pm.environment.set(\"MSC\",reqBody.bol[0].bolNumber.masterScac);\r",
									"pm.environment.set(\"P\",reqBody.bol[0].portOfUnlading.portCode);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('error message Displayed', function () {\r",
									"   pm.expect(jsonData.errMessage).to.eql(\"Transaction rolled back because it has been marked as rollback-only\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxToken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"RAIL\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"{{hs}}\",\r\n                \"houseBolNumber\": \"{{hb}}\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"submitbol"
							]
						}
					},
					"response": []
				},
				{
					"name": "USER should not be allowed to submit BOL with blank field- masterBolNumber",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var currentTime = Math.floor(Date.now() / 1000);\r",
									"pm.environment.set(\"epochTime\", currentTime);\r",
									"//random data \r",
									"var random =Math.random().toString(14).substring(2,6);\r",
									"var useremail=\"P44\"+random;\r",
									"var username=\"M\"+random;\r",
									"var mscac=random;\r",
									"var random1 =Math.random().toString(12).substring(2,5);\r",
									"var hscac= random1;\r",
									"var hbl= \"H\"+random1;\r",
									"\r",
									"pm.environment.set(\"id\",useremail);\r",
									"pm.environment.set(\"id1\",username);\r",
									"pm.environment.set(\"ms\",mscac);\r",
									"pm.environment.set(\"hs\",hscac);\r",
									"pm.environment.set(\"hb\",hbl);\r",
									"\r",
									"\r",
									"// Set the request body\r",
									"\r",
									"var schema ={\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"bol\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"bolRequestId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"mot\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"bolNumber\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"masterScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"masterBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"masterScac\",\r",
									"                \"masterBolNumber\",\r",
									"                \"houseScac\",\r",
									"                \"houseBolNumber\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfLading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfUnlading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"customer\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"customerTrackingId\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerEINNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerContact\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerAddress\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"customerTrackingId\",\r",
									"                \"customerEINNumber\",\r",
									"                \"customerName\",\r",
									"                \"customerContact\",\r",
									"                \"customerAddress\"\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"bolRequestId\",\r",
									"            \"mot\",\r",
									"            \"bolNumber\",\r",
									"            \"portOfLading\",\r",
									"            \"portOfUnlading\",\r",
									"            \"customer\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"bol\"\r",
									"  ]\r",
									"}\r",
									"//schema test\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('requesttest:rSchema is valid', function () {\r",
									"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('requesttest:BOL request id validation length test', function () {\r",
									"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
									"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"M\",reqBody.bol[0].bolNumber.masterBolNumber);\r",
									"pm.environment.set(\"MSC\",reqBody.bol[0].bolNumber.masterScac);\r",
									"pm.environment.set(\"P\",reqBody.bol[0].portOfUnlading.portCode);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].bolRequestId).to.eql(reqBody.bol[0].bolRequestId);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].messageTypeCode).to.eql(\"FAILURE\");\r",
									"});\r",
									"\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].text).to.eql(\"Master Bol and Master Scac Both are Mandatory\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxToken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"SEA\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"\",\r\n                \"houseScac\": \"\",\r\n                \"houseBolNumber\": \"\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"submitbol"
							]
						}
					},
					"response": []
				},
				{
					"name": "USER should not be allowed to submit BOL with blank request id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var currentTime = Math.floor(Date.now() / 1000);\r",
									"pm.environment.set(\"epochTime\", currentTime);\r",
									"//random data \r",
									"var random =Math.random().toString(14).substring(2,6);\r",
									"var useremail=\"P44\"+random;\r",
									"var username=\"M\"+random;\r",
									"var mscac=random;\r",
									"var random1 =Math.random().toString(12).substring(2,5);\r",
									"var hscac= random1;\r",
									"var hbl= \"H\"+random1;\r",
									"\r",
									"pm.environment.set(\"id\",useremail);\r",
									"pm.environment.set(\"id1\",username);\r",
									"pm.environment.set(\"ms\",mscac);\r",
									"pm.environment.set(\"hs\",hscac);\r",
									"pm.environment.set(\"hb\",hbl);\r",
									"\r",
									"\r",
									"// Set the request body\r",
									"\r",
									"var schema ={\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"bol\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"bolRequestId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"mot\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"bolNumber\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"masterScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"masterBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"masterScac\",\r",
									"                \"masterBolNumber\",\r",
									"                \"houseScac\",\r",
									"                \"houseBolNumber\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfLading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfUnlading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"customer\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"customerTrackingId\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerEINNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerContact\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerAddress\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"customerTrackingId\",\r",
									"                \"customerEINNumber\",\r",
									"                \"customerName\",\r",
									"                \"customerContact\",\r",
									"                \"customerAddress\"\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"bolRequestId\",\r",
									"            \"mot\",\r",
									"            \"bolNumber\",\r",
									"            \"portOfLading\",\r",
									"            \"portOfUnlading\",\r",
									"            \"customer\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"bol\"\r",
									"  ]\r",
									"}\r",
									"//schema test\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('requesttest:rSchema is valid', function () {\r",
									"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('requesttest:BOL request id validation length test', function () {\r",
									"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
									"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"M\",reqBody.bol[0].bolNumber.masterBolNumber);\r",
									"pm.environment.set(\"MSC\",reqBody.bol[0].bolNumber.masterScac);\r",
									"pm.environment.set(\"P\",reqBody.bol[0].portOfUnlading.portCode);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].messageTypeCode).to.eql(\"FAILURE\");\r",
									"});\r",
									"\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].text).to.eql(\"Bol RequestId is Mandatory\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxToken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"\",\r\n            \"mot\": \"SEA\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"\",\r\n                \"houseBolNumber\": \"\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"submitbol"
							]
						}
					},
					"response": []
				},
				{
					"name": "USER should not be allowed to submit BOL with blank masterScac",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var currentTime = Math.floor(Date.now() / 1000);\r",
									"pm.environment.set(\"epochTime\", currentTime);\r",
									"//random data \r",
									"var random =Math.random().toString(14).substring(2,6);\r",
									"var useremail=\"P44\"+random;\r",
									"var username=\"M\"+random;\r",
									"var mscac=random;\r",
									"var random1 =Math.random().toString(12).substring(2,5);\r",
									"var hscac= random1;\r",
									"var hbl= \"H\"+random1;\r",
									"\r",
									"pm.environment.set(\"id\",useremail);\r",
									"pm.environment.set(\"id1\",username);\r",
									"pm.environment.set(\"ms\",mscac);\r",
									"pm.environment.set(\"hs\",hscac);\r",
									"pm.environment.set(\"hb\",hbl);\r",
									"\r",
									"\r",
									"// Set the request body\r",
									"\r",
									"var schema ={\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"bol\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"bolRequestId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"mot\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"bolNumber\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"masterScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"masterBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"masterScac\",\r",
									"                \"masterBolNumber\",\r",
									"                \"houseScac\",\r",
									"                \"houseBolNumber\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfLading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfUnlading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"customer\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"customerTrackingId\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerEINNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerContact\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerAddress\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"customerTrackingId\",\r",
									"                \"customerEINNumber\",\r",
									"                \"customerName\",\r",
									"                \"customerContact\",\r",
									"                \"customerAddress\"\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"bolRequestId\",\r",
									"            \"mot\",\r",
									"            \"bolNumber\",\r",
									"            \"portOfLading\",\r",
									"            \"portOfUnlading\",\r",
									"            \"customer\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"bol\"\r",
									"  ]\r",
									"}\r",
									"//schema test\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('requesttest:rSchema is valid', function () {\r",
									"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('requesttest:BOL request id validation length test', function () {\r",
									"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
									"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"M\",reqBody.bol[0].bolNumber.masterBolNumber);\r",
									"pm.environment.set(\"MSC\",reqBody.bol[0].bolNumber.masterScac);\r",
									"pm.environment.set(\"P\",reqBody.bol[0].portOfUnlading.portCode);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].bolRequestId).to.eql(reqBody.bol[0].bolRequestId);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].messageTypeCode).to.eql(\"FAILURE\");\r",
									"});\r",
									"\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].text).to.eql(\"Master Bol and Master Scac Both are Mandatory\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxToken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"SEA\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"\",\r\n                \"houseBolNumber\": \"\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"submitbol"
							]
						}
					},
					"response": []
				},
				{
					"name": "USER should not be allowed to submit BOLwith blank Object- bolNumber",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var currentTime = Math.floor(Date.now() / 1000);\r",
									"pm.environment.set(\"epochTime\", currentTime);\r",
									"//random data \r",
									"var random =Math.random().toString(14).substring(2,6);\r",
									"var useremail=\"P44\"+random;\r",
									"var username=\"M\"+random;\r",
									"var mscac=random;\r",
									"var random1 =Math.random().toString(12).substring(2,5);\r",
									"var hscac= random1;\r",
									"var hbl= \"H\"+random1;\r",
									"\r",
									"pm.environment.set(\"id\",useremail);\r",
									"pm.environment.set(\"id1\",username);\r",
									"pm.environment.set(\"ms\",mscac);\r",
									"pm.environment.set(\"hs\",hscac);\r",
									"pm.environment.set(\"hb\",hbl);\r",
									"\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"\r",
									"pm.test('requesttest:BOL request id validation length test', function () {\r",
									"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
									"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"M\",reqBody.bol[0].bolNumber.masterBolNumber);\r",
									"pm.environment.set(\"MSC\",reqBody.bol[0].bolNumber.masterScac);\r",
									"pm.environment.set(\"P\",reqBody.bol[0].portOfUnlading.portCode);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].bolRequestId).to.eql(reqBody.bol[0].bolRequestId);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].messageTypeCode).to.eql(\"FAILURE\");\r",
									"});\r",
									"\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].text).to.eql(\"Master Bol and Master Scac Both are Mandatory\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxToken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"SEA\",\r\n            \"bolNumber\": {\r\n                \r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"submitbol"
							]
						}
					},
					"response": []
				},
				{
					"name": "USER should not be allowed to submit BOL with blank(null/0) customerTrackingId",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var currentTime = Math.floor(Date.now() / 1000);\r",
									"pm.environment.set(\"epochTime\", currentTime);\r",
									"//random data \r",
									"var random =Math.random().toString(14).substring(2,6);\r",
									"var useremail=\"P44\"+random;\r",
									"var username=\"M\"+random;\r",
									"var mscac=random;\r",
									"var random1 =Math.random().toString(12).substring(2,5);\r",
									"var hscac= random1;\r",
									"var hbl= \"H\"+random1;\r",
									"\r",
									"pm.environment.set(\"id\",useremail);\r",
									"pm.environment.set(\"id1\",username);\r",
									"pm.environment.set(\"ms\",mscac);\r",
									"pm.environment.set(\"hs\",hscac);\r",
									"pm.environment.set(\"hb\",hbl);\r",
									"\r",
									"\r",
									"// Set the request body\r",
									"\r",
									"var schema ={\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"bol\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"bolRequestId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"mot\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"bolNumber\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"masterScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"masterBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"masterScac\",\r",
									"                \"masterBolNumber\",\r",
									"                \"houseScac\",\r",
									"                \"houseBolNumber\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfLading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfUnlading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"customer\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"customerTrackingId\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerEINNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerContact\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerAddress\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"customerTrackingId\",\r",
									"                \"customerEINNumber\",\r",
									"                \"customerName\",\r",
									"                \"customerContact\",\r",
									"                \"customerAddress\"\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"bolRequestId\",\r",
									"            \"mot\",\r",
									"            \"bolNumber\",\r",
									"            \"portOfLading\",\r",
									"            \"portOfUnlading\",\r",
									"            \"customer\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"bol\"\r",
									"  ]\r",
									"}\r",
									"//schema test\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('requesttest:rSchema is valid', function () {\r",
									"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('requesttest:BOL request id validation length test', function () {\r",
									"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
									"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"M\",reqBody.bol[0].bolNumber.masterBolNumber);\r",
									"pm.environment.set(\"MSC\",reqBody.bol[0].bolNumber.masterScac);\r",
									"pm.environment.set(\"P\",reqBody.bol[0].portOfUnlading.portCode);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('Failure confirmation', function () {\r",
									"   pm.expect(jsonData[0].messageTypeCode).to.eql(\"FAILURE\");\r",
									"});\r",
									"\r",
									"pm.test('error test', function () {\r",
									"   pm.expect(jsonData[0].text).to.eql(\"Customer Tracking Id is Mandatory\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxToken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"SEA\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"\",\r\n                \"houseBolNumber\": \"\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"submitbol"
							]
						}
					},
					"response": []
				},
				{
					"name": "USER should not be allowed to submit BOL with  blank port code in port of unlading",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var currentTime = Math.floor(Date.now() / 1000);\r",
									"pm.environment.set(\"epochTime\", currentTime);\r",
									"//random data \r",
									"var random =Math.random().toString(14).substring(2,6);\r",
									"var useremail=\"P44\"+random;\r",
									"var username=\"M\"+random;\r",
									"var mscac=random;\r",
									"var random1 =Math.random().toString(12).substring(2,5);\r",
									"var hscac= random1;\r",
									"var hbl= \"H\"+random1;\r",
									"\r",
									"pm.environment.set(\"id\",useremail);\r",
									"pm.environment.set(\"id1\",username);\r",
									"pm.environment.set(\"ms\",mscac);\r",
									"pm.environment.set(\"hs\",hscac);\r",
									"pm.environment.set(\"hb\",hbl);\r",
									"\r",
									"\r",
									"// Set the request body\r",
									"\r",
									"var schema ={\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"bol\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"bolRequestId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"mot\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"bolNumber\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"masterScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"masterBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"masterScac\",\r",
									"                \"masterBolNumber\",\r",
									"                \"houseScac\",\r",
									"                \"houseBolNumber\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfLading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfUnlading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"customer\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"customerTrackingId\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerEINNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerContact\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerAddress\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"customerTrackingId\",\r",
									"                \"customerEINNumber\",\r",
									"                \"customerName\",\r",
									"                \"customerContact\",\r",
									"                \"customerAddress\"\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"bolRequestId\",\r",
									"            \"mot\",\r",
									"            \"bolNumber\",\r",
									"            \"portOfLading\",\r",
									"            \"portOfUnlading\",\r",
									"            \"customer\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"bol\"\r",
									"  ]\r",
									"}\r",
									"//schema test\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('requesttest:rSchema is valid', function () {\r",
									"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('requesttest:BOL request id validation length test', function () {\r",
									"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
									"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
									"});\r",
									"\r",
									"pm.environment.set(\"M\",reqBody.bol[0].bolNumber.masterBolNumber);\r",
									"pm.environment.set(\"MSC\",reqBody.bol[0].bolNumber.masterScac);\r",
									"pm.environment.set(\"P\",reqBody.bol[0].portOfUnlading.portCode);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('Failure confirmation', function () {\r",
									"   pm.expect(jsonData[0].messageTypeCode).to.eql(\"FAILURE\");\r",
									"});\r",
									"\r",
									"pm.test('error text', function () {\r",
									"   pm.expect(jsonData[0].text).to.eql(\"Port of Unlading port Code is Mandatory\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxToken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"SEA\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"\",\r\n                \"houseBolNumber\": \"\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 0,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"submitbol"
							]
						}
					},
					"response": []
				},
				{
					"name": "USER should not be allowed to submit BOL with  blank MOT",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var currentTime = Math.floor(Date.now() / 1000);\r",
									"pm.environment.set(\"epochTime\", currentTime);\r",
									"//random data \r",
									"var random =Math.random().toString(14).substring(2,6);\r",
									"var useremail=\"P44\"+random;\r",
									"var username=\"M\"+random;\r",
									"var mscac=random;\r",
									"var random1 =Math.random().toString(12).substring(2,5);\r",
									"var hscac= random1;\r",
									"var hbl= \"H\"+random1;\r",
									"\r",
									"pm.environment.set(\"id\",useremail);\r",
									"pm.environment.set(\"id1\",username);\r",
									"pm.environment.set(\"ms\",mscac);\r",
									"pm.environment.set(\"hs\",hscac);\r",
									"pm.environment.set(\"hb\",hbl);\r",
									"\r",
									"\r",
									"// Set the request body\r",
									"\r",
									"var schema ={\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"bol\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"bolRequestId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"mot\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"bolNumber\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"masterScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"masterBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"masterScac\",\r",
									"                \"masterBolNumber\",\r",
									"                \"houseScac\",\r",
									"                \"houseBolNumber\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfLading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfUnlading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"customer\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"customerTrackingId\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerEINNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerContact\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerAddress\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"customerTrackingId\",\r",
									"                \"customerEINNumber\",\r",
									"                \"customerName\",\r",
									"                \"customerContact\",\r",
									"                \"customerAddress\"\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"bolRequestId\",\r",
									"            \"mot\",\r",
									"            \"bolNumber\",\r",
									"            \"portOfLading\",\r",
									"            \"portOfUnlading\",\r",
									"            \"customer\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"bol\"\r",
									"  ]\r",
									"}\r",
									"//schema test\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('requesttest:rSchema is valid', function () {\r",
									"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('requesttest:BOL request id validation length test', function () {\r",
									"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
									"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('error message Displayed', function () {\r",
									"   pm.expect(jsonData.errMessage).to.eql(\"Transaction rolled back because it has been marked as rollback-only\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxToken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"\",\r\n                \"houseBolNumber\": \"\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"submitbol"
							]
						}
					},
					"response": []
				},
				{
					"name": "Again submit same BOL",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].bolRequestId).to.eql(reqBody.bol[0].bolRequestId);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('FAILURE MSG', function () {\r",
									"   pm.expect(jsonData[0].messageTypeCode).to.eql(\"FAILURE\");\r",
									"});\r",
									"\r",
									"pm.test('EXPECTED TEXTMSG  test', function () {\r",
									"   pm.expect(jsonData[0].text).to.eql(\"This Mbol Hbol Request is already Present\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxToken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"P12390\",\r\n            \"mot\": \"SEA\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"PO98\",\r\n                \"masterBolNumber\": \"PO9898\",\r\n                \"houseScac\": \"\",\r\n                \"houseBolNumber\": \"\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"submitbol"
							]
						}
					},
					"response": []
				},
				{
					"name": "user submit  BOL with 2Houses",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"var currentTime = Math.floor(Date.now() / 1000);\r",
									"pm.environment.set(\"epochTime\", currentTime);\r",
									"//random data \r",
									"var random =Math.random().toString(14).substring(2,6);\r",
									"var useremail=\"P44\"+random;\r",
									"var username=\"M\"+random;\r",
									"var mscac=random;\r",
									"var random1 =Math.random().toString(12).substring(2,5);\r",
									"var hscac= random1;\r",
									"var hbl= \"H\"+random1;\r",
									"\r",
									"pm.environment.set(\"id\",useremail);\r",
									"pm.environment.set(\"id1\",username);\r",
									"pm.environment.set(\"ms\",mscac);\r",
									"pm.environment.set(\"hs\",hscac);\r",
									"pm.environment.set(\"hb\",hbl);\r",
									"\r",
									"\r",
									"// Set the request body\r",
									"\r",
									"var schema ={\r",
									"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"bol\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"object\",\r",
									"          \"properties\": {\r",
									"            \"bolRequestId\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"mot\": {\r",
									"              \"type\": \"string\"\r",
									"            },\r",
									"            \"bolNumber\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"masterScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"masterBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseScac\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"houseBolNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"masterScac\",\r",
									"                \"masterBolNumber\",\r",
									"                \"houseScac\",\r",
									"                \"houseBolNumber\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfLading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"portOfUnlading\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"portCode\": {\r",
									"                  \"type\": \"integer\"\r",
									"                },\r",
									"                \"portName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"countryISOCode\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"portArrivalEpoch\": {\r",
									"                  \"type\": \"integer\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"portCode\",\r",
									"                \"portName\",\r",
									"                \"countryISOCode\",\r",
									"                \"portArrivalEpoch\"\r",
									"              ]\r",
									"            },\r",
									"            \"customer\": {\r",
									"              \"type\": \"object\",\r",
									"              \"properties\": {\r",
									"                \"customerTrackingId\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerEINNumber\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerName\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerContact\": {\r",
									"                  \"type\": \"string\"\r",
									"                },\r",
									"                \"customerAddress\": {\r",
									"                  \"type\": \"string\"\r",
									"                }\r",
									"              },\r",
									"              \"required\": [\r",
									"                \"customerTrackingId\",\r",
									"                \"customerEINNumber\",\r",
									"                \"customerName\",\r",
									"                \"customerContact\",\r",
									"                \"customerAddress\"\r",
									"              ]\r",
									"            }\r",
									"          },\r",
									"          \"required\": [\r",
									"            \"bolRequestId\",\r",
									"            \"mot\",\r",
									"            \"bolNumber\",\r",
									"            \"portOfLading\",\r",
									"            \"portOfUnlading\",\r",
									"            \"customer\"\r",
									"          ]\r",
									"        }\r",
									"      ]\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"bol\"\r",
									"  ]\r",
									"}\r",
									"//schema test\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('requesttest:rSchema is valid', function () {\r",
									"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
									"\r",
									"});\r",
									"\r",
									"pm.test('requesttest:BOL request id validation length test', function () {\r",
									"   pm.expect(reqBody.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
									"   pm.expect(reqBody.bol[0].bolRequestId.length).to.be.below(33);\r",
									"});\r",
									"\r",
									"var b=reqBody.bol[0].bolNumber.masterBolNumber;\r",
									"pm.environment.set(\"MBLNUMBER\",b);\r",
									"var c=reqBody.bol[0].bolNumber.houseBolNumber;\r",
									"pm.environment.set(\"HBLNUMBER\",c);\r",
									"\r",
									"var d=reqBody.bol[1].bolNumber.masterBolNumber;\r",
									"pm.environment.set(\"MASTERNUMBER\",d);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('BOL requestid responseid match test for 1st BOL', function () {\r",
									"   pm.expect(jsonData[0].bolRequestId).to.eql(reqBody.bol[0].bolRequestId);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('Success Test for 1st BOL', function () {\r",
									"   pm.expect(jsonData[0].messageTypeCode).to.eql(\"SUCCESSFUL\");\r",
									"});\r",
									"\r",
									"pm.test('Scheduled by system for 1st BOL', function () {\r",
									"   pm.expect(jsonData[0].text).to.eql(\"Scheduled\");\r",
									"});\r",
									"\r",
									"pm.test('BOL requestid responseid match test for 2nd BOL', function () {\r",
									"   pm.expect(jsonData[1].bolRequestId).to.eql(reqBody.bol[1].bolRequestId);\r",
									"});\r",
									"pm.test('Success Test for 2nd BOL', function () {\r",
									"   pm.expect(jsonData[1].messageTypeCode).to.eql(\"SUCCESSFUL\");\r",
									"});\r",
									"\r",
									"pm.test('Scheduled by system for 2nd BOL', function () {\r",
									"   pm.expect(jsonData[1].text).to.eql(\"Scheduled\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxToken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"SEA\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"{{hs}}\",\r\n                \"houseBolNumber\": \"{{hb}}\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        },\r\n        {\r\n            \"bolRequestId\": \"{{id1}}\",\r\n            \"mot\": \"SEA\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"\",\r\n                \"houseBolNumber\": \"\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"submitbol"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Pending Notification",
			"item": [
				{
					"name": "P44_LOGIN Copy 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"pm.environment.set(\"P44token\",jsonData.kxToken);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  {\r\n    \"email\":\"deepa.choudhary@klearnow.com\",\r\n    \"password\":\"bol12345\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/login",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "user checking pending notification with from offset to to offset[Without token]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"const jsonData=pm.response.json();\r",
									"pm.test('Missing mandatory field  errMessage', function () {\r",
									"   pm.expect(jsonData.errMessage).to.be.a(\"String\");\r",
									"   pm.expect(jsonData.errMessage,\"wrong error message\").to.include(\"Missing KxToken in request.\");\r",
									"});\r",
									"\r",
									" //header validation\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"haeder value is present\", function () {\r",
									"   pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "kxtoken",
								"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.iugI3AoZJ7RbZ8Q5DdkaeiCzc58WHK_um29o_zPTinP4Q6fWm5DwTA.jCENaGUTFTwur0MGwAQSRA.o430R0C1lxbpg0oJf6KduIYcRcNbXVzIgTKDZVn1VbsuyO9NnIKqI_6pbeddZ0fdyACA4CbJB5A_Crd55w8QFzrhmPLA-FiNrfq_kB7RiVv06q24eBphybrLnjmS6j_xzJJ4E_tRkUNt3Qum9_GxE8m8wCduBNy5cgCNhL6lSKyC_VEFhVtI6F-UYlvxTTwCgdPbZYKWsxfX1duR_T_PZ_N7_kU2sT54zs2qxVgMU_jbi2aSeH-rrWISBMePtB9ee3idxHhEfwfmGmeRTFMMZY2KnE_3qkEc5dL8bim-WPq-Z824gZZk57U7019mK9W9En2pw6LWbgrOJABnz_7b20W4qu3MrRnDrsprx396tg1nBdceXYBvrp53tryeVEQ1UlnDxtut7HIbUJJaTyI7O96-IVupFlBkxdu2T4pSFlCWsrojh7bsqASeMkqFi3Vf5yYbdCClI1lIxMkdJ6HOQbdKvxaeNfqZHpixPL6CAcKbowqpFddoLaZ9xjqamm0yEpz54Cm9oBO8LgHFPS2Yb6kg-x_9d6mrjWEHnVjh_CFKsKNjojT1bd7kXr7URytSTA1gU7RCcUK_nCHjf0r284eiv8QC35pT2A0IhqziDzCGFlTJReK_S10neVHCu2bLbN9_gXFBqpcscb4M4Kvg-8So2g4jEyXxlm-o2P8O_LVtAcPVbU4FFbGipr4zVOPYpHW_fIiQhMjM5hCb8w8PpcRM2oyN_rylDZH5A1sGOtbpCzDEJ2Rs5N8tmfzr2QAckPSHx5qX2un-6B-Rp5ohjYJgk339qPWun9XxsxCFcMg6fmf8pXxpWuloC5kZ3Pk5.ph98wUblM60FVjnbZygxmg",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/bol/notifications/8/2",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"bol",
								"notifications",
								"8",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "user checking pending notification with from offset to blank BatchSize",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "kxtoken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/bol/notifications/8/",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"bol",
								"notifications",
								"8",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "user checking pending notification with from offset to",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response body to a JSON object\r",
									"const jy = pm.response.json();\r",
									"\r",
									"// Access the array using its key\r",
									"const bolResponseArray = jy.bolResponseNotification;\r",
									"\r",
									"// Check if the array is defined and not empty before accessing the last value\r",
									"if (Array.isArray(bolResponseArray) && bolResponseArray.length > 0) {\r",
									"  // Get the last element from the array\r",
									"  const lastValue = bolResponseArray[bolResponseArray.length - 1].bolResponseId;\r",
									"\r",
									"  // Log the last value to the console (optional, for debugging purposes)\r",
									"  console.log('Last value of bolResponseId:', lastValue);\r",
									"\r",
									"  // Save the last value to an environment variable (replace \"LAST_VALUE\" with the desired variable name)\r",
									"  pm.environment.set(\"LAST_VALUE\", lastValue);\r",
									"} else {\r",
									"  console.log('The \"bolResponseNotification\" array is either undefined or empty.');\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "kxtoken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/bol/notifications/8/2",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"bol",
								"notifications",
								"8",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "user checking pending notification with from offset to batchsize=999",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parse the response body to a JSON object\r",
									"const jy = pm.response.json();\r",
									"\r",
									"// Access the array using its key\r",
									"const bolResponseArray = jy.bolResponseNotification;\r",
									"\r",
									"// Check if the array is defined and not empty before accessing the last value\r",
									"if (Array.isArray(bolResponseArray) && bolResponseArray.length > 0) {\r",
									"  // Get the last element from the array\r",
									"  const lastValue = bolResponseArray[bolResponseArray.length - 1].bolResponseId;\r",
									"\r",
									"  // Log the last value to the console (optional, for debugging purposes)\r",
									"  console.log('Last value of bolResponseId:', lastValue);\r",
									"\r",
									"  // Save the last value to an environment variable (replace \"LAST_VALUE\" with the desired variable name)\r",
									"  pm.environment.set(\"LAST_VALUE\", lastValue);\r",
									"} else {\r",
									"  console.log('The \"bolResponseNotification\" array is either undefined or empty.');\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "kxtoken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/bol/notifications/8/999",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"bol",
								"notifications",
								"8",
								"999"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GET BOL RESPONSE",
			"item": [
				{
					"name": "P44_LOGIN Copy 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"pm.environment.set(\"P44token\",jsonData.kxToken);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  {\r\n    \"email\":\"deepa.choudhary@klearnow.com\",\r\n    \"password\":\"bol12345\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/login",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "user checking BOL response[without token]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"const jsonData=pm.response.json();\r",
									"pm.test('Missing mandatory field  errMessage', function () {\r",
									"   pm.expect(jsonData.errMessage).to.be.a(\"String\");\r",
									"   pm.expect(jsonData.errMessage,\"wrong error message\").to.include(\"Missing KxToken in request.\");\r",
									"});\r",
									"\r",
									" //header validation\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"haeder value is present\", function () {\r",
									"   pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "kxtoken",
								"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.hGmfu9Zr7o7SS8hwKvh4SHIQHP8gxjbbX--nngnD-ppE4udJvqlKbg.sUTcLQ5F_pz4YH4v4O4cPA.TW-pYLrJ_UeOUhnB7GePvZY8MSAXJbwfQ16T-NzGzCsMg5F8Xfd4s9ybDPuEeRQQbF9CmncCNs1mKnkI8jBS1W0d8IBuc0j-a-u6us1g9YEDyAd9OS3Ep2EdiuxrejCqLnRv-hgTdW5AcPa0mRXsRd7kxrn9JbgnYgXyS3culoV2L1JJIuweI8Mdy3s-EtBWZFiFop3_3ej0Oc4q5nDfjN5-gm7PfgAD0mb3-a_X9kDbTI3HE_Urnfhd9Ej1zvnMAoded5n6cdFTeCxF-pV-KndEMqR0NXHFcCfgaTP0w1qouNiMK0CNKsNP3iyLdwbS0oEMWsFBK8UCt_hrNqK-_6XYenJdtpJe1b1X6wfNqRIq3IB0w5MWgIqWCjIrWjD0ile8ikJb-y1lU0vWPbA_EQrrkve3g9k1k_GcBOrDK4A_aX09WlTqy69mBQ7u7IXBGyrUtXg3dEhSAf4iXEIy2ARW55ZuvLlIa-LRUyhePQ6aUU8VjBuwKjtEMjeGj-SKxxkSoHLYih_0VbNKFc9eJnu7nBWGWjj6bKfmHth9VKuv-6zM8ObavupHFwua1HeGPYFWq3Tz-IJ6O2d8KC6Q0p_cC18vNn0pPiFScIBhEZoPjBOy6XSWevj4A5QeGfD0KaljqfcYyJmfDU-M_zSnZwP9pl5D_e296JECoOu4FHEAqof2pT4xgB8C0IA4fSF6ggG7GVTxgC4IaznZYdSjYjz10GfJAd4_NzAwLTYy_yhEWKO-HCeeiXfxFTdRvgT4aXiccSLr_TQ24nm2AG9kkRdJygH5jGMb_tReykW5SUfPIhjmvkeo64RM0ZIdB00b.o-zvictWp-desWTTsnpgNA",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/bol/response/f7ce79e5-8a69-4efd-a750-21cdc4201b4d",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"bol",
								"response",
								"f7ce79e5-8a69-4efd-a750-21cdc4201b4d"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get BOL Query Response for the given bolResponseId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"const jsonData=pm.response.json();\r",
									"\r",
									"\r",
									" //header validation\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"haeder value is present\", function () {\r",
									"   pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "kxtoken",
								"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.mZ39TdjvBis2b8qeEv3pDPsyX7Ni19tdE-vc1vIBewWVNtB8PKaL6A.4I_NUakOZD6OQo9FCzVFkA.220jLKhICuiwrI286QnKaJ5hexwoV32OEbNg8i4kx3ToN8wFjQ-Lr8gVLvTZJMa5bCXxewgOhOSJ0DwB5X1mvLICvF3hSVLaZQvp2bFiRxJav-FHGnuR72WSzvmqrcvtfrAGwtg1lDJRT5oPJqdkoIkrrwonxqqkz8FiQr84a-0uTBkwayn7BdpiZwN2RNw4bVQXnNbaLBqhudkywaPOeBxQ0gpdsLoPHNkrzm9xR0qb1Max6OiNOOgfrKbH3vmlxMp4nijMi6W0RGl_iIGEucqBVZ70Nt69PZduopX348rPdBXMZR61tJeICd4ue-tj5ZmNAgD_lGSH0-4dS9sBG2q6javnV2s4EB7r5YeQSFUColJUupmDv4B3G_u8Dx1AlNe-FRlpjmALsIib11D8-12NG0roCtAeRKCB24W7JJc0crOBJKVX7FWfF-G8IQfdbLWphKJrgeZ9_eErQr6TNgmc0d5MS_zBUFyzf1GOt4Pxv0pGePTGRCJQC4cgPAbbKCsBkRwdncWTxD-mrQPEQYh3jmZPtuzBdtfTmqG0qZ71uryQjBynJnmCj03q9issG-cyDeJzsiV4RthWINkLegWuy25Y_DIDqSYgcj75xdf3H--vp-p0DVH2LcGDLA0ys2eWVHc7KWT_gnJmVv-wCPy_m9NuNNlJmISyC8byBZV3uHVAELv7lQLWhrTrPXC34R3I8i9qOSAqzMKT7rvOckNH1SyfQybfuVvx0oMbkIUYgFKKYa4J_-A-uYEDYI27KxEArsx-4ZTR_GucD2S7ex1_wyHkmBx-T6hArI3-mJuTq8rBIgPTJ06FIqewqoTO.7_zJOgZLG05tvfuH4wzj3w",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/bol/response/f7ce79e5-8a69-4efd-a750-21cdc4201b4d",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"bol",
								"response",
								"f7ce79e5-8a69-4efd-a750-21cdc4201b4d"
							]
						}
					},
					"response": []
				},
				{
					"name": "user checking BOL response[Wrong token]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"const jsonData=pm.response.json();\r",
									"pm.test('Missing mandatory field  errMessage', function () {\r",
									"   pm.expect(jsonData.errMessage).to.be.a(\"String\");\r",
									"   pm.expect(jsonData.errMessage,\"wrong error message\").to.include(\"Expired token used in request\");\r",
									"});\r",
									"\r",
									" //header validation\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"haeder value is present\", function () {\r",
									"   pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "kxtoken",
								"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.hGmfu9Zr7o7SS8hwKvh4SHIQHP8gxjbbX--nngnD-ppE4udJvqlKbg.sUTcLQ5F_pz4YH4v4O4cPA.TW-pYLrJ_UeOUhnB7GePvZY8MSAXJbwfQ16T-NzGzCsMg5F8Xfd4s9ybDPuEeRQQbF9CmncCNs1mKnkI8jBS1W0d8IBuc0j-a-u6us1g9YEDyAd9OS3Ep2EdiuxrejCqLnRv-hgTdW5AcPa0mRXsRd7kxrn9JbgnYgXyS3culoV2L1JJIuweI8Mdy3s-EtBWZFiFop3_3ej0Oc4q5nDfjN5-gm7PfgAD0mb3-a_X9kDbTI3HE_Urnfhd9Ej1zvnMAoded5n6cdFTeCxF-pV-KndEMqR0NXHFcCfgaTP0w1qouNiMK0CNKsNP3iyLdwbS0oEMWsFBK8UCt_hrNqK-_6XYenJdtpJe1b1X6wfNqRIq3IB0w5MWgIqWCjIrWjD0ile8ikJb-y1lU0vWPbA_EQrrkve3g9k1k_GcBOrDK4A_aX09WlTqy69mBQ7u7IXBGyrUtXg3dEhSAf4iXEIy2ARW55ZuvLlIa-LRUyhePQ6aUU8VjBuwKjtEMjeGj-SKxxkSoHLYih_0VbNKFc9eJnu7nBWGWjj6bKfmHth9VKuv-6zM8ObavupHFwua1HeGPYFWq3Tz-IJ6O2d8KC6Q0p_cC18vNn0pPiFScIBhEZoPjBOy6XSWevj4A5QeGfD0KaljqfcYyJmfDU-M_zSnZwP9pl5D_e296JECoOu4FHEAqof2pT4xgB8C0IA4fSF6ggG7GVTxgC4IaznZYdSjYjz10GfJAd4_NzAwLTYy_yhEWKO-HCeeiXfxFTdRvgT4aXiccSLr_TQ24nm2AG9kkRdJygH5jGMb_tReykW5SUfPIhjmvkeo64RM0ZIdB00b.o-zvictWp-desWTTsnpgNA",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/bol/response/f7ce79e5-8a69-4efd-a750-21cdc4201b4d",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"bol",
								"response",
								"f7ce79e5-8a69-4efd-a750-21cdc4201b4d"
							]
						}
					},
					"response": []
				},
				{
					"name": "user checking BOL response for which id is  not present in DB(wrong number)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"const jsonData=pm.response.json();\r",
									"pm.test('Correct errMessage Displayed', function () {\r",
									"   pm.expect(jsonData.errMessage).to.be.a(\"String\");\r",
									"   pm.expect(jsonData.errMessage,\"wrong error message\").to.include(\"not present\");\r",
									"});\r",
									"\r",
									" //header validation\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"haeder value is present\", function () {\r",
									"   pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "kxtoken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/bol/response/f7ce79e5-8a69-4efd-a750-21cdc4201b4t",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"bol",
								"response",
								"f7ce79e5-8a69-4efd-a750-21cdc4201b4t"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DELETE BOL",
			"item": [
				{
					"name": "P44_LOGIN Copy 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"pm.environment.set(\"P44token\",jsonData.kxToken);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  {\r\n    \"email\":\"deepa.choudhary@klearnow.com\",\r\n    \"password\":\"bol12345\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/login",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "user try to delete (without token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"const jsonData=pm.response.json();\r",
									"pm.test('Missing mandatory field  errMessage', function () {\r",
									"   pm.expect(jsonData.errMessage).to.be.a(\"String\");\r",
									"   pm.expect(jsonData.errMessage,\"wrong error message\").to.include(\"Missing KxToken in request.\");\r",
									"});\r",
									"\r",
									" //header validation\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"haeder value is present\", function () {\r",
									"   pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxtoken",
								"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.J7Ap0mZfsufX6-9K3Uvxuo5mD7Euq-cuuzw5UQQds8vwGxhcM-yOEg.Vu9cojOc0eQcsSPx8q5psQ.kUGRXOV0nnwnrr9JHI2Q72cZzQwIx7y7HWbvAvD8csQCrQqMuZQqeWOr-sbyU_l7ZyGvCC8P9RYyD8y0FDa7Zmgt9b2nj7zAyaagnNnzAc5qIsiOOVV7ie-bVH8_PNz2oSd6WKqaSRQZ6hGz5Z1RBvD5mBhPp4VnOL3PTaD6QRWq0B0UJBCJrr9Kw7j7g35-PgQXKfRXrAdnTcTIlUIcKBwyFBli7hs7-dK9ZdKXGFOk8i4luS1DQQITmXupfq1Pbx8ob2P9bREpn2YN81GvUvRLOBeYCc_KuSlsHsA7VRMM4X9ib32UZGYP-8AXGz7uvq4FHc-l-nLYPLVpaDmZ4yNSSmvoqIjZyrf1xCcW1ffCgaSZY5SPQMYrBy6ZzROiB7S1lG-Rs4FoObtPlGix3BPwHbTYwnQvKxfTnRSy_Jj-IuYedaQKFqaUn1SBaSHTJoM62U0HSyBb6mZ7gdjEk8NpxN45gsxlpcT5JW_OPG1kjpO6UrNcmVQfD5wCivfrz6UnZkLUY5Ll9A_uco2_pkX50fFJkwElrYck9PgXucYydEqVQejsKR0QttMsmdh9JAQ0OrqfZ_AisbVIcYg0PCHOdS_ty4u-JAC25mcKLPkAggH51p-qlGY_0ZtEcTSEdulow9IBfZuxu3Uk1sKIYLSWVBFCo2vBbIw3QaRH27g-0HzhKKFLO29dj6GUBbPKciogPv0qc9nfLzcCZevK2MoXFsCrA0XfB0Q5CRgtlJii8OvsxXDqW86dYh5j7Y-uVljRvcOrCG372-wwW1U2A4zRQn-Eh_1K29MgmKNwjMQ6avb864tWKoJXg2HmN9Dq.zDvqVh6_u9J2AhqrlI1DRw",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"jimcd282ddc\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/bol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"bol"
							]
						}
					},
					"response": []
				},
				{
					"name": "user try to delete (wrong token)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"const jsonData=pm.response.json();\r",
									"pm.test('Missing mandatory field  errMessage', function () {\r",
									"   pm.expect(jsonData.errMessage).to.be.a(\"String\");\r",
									"   pm.expect(jsonData.errMessage,\"wrong error message\").to.include(\"Expired token used in request\");\r",
									"});\r",
									"\r",
									" //header validation\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"haeder value is present\", function () {\r",
									"   pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxtoken",
								"value": ".t_IfPqcfMnnqTjeBEqV-w5oUHu5BHeRVRhi3WQpPDJw9Pk-SChZFEA.MEtN_jrtV4wWF2phSCyA.F6IV-qAcft4ujkyZmWqQkbws46zLnm_uT-HYhZTI8w9xeqMvZGA2bRNOBYQknv2MALVqHJ_f-Hg6pdN-cHj6vmV6WEo3zZyvEJiPN23i7zO2R4YK2LJlMvdas4Z53QwSSMtmrux7HIEKs-t5EThFHNBPSiB41wiGoV-eWQTklc8Kg9M8gaqx-Kjd9dPunk0NpMt5azW0nDrP1h5mAvRet-R3w-Y8YEWiRJcTZWWhUutf7x1jRYRPbDgChIkMKzfyQHcZLpQVsDOXgKFEqbAr8ge2roiIjPcpmuaQMTLcH0-m057uXwGbY-KZTGxyuL8snW7TNEbxAzWNwI8XdhNoZU6fP1OFPbSUIuyiPfW1L4EQZSwIApxh8pv7bb4kQCo4TQx6iiGab2mGtdIxPGaf18AV-jE9BSC3TOAHQuW4ZsnamH29tlkmaOypKO9zGMqRxgFHmMUhh84Y-JSv1XmonFUtXgAr88e2T3yBacTls5oYAOcZutKzH73e1UfTUGu42vTnCOpOlRFqZoPZSIoKyYGJpjJeMP81mNBQhxltYMMRZx4ou0YYp7KCKL_bed8CAmnZWO4EB8reNAs_g3gOFEeXjBfB7dlkZ8mtdVUpkxHGUv1kjmMXO50-3HlHBDJ4XiauUGhiTscQLs-HdNu4dZCdf1EhQdZkjmv__V2z_ioLdK_L_5xqQqZFI87jSX8DRWKRmX3qTOBYwkjZOsRbycc4Eg5BXMpKH9Hzi19jf0m99ggR0EMs7i9sukLpvYiG_5d_KzDMkFDZhBDRSuBaRoqLz7DhIu2a2bdB75kMaS6S9KSC3VWKOnctV069bmDY.LvC2YRlZBlJWo3vEaVCkr",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"bol\": [\r\n            {\r\n                \"bolNumber\": {\r\n                    \"masterBolNumber\": \"98989898\",\r\n                    \"houseBolNumber\": \"\"\r\n                }\r\n            }\r\n        ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/bol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"bol"
							]
						}
					},
					"response": []
				},
				{
					"name": "USER try to delete for valid request id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].bolRequestId).to.eql(reqBody.bol[0].bolRequestId);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('Success Test', function () {\r",
									"   pm.expect(jsonData[0].messageTypeCode).to.eql(\"SUCCESSFUL\");\r",
									"});\r",
									"\r",
									"pm.test('msg Text test', function () {\r",
									"   pm.expect(jsonData[0].text).to.eql(\"Remove Successfully\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxtoken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{REQUEST}}\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/bol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"bol"
							]
						}
					},
					"response": []
				},
				{
					"name": "USER try to delete for valid request id again",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].bolRequestId).to.eql(reqBody.bol[0].bolRequestId);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('error message Test', function () {\r",
									"   pm.expect(jsonData[0].messageTypeCode).to.eql(\"WARN\");\r",
									"});\r",
									"\r",
									"pm.test('msg Text test', function () {\r",
									"   pm.expect(jsonData[0].text).to.eql(\"No Record Found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxtoken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"12P04809\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/bol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"bol"
							]
						}
					},
					"response": []
				},
				{
					"name": "User try to delete with blank request id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('error message Test', function () {\r",
									"   pm.expect(jsonData[0].messageTypeCode).to.eql(\"WARN\");\r",
									"});\r",
									"\r",
									"pm.test('msg Text test', function () {\r",
									"   pm.expect(jsonData[0].text).to.eql(\"No Record Found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxtoken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/bol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"bol"
							]
						}
					},
					"response": []
				},
				{
					"name": "user try to delete with request id not in KN system",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('error message Test', function () {\r",
									"   pm.expect(jsonData[0].messageTypeCode).to.eql(\"WARN\");\r",
									"});\r",
									"\r",
									"pm.test('msg Text test', function () {\r",
									"   pm.expect(jsonData[0].text).to.eql(\"No Record Found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxtoken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"fg\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/bol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"bol"
							]
						}
					},
					"response": []
				},
				{
					"name": "user try to delete with VALID MBL and HBL number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].bolRequestId).to.eql(reqBody.bol[0].bolRequestId);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('Success Test', function () {\r",
									"   pm.expect(jsonData[0].messageTypeCode).to.eql(\"SUCCESSFUL\");\r",
									"});\r",
									"\r",
									"pm.test('msg Text test', function () {\r",
									"   pm.expect(jsonData[0].text).to.eql(\"Remove Successfully\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxtoken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"bol\": [\r\n            {\r\n                \"bolNumber\": {\r\n                    \"masterBolNumber\": \"{{MBLNUMBER}}\",\r\n                    \"houseBolNumber\": \"{{HBLNUMBER}}\"\r\n                }\r\n            }\r\n        ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/bol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"bol"
							]
						}
					},
					"response": []
				},
				{
					"name": "user try to delete only master when only master is present",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].bolRequestId).to.eql(reqBody.bol[0].bolRequestId);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('Success Test', function () {\r",
									"   pm.expect(jsonData[0].messageTypeCode).to.eql(\"SUCCESSFUL\");\r",
									"});\r",
									"\r",
									"pm.test('msg Text test', function () {\r",
									"   pm.expect(jsonData[0].text).to.eql(\"Remove Successfully\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxtoken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"bol\": [\r\n            {\r\n                \"bolNumber\": {\r\n                    \"masterBolNumber\": \"{{MASTERNUMBER}}\",\r\n                    \"houseBolNumber\": \"\"\r\n                }\r\n            }\r\n        ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/bol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"bol"
							]
						}
					},
					"response": []
				},
				{
					"name": "user try to delete MBL and HBL number which is not in KN system",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].bolRequestId).to.eql(reqBody.bol[0].bolRequestId);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('error message Test', function () {\r",
									"   pm.expect(jsonData[0].messageTypeCode).to.eql(\"WARN\");\r",
									"});\r",
									"\r",
									"pm.test('msg Text test', function () {\r",
									"   pm.expect(jsonData[0].text).to.eql(\"No Record Found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxtoken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"bol\": [\r\n            {\r\n                \"bolNumber\": {\r\n                    \"masterBolNumber\": \"w1908\",\r\n                    \"houseBolNumber\": \"w2200\"\r\n                }\r\n            }\r\n        ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/bol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"bol"
							]
						}
					},
					"response": []
				},
				{
					"name": "user try to delete with MBL and HBL number AGAIN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData=pm.response.json();\r",
									"const reqBody=JSON.parse(pm.request.body.raw);\r",
									"pm.test('BOL requestid responseid match test', function () {\r",
									"   pm.expect(jsonData[0].bolRequestId).to.eql(reqBody.bol[0].bolRequestId);\r",
									"});\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test('error message Test', function () {\r",
									"   pm.expect(jsonData[0].messageTypeCode).to.eql(\"WARN\");\r",
									"});\r",
									"\r",
									"pm.test('msg Text test', function () {\r",
									"   pm.expect(jsonData[0].text).to.eql(\"No Record Found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "kxtoken",
								"value": "{{P44token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"bol\": [\r\n            {\r\n                \"bolNumber\": {\r\n                    \"masterBolNumber\": \"w1908\",\r\n                    \"houseBolNumber\": \"w2200\"\r\n                }\r\n            }\r\n        ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.klearnow.com/api-staging/v1/bol",
							"protocol": "https",
							"host": [
								"api",
								"klearnow",
								"com"
							],
							"path": [
								"api-staging",
								"v1",
								"bol"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}