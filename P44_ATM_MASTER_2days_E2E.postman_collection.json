{
	"info": {
		"_postman_id": "0151547a-dca0-48c5-931b-b976815427bf",
		"name": "P44_ATM (MASTER_2days_E2E)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28168622",
		"_collection_link": "https://www.postman.com/shailesh1994/workspace/p44/collection/28168622-0151547a-dca0-48c5-931b-b976815427bf?action=share&creator=28168622&source=collection_link"
	},
	"item": [
		{
			"name": "login Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData=pm.response.json();\r",
							"pm.environment.set(\"P44token\",jsonData.kxToken);\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "KxToken",
						"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.vwc2tplRKrNHbJEqlN2SwB-Q3LMcVRoyocN3CTKUk0xm7eR609kYdQ.2ClEKLCYmFVDW2A5xUJFqQ.ObXoV4JdXST4KIxz1wnWahaz-3tIRTRQ7ylqyYmq2hMQbtbNR9HJD3qfrVJey8mrGIeCuFUzoni3ubYUy0uaHvZXf2MozuDPDCCcHfGZmrpSYtMIAxtSMkRx_x4OUzxMOsMUB2YVVG8XpN5kzSOVHVp9egCLswUz7D3AY_I9wqShtGJIhMfSEbdSu1x8BfjuNxaTMm9a2I_ayQOyAMZoXmFxzk9R1eZPpkBsgkiL2FOiu1aIovtg-ygEXg1NUI2enpgN8urf7dEuGBw_y-nm1ICwCuEBf5iGys9_jrnFzmJL_VKqfS9G5HEpaHJkpw9QYOWcdO-i_m1dzCL_6FYn3cNtjVTxLYeoEm3VmXWDG0NOIJZmT6uPQuTQ_PlkkNDoE8itBhl5-VjLAw2dhV9vltY7Sx2OkFDc0VKYRZIXWlsxNOmOubBC7dtXx4I4Rfs-_E-utxTE7no_GAs_9uBQgOpbSgHUFRAClwje6MsuJNy3GvYH-SQOyw9lmic1Kpp3NsCgySmRl8T0dBlai9hYtus5wxcMB_Q9lbbmxUQvmtuBjhevUP631-sY8OcXe_Y23qQxRTSBOQJBLmryONrCS0q6jhma3NukcroSC9whGtJznEPw7CvYCQK5banMVcMJBRf5wWe_WNxmp_W1Cs7nuotNgb3gQbfsTsdt63wljPRQ8ERrdykxBr1pQD4WMz3-sBLKQxJKu2EXW5lz3KYpLEa2aLw4Lphu1z9EDIsFA8DnEGC-FCiKkyxMG22czwd3ne8vBG4OZNB1OSXPbCXkjhi8lO2zeceUSaTkuJn_55d4zBC07rrW8GLS2IC7vh8YkKYPGp_5Im0-4FMwN0ldBrBGXD_G7rES7j-CKuFpoS2-18mFYkEVO8uMkfXKVfzIHFY85kJuQKEJcuvOr4hzwZe2-Dc_K4XMU4ZkfoEXCbMfcbA2Yqh7c-pBKWwBgHq5YcFzOzAVjHlollmWSBZUFClolw9EJpsrZp_dx24IjD9y1CdSoJ9GRGdQ6mgkLEZgFio8qMNYxmHJPzClitMCQmtIw2Ta0nNMXz09t4LJKFg-0K0vVCLXxZrXK2YY4jrHOxbn2WrNCT-z9rohh-Q_vXZJ2ZUc1axS289T19wk9oembPbT6rzeai2FfPDlhAkGQ_u_xstnv1xHnmPMHEgKbUochubqYaLr6bBGhbVjqUQgeCAN2yyTVZPYQkopGRdmouuEfVZv-5gXjWbE6O63ZOz10TdHLKvzFzS2lGDgQYpztNeNXrgQlUMy-upezlfJ3Pe5bcRENbpD853iJi3kAFP_xNN6vtTZyHOZZo3W5XmEnKbCluz1zlWpRE25SiGtXjchX4B7ESpWokB4dpV5sI_rGG_EaYQudqFs_ZqsTVC0AbqFI-CJT0kPnMS6X0Jn5aCG56wKt8svbSpAExiCEzet_w1kM0H8zTIQRz4v3dVY0zgYIQ2kl2_UIIjZ9QHh1Q4eEdhw3gd8hbIp0c1QN-Ka3UGVqhiW2rd4OzrmOfmGsR-NkarNlY92GHNtl2QDOf2A-FmVbkt9pmdk27VTj7GF12Q_bGlWWlTyeKDcv2byw1FlBbYD-9WzBgdjS7Or.RZL-OUXmT82yi8hhVGAfQg",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"deepa.choudhary@klearnow.com\",\r\n    \"password\":\"bol12345\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.klearnow.com/api-staging/v1/login",
					"protocol": "https",
					"host": [
						"api",
						"klearnow",
						"com"
					],
					"path": [
						"api-staging",
						"v1",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET KN TOKEN Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"//status code validation\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							" \r",
							" //header validation\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"header value is present\", function () {\r",
							"   pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
							"});\r",
							"//response time validation\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"//Test datatype\r",
							"var jsonData=JSON.parse(responseBody);\r",
							"\r",
							"pm.environment.set(\"kn_token_env\",jsonData.eventMessage.user.kxToken);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"eventMessage\": {\r\n\"email\" : \"rajan.sardana.5@klearnow.com\",\r\n\"hashedPassword\": \"abcd1234\",\r\n\"typeOfUser\" : \"BROKER_USER\"\r\n},\r\n\"eventType\": \"KXUSER_LOGIN\",\r\n\"eventTime\": 1539730411376\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.klearnow.com/staging-broker/v1/events",
					"protocol": "https",
					"host": [
						"api",
						"klearnow",
						"com"
					],
					"path": [
						"staging-broker",
						"v1",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "SUBMIT-MASTERONLY",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"var currentTime = Math.floor(Date.now() / 1000);\r",
							"pm.environment.set(\"epochTime\", currentTime);\r",
							"//random data \r",
							"var random =Math.random().toString(14).substring(2,6);\r",
							"var useremail=\"P44\"+random;\r",
							"var username=\"M\"+random;\r",
							"var mscac=random;\r",
							"var random1 =Math.random().toString(12).substring(2,5);\r",
							"var hscac= random1;\r",
							"var hbl= \"H\"+random1;\r",
							"\r",
							"pm.environment.set(\"id\",useremail);\r",
							"pm.environment.set(\"id1\",username);\r",
							"pm.environment.set(\"ms\",mscac);\r",
							"pm.environment.set(\"hs\",hscac);\r",
							"pm.environment.set(\"hb\",hbl);\r",
							"\r",
							"\r",
							"// Set the request body\r",
							"\r",
							"var schema ={\r",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"eventMessage\": {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"bol\": {\r",
							"          \"type\": \"array\",\r",
							"          \"items\": [\r",
							"            {\r",
							"              \"type\": \"object\",\r",
							"              \"properties\": {\r",
							"                \"bolRequestId\": {\r",
							"                  \"type\": \"string\"\r",
							"                },\r",
							"                \"mot\": {\r",
							"                  \"type\": \"string\"\r",
							"                },\r",
							"                \"bolNumber\": {\r",
							"                  \"type\": \"object\",\r",
							"                  \"properties\": {\r",
							"                    \"masterScac\": {\r",
							"                      \"type\": \"string\"\r",
							"                    },\r",
							"                    \"masterBolNumber\": {\r",
							"                      \"type\": \"string\"\r",
							"                    },\r",
							"                    \"houseScac\": {\r",
							"                      \"type\": \"string\"\r",
							"                    },\r",
							"                    \"houseBolNumber\": {\r",
							"                      \"type\": \"string\"\r",
							"                    }\r",
							"                  },\r",
							"                  \"required\": [\r",
							"                    \"masterScac\",\r",
							"                    \"masterBolNumber\",\r",
							"                    \"houseScac\",\r",
							"                    \"houseBolNumber\"\r",
							"                  ]\r",
							"                },\r",
							"                \"portOfLading\": {\r",
							"                  \"type\": \"object\",\r",
							"                  \"properties\": {\r",
							"                    \"portCode\": {\r",
							"                      \"type\": \"integer\"\r",
							"                    },\r",
							"                    \"portName\": {\r",
							"                      \"type\": \"string\"\r",
							"                    },\r",
							"                    \"countryISOCode\": {\r",
							"                      \"type\": \"string\"\r",
							"                    },\r",
							"                    \"portArrivalEpoch\": {\r",
							"                      \"type\": \"integer\"\r",
							"                    }\r",
							"                  },\r",
							"                  \"required\": [\r",
							"                    \"portCode\",\r",
							"                    \"portName\",\r",
							"                    \"countryISOCode\",\r",
							"                    \"portArrivalEpoch\"\r",
							"                  ]\r",
							"                },\r",
							"                \"portOfUnlading\": {\r",
							"                  \"type\": \"object\",\r",
							"                  \"properties\": {\r",
							"                    \"portCode\": {\r",
							"                      \"type\": \"integer\"\r",
							"                    },\r",
							"                    \"portName\": {\r",
							"                      \"type\": \"string\"\r",
							"                    },\r",
							"                    \"countryISOCode\": {\r",
							"                      \"type\": \"string\"\r",
							"                    },\r",
							"                    \"portArrivalEpoch\": {\r",
							"                      \"type\": \"integer\"\r",
							"                    }\r",
							"                  },\r",
							"                  \"required\": [\r",
							"                    \"portCode\",\r",
							"                    \"portName\",\r",
							"                    \"countryISOCode\",\r",
							"                    \"portArrivalEpoch\"\r",
							"                  ]\r",
							"                },\r",
							"                \"customer\": {\r",
							"                  \"type\": \"object\",\r",
							"                  \"properties\": {\r",
							"                    \"customerTrackingId\": {\r",
							"                      \"type\": \"integer\"\r",
							"                    },\r",
							"                    \"customerEINNumber\": {\r",
							"                      \"type\": \"string\"\r",
							"                    },\r",
							"                    \"customerName\": {\r",
							"                      \"type\": \"string\"\r",
							"                    },\r",
							"                    \"customerContact\": {\r",
							"                      \"type\": \"string\"\r",
							"                    },\r",
							"                    \"customerAddress\": {\r",
							"                      \"type\": \"string\"\r",
							"                    }\r",
							"                  },\r",
							"                  \"required\": [\r",
							"                    \"customerTrackingId\",\r",
							"                    \"customerEINNumber\",\r",
							"                    \"customerName\",\r",
							"                    \"customerContact\",\r",
							"                    \"customerAddress\"\r",
							"                  ]\r",
							"                }\r",
							"              },\r",
							"              \"required\": [\r",
							"                \"bolRequestId\",\r",
							"                \"mot\",\r",
							"                \"bolNumber\",\r",
							"                \"portOfLading\",\r",
							"                \"portOfUnlading\",\r",
							"                \"customer\"\r",
							"              ]\r",
							"            }\r",
							"          ]\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"bol\"\r",
							"      ]\r",
							"    },\r",
							"    \"eventType\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"eventTime\": {\r",
							"      \"type\": \"integer\"\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"eventMessage\",\r",
							"    \"eventType\",\r",
							"    \"eventTime\"\r",
							"  ]\r",
							"}\r",
							"//schema test\r",
							"const reqBody=JSON.parse(pm.request.body.raw);\r",
							"pm.test('requesttest:rSchema is valid', function () {\r",
							"    pm.expect(tv4.validate(reqBody, schema)).to.be.true;\r",
							"\r",
							"});\r",
							"//datatype test\r",
							"// pm.test('requesttest:BOL request id validation length test', function () {\r",
							"//    pm.expect(reqBody.eventMessage.bol[0].bolRequestId,\"req id is not null\").to.not.be.null;\r",
							"//    pm.expect(reqBody.eventMessage.bol[0].bolRequestId.length).to.be.below(33);\r",
							"// });\r",
							"\r",
							"pm.environment.set(\"M\",reqBody.bol[0].bolNumber.masterBolNumber);\r",
							"pm.environment.set(\"MSC\",reqBody.bol[0].bolNumber.masterScac);\r",
							"pm.environment.set(\"P\",reqBody.bol[0].portOfUnlading.portCode);\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData=pm.response.json();\r",
							"const reqBody=JSON.parse(pm.request.body.raw);\r",
							"pm.test('BOL requestid responseid match test', function () {\r",
							"   pm.expect(jsonData[0].bolRequestId).to.eql(reqBody.bol[0].bolRequestId);\r",
							"});\r",
							"pm.environment.set(\"reqid\",jsonData[0].bolRequestId);\r",
							"\r",
							"setTimeout(function() {\r",
							"    // Continue with the rest of your test logic here\r",
							"    // ...\r",
							"}, 120000);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "kxtoken",
						"value": "{{P44token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": " {\r\n    \"bol\": [\r\n        {\r\n            \"bolRequestId\": \"{{id}}\",\r\n            \"mot\": \"SEA\",\r\n            \"bolNumber\": {\r\n                \"masterScac\": \"{{ms}}\",\r\n                \"masterBolNumber\": \"{{id1}}\",\r\n                \"houseScac\": \"\",\r\n                \"houseBolNumber\": \"\"\r\n            },\r\n            \"portOfLading\": {\r\n                \"portCode\": 2900,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"GR\",\r\n                \"portArrivalEpoch\": 123456\r\n            },\r\n            \"portOfUnlading\": {\r\n                \"portCode\": 4551,\r\n                \"portName\": \"Diverse SMS\",\r\n                \"countryISOCode\": \"US\",\r\n                \"portArrivalEpoch\": 1234456\r\n            },\r\n            \"customer\": {\r\n                \"customerTrackingId\": \"368\",\r\n                \"customerEINNumber\": \"DFE1\",\r\n                \"customerName\": \"Tasty Rubber Chips XSS deposit\",\r\n                \"customerContact\": \"Kenyan Shilling vortals\",\r\n                \"customerAddress\": \"Drive Assistant\"\r\n            }\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.klearnow.com/api-staging/v1/submitbol",
					"protocol": "https",
					"host": [
						"api",
						"klearnow",
						"com"
					],
					"path": [
						"api-staging",
						"v1",
						"submitbol"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData=pm.response.json();\r",
							"pm.environment.set(\"REQ_ID\",jsonData[0].REQUEST_ID);\r",
							"pm.environment.set(\"ID\",jsonData[0].ID);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "kxtoken",
						"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.bG24EfajNd7NMYpqsqzneMfQcxSJt2TdOp-Zqva7maOibdwVD1aBGA.xxQ6sB88NxLmMiLxIQOikA.5U80icvxdVFIMOygDvOkJAxbMJhchZqO0gtJhJIOZ8DUFnVT5QGsQTP_Rswci9j_LFxefg3egKJDxhcAAm8Se1MWq9LA1n0e1fm-6udEwOUMNl7M_cVFGlFFDUsOvLJyNy1s53hWHmj0fJe2Z6bA5DcjDD55LqUn4S_wE2pq01C1NqhNEFYIgZ22A5x7RPxyVWQknSy8p7mjwwC8k9fcHaSj_ZXQlIHW4zhB5nmgZRahWp2QrN8AXTn1ichpACuiTA2jBndroAy2B1fFcA5UgQvxJUzdyCi2sXkJAFaSZsKISqxxBqpPwSTzXfmqGzeEmSFOSXmyslAraYhTUgxZ9K4Rg9HJmDT__IFCVI-UxDaSukR04qPwivo4wyHNSe7xpRDaQQYRSzc4LF2MlCS8PIVKFSZYWfieazbE1y89csXFoJY1ItwJ5sfS9J8m5qewghd93-2YF-SHJt0mf6zh0PDUA8c0-9YARDfTaQmXDCj6Zf8ZM2vL_2rY9GJ2thLfTSxYHI-jQqGoCYarF-Uk_gsxgDI3JiEhTYipFxBre1Ng_2SN1BnBeB4GRze15Cl37av_4qDzEmY7tep05rMdMxDxPnzwv4rmvcdDI01Ql3h-jatfzfUIEhtYsVVNDaL6Q8JWxk4IbTU6ze1wTLyZ9WeW8bk3RLS0GOZzHQkveViKccEPX8jy7SrHjRWvKwjp9K53yni0JOjtwlBkLIOC2vidDK9My9qbRovTIdHoC4WshJ8ASJbRo1oWqmVvvNM5Y0km1rUQY7yxCYYM_iDgrtH_1kwvu_DtWuX_wLTN08JmHk6XM1dMptMkiQQvdniyLdPzO-Va_POvH95nrIoj1w.kDskmUi9N66CcaCOo9lASA",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/BOL_REQUEST_RECORD?_where=(BOL_REQUEST_ID,eq,{{reqid}})",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"BOL_REQUEST_RECORD"
					],
					"query": [
						{
							"key": "_where",
							"value": "(BOL_REQUEST_ID,eq,{{reqid}})"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request Copy 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData=pm.response.json();\r",
							"pm.environment.set(\"REC_ID\",jsonData[0].RECORD_ID);\r",
							"console.log(jsonData[0].RECORD_ID);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "kxtoken",
						"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.bG24EfajNd7NMYpqsqzneMfQcxSJt2TdOp-Zqva7maOibdwVD1aBGA.xxQ6sB88NxLmMiLxIQOikA.5U80icvxdVFIMOygDvOkJAxbMJhchZqO0gtJhJIOZ8DUFnVT5QGsQTP_Rswci9j_LFxefg3egKJDxhcAAm8Se1MWq9LA1n0e1fm-6udEwOUMNl7M_cVFGlFFDUsOvLJyNy1s53hWHmj0fJe2Z6bA5DcjDD55LqUn4S_wE2pq01C1NqhNEFYIgZ22A5x7RPxyVWQknSy8p7mjwwC8k9fcHaSj_ZXQlIHW4zhB5nmgZRahWp2QrN8AXTn1ichpACuiTA2jBndroAy2B1fFcA5UgQvxJUzdyCi2sXkJAFaSZsKISqxxBqpPwSTzXfmqGzeEmSFOSXmyslAraYhTUgxZ9K4Rg9HJmDT__IFCVI-UxDaSukR04qPwivo4wyHNSe7xpRDaQQYRSzc4LF2MlCS8PIVKFSZYWfieazbE1y89csXFoJY1ItwJ5sfS9J8m5qewghd93-2YF-SHJt0mf6zh0PDUA8c0-9YARDfTaQmXDCj6Zf8ZM2vL_2rY9GJ2thLfTSxYHI-jQqGoCYarF-Uk_gsxgDI3JiEhTYipFxBre1Ng_2SN1BnBeB4GRze15Cl37av_4qDzEmY7tep05rMdMxDxPnzwv4rmvcdDI01Ql3h-jatfzfUIEhtYsVVNDaL6Q8JWxk4IbTU6ze1wTLyZ9WeW8bk3RLS0GOZzHQkveViKccEPX8jy7SrHjRWvKwjp9K53yni0JOjtwlBkLIOC2vidDK9My9qbRovTIdHoC4WshJ8ASJbRo1oWqmVvvNM5Y0km1rUQY7yxCYYM_iDgrtH_1kwvu_DtWuX_wLTN08JmHk6XM1dMptMkiQQvdniyLdPzO-Va_POvH95nrIoj1w.kDskmUi9N66CcaCOo9lASA",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/BOL_EDI_REQUEST_RECORD?_where=(REQUEST_ID,eq,{{REQ_ID}})",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"BOL_EDI_REQUEST_RECORD"
					],
					"query": [
						{
							"key": "_where",
							"value": "(REQUEST_ID,eq,{{REQ_ID}})"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "MOCK_RESPONSE_1A",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var formattedONEDayAheadDate = new Date(Date.now() + 1 * 24 * 60 * 60 * 1000).toLocaleDateString('en-US', {month: '2-digit',day: '2-digit', year: '2-digit' }).replace(/\\//g, '');\r",
							"pm.environment.set(\"T1\", formattedONEDayAheadDate);\r",
							"\r",
							"var formattedoneDayBackDate = new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toLocaleDateString('en-US', { month: '2-digit',day: '2-digit', year: '2-digit' }).replace(/\\//g, '');\r",
							"pm.environment.set(\"Y\", formattedoneDayBackDate);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "kxtoken",
						"value": "{{kn_token_env}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"eventMessage\":{\r\n    \"requestid\":\"{{REQ_ID}}\",\r\n    \"records\":{\r\n        \"recordlist\":[\r\n        {\"record\":\"A2809S1F      071023     C1                                3P-BOL-0000          \"},\r\n        {\"record\":\"B  1704BIIC1                                               {{REC_ID}} \"},\r\n        {\"record\":\"WR1                                       SHAILESH SMILE          112E {{T1}}   \"},\r\n        {\"record\":\"WR4            {{M}}                               00000167PKG  {{MSC}}    MY1     \"},\r\n        {\"record\":\"WR5{{Y}}03421A ENTERED, INTENSIVE EXAM REQUIRED                167      001    \"},\r\n        {\"record\":\"WN1            {{P}}                        58023{{Y}}                          \"},\r\n        {\"record\":\"Y  30018AFC100013                                                               \"},\r\n        {\"record\":\"Z2809S1F      063023                                                            \"}\r\n            ]}\r\n            },\r\n    \"eventType\":\"SET_RESPONSE_MANUAL_3P\",\"eventTime\":1686741426155\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.klearnow.com/staging-broker/v1/events",
					"protocol": "https",
					"host": [
						"api",
						"klearnow",
						"com"
					],
					"path": [
						"staging-broker",
						"v1",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "12 hour difference Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData=pm.response.json();\r",
							"pm.environment.set(\"REQ_ID\",jsonData[0].REQUEST_ID);\r",
							"pm.environment.set(\"ID\",jsonData[0].ID);\r",
							"pm.environment.set(\"epochTime1\",jsonData[0].NEXT_QUERY_EXECUTION_DATE_TIME);\r",
							"var e=pm.environment.get('epochTime1');\r",
							"const currentEpochTime = Math.floor(Date.now() / 1000);\r",
							"const e2=e/1000;\r",
							"// Get the absolute difference in seconds between the given epoch time and the current epoch time\r",
							"const timeDifferenceInSeconds = Math.abs(currentEpochTime -e2);\r",
							"\r",
							"// Calculate the difference in hour\r",
							"const timeDifferenceInHours = timeDifferenceInSeconds / 3600;\r",
							"const toleranceInHours=2;\r",
							"// Perform the test\r",
							"pm.test('Time difference should be approximately 12 hours', () => {\r",
							"    pm.expect(timeDifferenceInHours).to.be.closeTo(12, toleranceInHours);\r",
							"});\r",
							"\r",
							"pm.test('next query status is scheduled', function () {\r",
							"   pm.expect(jsonData[0].NEXT_QUERY_STATUS).to.eql(\"SCHEDULED\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "kxtoken",
						"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.bG24EfajNd7NMYpqsqzneMfQcxSJt2TdOp-Zqva7maOibdwVD1aBGA.xxQ6sB88NxLmMiLxIQOikA.5U80icvxdVFIMOygDvOkJAxbMJhchZqO0gtJhJIOZ8DUFnVT5QGsQTP_Rswci9j_LFxefg3egKJDxhcAAm8Se1MWq9LA1n0e1fm-6udEwOUMNl7M_cVFGlFFDUsOvLJyNy1s53hWHmj0fJe2Z6bA5DcjDD55LqUn4S_wE2pq01C1NqhNEFYIgZ22A5x7RPxyVWQknSy8p7mjwwC8k9fcHaSj_ZXQlIHW4zhB5nmgZRahWp2QrN8AXTn1ichpACuiTA2jBndroAy2B1fFcA5UgQvxJUzdyCi2sXkJAFaSZsKISqxxBqpPwSTzXfmqGzeEmSFOSXmyslAraYhTUgxZ9K4Rg9HJmDT__IFCVI-UxDaSukR04qPwivo4wyHNSe7xpRDaQQYRSzc4LF2MlCS8PIVKFSZYWfieazbE1y89csXFoJY1ItwJ5sfS9J8m5qewghd93-2YF-SHJt0mf6zh0PDUA8c0-9YARDfTaQmXDCj6Zf8ZM2vL_2rY9GJ2thLfTSxYHI-jQqGoCYarF-Uk_gsxgDI3JiEhTYipFxBre1Ng_2SN1BnBeB4GRze15Cl37av_4qDzEmY7tep05rMdMxDxPnzwv4rmvcdDI01Ql3h-jatfzfUIEhtYsVVNDaL6Q8JWxk4IbTU6ze1wTLyZ9WeW8bk3RLS0GOZzHQkveViKccEPX8jy7SrHjRWvKwjp9K53yni0JOjtwlBkLIOC2vidDK9My9qbRovTIdHoC4WshJ8ASJbRo1oWqmVvvNM5Y0km1rUQY7yxCYYM_iDgrtH_1kwvu_DtWuX_wLTN08JmHk6XM1dMptMkiQQvdniyLdPzO-Va_POvH95nrIoj1w.kDskmUi9N66CcaCOo9lASA",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/BOL_REQUEST_RECORD?_where=(BOL_REQUEST_ID,eq,{{reqid}})",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"BOL_REQUEST_RECORD"
					],
					"query": [
						{
							"key": "_where",
							"value": "(BOL_REQUEST_ID,eq,{{reqid}})"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request Copy 2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var currentTime = new Date();\r",
							"var nextMinute = new Date(currentTime.getTime() + 60000);\r",
							"var nextMinuteEpochTime = nextMinute.getTime();\r",
							"pm.environment.set(\"e\",nextMinuteEpochTime);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"setTimeout(function() {\r",
							"    // Continue with the rest of your test logic here\r",
							"    // ...\r",
							"}, 60000);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "kxtoken",
						"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.K3IGs0kAZty5-Gw6JAoQgJDw98LBHl8yEvTyTZs9125tZ86vLd_7LQ.ehZJ6ZIZI4JrkI-t8jqaTw.eMNgyYs4wPZKut--IMLPdqz0f7KKCovtwui61k_4woLz05Li2XftWcQJfQ0UJm4IBfmmdNaho8ze3cT0wNiN_hfZiAUwUsKM67zLgpwvVuW7msrHcR9gt5hLX3yheaMbeKexq5TTnoiNv9g9r3y5ZNs3ioHkWDeGYv-QLgiLHSBKkBepETDwLuOHEkvN3nmQBMPWqqH57vlVqce5SY21MnS8-N4fMeJmNkTlFFj6ewLjYkXy8wP9skY1Y7CK8_zOqssi91aAIczlmXwz8BCeJFjfIG-KWA6GIhDz6XDhLSavnSyRAf3SjmzZorr7xWqFAG-MLn5WiJofqv-wIS-G080X-UZYiHrVUC8zV2QYciEgepnqMJT4AY05EKbW5HZ1xqt1NBMW33BwTJs3XJF7KXjZbv9urcYT9qUs6wYzd8DSjqKAOgVmqHBgoYcj_QdzLisS3VHBdb0rXfNsyqx3YxnEteerwH87eesW2D4lTzH_n1avnZOJ-kCHAOfYyD-g4NCTSmy5yRcydxVmd4VZjVRrXS4usC-gb5HmcSMyqLgjclkDKaiduGTZqc0k3-Ny15MDincxA44yyJSaeVBJjNS2OMcVBvEqkLViJwswq44jIVpYpWnzja0S_pd4HYnfUw8YrxeKW9fXhpThHq5CrGYpT5Ay4gm-LifSVnu98YQ35G_Ykv8FxFMxb1gXSbyKNUECrnocQseTD_HvBwZkfOZA4LOGDCTZhigb1rPtdDmVDEKtAVTbQbQ06b-4o1XqRXj3_kfO9Y3ldlPTdBynEtmgdv2esRjiKMhgBNWFfTAeVJi4_ZXW3J4NXKVPD9QN.YIPBlYP7PJGMiAfbPP1yjA",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n      \"NEXT_QUERY_EXECUTION_DATE_TIME\": {{e}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/BOL_REQUEST_RECORD/{{ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"BOL_REQUEST_RECORD",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "MOCK_RESPONSE_1H",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var formattedONEDayAheadDate = new Date(Date.now() + 1 * 24 * 60 * 60 * 1000).toLocaleDateString('en-US', {month: '2-digit',day: '2-digit', year: '2-digit' }).replace(/\\//g, '');\r",
							"pm.environment.set(\"T1\", formattedONEDayAheadDate);\r",
							"\r",
							"var formattedoneDayBackDate = new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toLocaleDateString('en-US', { month: '2-digit',day: '2-digit', year: '2-digit' }).replace(/\\//g, '');\r",
							"pm.environment.set(\"Y\", formattedoneDayBackDate);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "kxtoken",
						"value": "{{kn_token_env}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"eventMessage\":{\r\n    \"requestid\":\"{{REQ_ID}}\",\r\n    \"records\":{\r\n        \"recordlist\":[\r\n        {\"record\":\"A2809S1F      071023     C1                                3P-BOL-0000          \"},\r\n        {\"record\":\"B  1704BIIC1                                               {{REC_ID}} \"},\r\n        {\"record\":\"WR1                                       SHAILESH SMILE          112E {{T1}}   \"},\r\n        {\"record\":\"WR4            {{M}}                               00000167PKG  {{MSC}}    MY1     \"},\r\n        {\"record\":\"WR5{{Y}}03421A ENTERED, INTENSIVE EXAM REQUIRED                 167      001   \"},\r\n        {\"record\":\"WR5{{Y}}06421H HOLD PLACED                                      167      002   \"},\r\n        {\"record\":\"WN1            {{P}}                        58023{{Y}}                          \"},\r\n        {\"record\":\"Y  30018AFC100013                                                               \"},\r\n        {\"record\":\"Z2809S1F      063023                                                            \"}\r\n            ]}\r\n            },\r\n    \"eventType\":\"SET_RESPONSE_MANUAL_3P\",\"eventTime\":1686741426155\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.klearnow.com/staging-broker/v1/events",
					"protocol": "https",
					"host": [
						"api",
						"klearnow",
						"com"
					],
					"path": [
						"staging-broker",
						"v1",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "12 hour difference Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData=pm.response.json();\r",
							"pm.environment.set(\"REQ_ID\",jsonData[0].REQUEST_ID);\r",
							"pm.environment.set(\"ID\",jsonData[0].ID);\r",
							"pm.environment.set(\"epochTime1\",jsonData[0].NEXT_QUERY_EXECUTION_DATE_TIME);\r",
							"var e=pm.environment.get('epochTime1');\r",
							"const currentEpochTime = Math.floor(Date.now() / 1000);\r",
							"const e2=e/1000;\r",
							"// Get the absolute difference in seconds between the given epoch time and the current epoch time\r",
							"const timeDifferenceInSeconds = Math.abs(currentEpochTime -e2);\r",
							"\r",
							"// Calculate the difference in hour\r",
							"const timeDifferenceInHours = timeDifferenceInSeconds / 3600;\r",
							"const toleranceInHours=2;\r",
							"// Perform the test\r",
							"pm.test('Time difference should be approximately 12 hours', () => {\r",
							"    pm.expect(timeDifferenceInHours).to.be.closeTo(12, toleranceInHours);\r",
							"});\r",
							"\r",
							"pm.test('next query status is scheduled', function () {\r",
							"   pm.expect(jsonData[0].NEXT_QUERY_STATUS).to.eql(\"SCHEDULED\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "kxtoken",
						"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.bG24EfajNd7NMYpqsqzneMfQcxSJt2TdOp-Zqva7maOibdwVD1aBGA.xxQ6sB88NxLmMiLxIQOikA.5U80icvxdVFIMOygDvOkJAxbMJhchZqO0gtJhJIOZ8DUFnVT5QGsQTP_Rswci9j_LFxefg3egKJDxhcAAm8Se1MWq9LA1n0e1fm-6udEwOUMNl7M_cVFGlFFDUsOvLJyNy1s53hWHmj0fJe2Z6bA5DcjDD55LqUn4S_wE2pq01C1NqhNEFYIgZ22A5x7RPxyVWQknSy8p7mjwwC8k9fcHaSj_ZXQlIHW4zhB5nmgZRahWp2QrN8AXTn1ichpACuiTA2jBndroAy2B1fFcA5UgQvxJUzdyCi2sXkJAFaSZsKISqxxBqpPwSTzXfmqGzeEmSFOSXmyslAraYhTUgxZ9K4Rg9HJmDT__IFCVI-UxDaSukR04qPwivo4wyHNSe7xpRDaQQYRSzc4LF2MlCS8PIVKFSZYWfieazbE1y89csXFoJY1ItwJ5sfS9J8m5qewghd93-2YF-SHJt0mf6zh0PDUA8c0-9YARDfTaQmXDCj6Zf8ZM2vL_2rY9GJ2thLfTSxYHI-jQqGoCYarF-Uk_gsxgDI3JiEhTYipFxBre1Ng_2SN1BnBeB4GRze15Cl37av_4qDzEmY7tep05rMdMxDxPnzwv4rmvcdDI01Ql3h-jatfzfUIEhtYsVVNDaL6Q8JWxk4IbTU6ze1wTLyZ9WeW8bk3RLS0GOZzHQkveViKccEPX8jy7SrHjRWvKwjp9K53yni0JOjtwlBkLIOC2vidDK9My9qbRovTIdHoC4WshJ8ASJbRo1oWqmVvvNM5Y0km1rUQY7yxCYYM_iDgrtH_1kwvu_DtWuX_wLTN08JmHk6XM1dMptMkiQQvdniyLdPzO-Va_POvH95nrIoj1w.kDskmUi9N66CcaCOo9lASA",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/BOL_REQUEST_RECORD?_where=(BOL_REQUEST_ID,eq,{{reqid}})",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"BOL_REQUEST_RECORD"
					],
					"query": [
						{
							"key": "_where",
							"value": "(BOL_REQUEST_ID,eq,{{reqid}})"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request Copy 3",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var currentTime = new Date();\r",
							"var nextMinute = new Date(currentTime.getTime() + 60000);\r",
							"var nextMinuteEpochTime = nextMinute.getTime();\r",
							"pm.environment.set(\"e\",nextMinuteEpochTime);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"setTimeout(function() {\r",
							"    // Continue with the rest of your test logic here\r",
							"    // ...\r",
							"}, 60000);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "kxtoken",
						"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.K3IGs0kAZty5-Gw6JAoQgJDw98LBHl8yEvTyTZs9125tZ86vLd_7LQ.ehZJ6ZIZI4JrkI-t8jqaTw.eMNgyYs4wPZKut--IMLPdqz0f7KKCovtwui61k_4woLz05Li2XftWcQJfQ0UJm4IBfmmdNaho8ze3cT0wNiN_hfZiAUwUsKM67zLgpwvVuW7msrHcR9gt5hLX3yheaMbeKexq5TTnoiNv9g9r3y5ZNs3ioHkWDeGYv-QLgiLHSBKkBepETDwLuOHEkvN3nmQBMPWqqH57vlVqce5SY21MnS8-N4fMeJmNkTlFFj6ewLjYkXy8wP9skY1Y7CK8_zOqssi91aAIczlmXwz8BCeJFjfIG-KWA6GIhDz6XDhLSavnSyRAf3SjmzZorr7xWqFAG-MLn5WiJofqv-wIS-G080X-UZYiHrVUC8zV2QYciEgepnqMJT4AY05EKbW5HZ1xqt1NBMW33BwTJs3XJF7KXjZbv9urcYT9qUs6wYzd8DSjqKAOgVmqHBgoYcj_QdzLisS3VHBdb0rXfNsyqx3YxnEteerwH87eesW2D4lTzH_n1avnZOJ-kCHAOfYyD-g4NCTSmy5yRcydxVmd4VZjVRrXS4usC-gb5HmcSMyqLgjclkDKaiduGTZqc0k3-Ny15MDincxA44yyJSaeVBJjNS2OMcVBvEqkLViJwswq44jIVpYpWnzja0S_pd4HYnfUw8YrxeKW9fXhpThHq5CrGYpT5Ay4gm-LifSVnu98YQ35G_Ykv8FxFMxb1gXSbyKNUECrnocQseTD_HvBwZkfOZA4LOGDCTZhigb1rPtdDmVDEKtAVTbQbQ06b-4o1XqRXj3_kfO9Y3ldlPTdBynEtmgdv2esRjiKMhgBNWFfTAeVJi4_ZXW3J4NXKVPD9QN.YIPBlYP7PJGMiAfbPP1yjA",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n      \"NEXT_QUERY_EXECUTION_DATE_TIME\": {{e}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/BOL_REQUEST_RECORD/{{ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"BOL_REQUEST_RECORD",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "MOCK_RESPONSE_2H",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var formattedONEDayAheadDate = new Date(Date.now() + 1 * 24 * 60 * 60 * 1000).toLocaleDateString('en-US', {month: '2-digit',day: '2-digit', year: '2-digit' }).replace(/\\//g, '');\r",
							"pm.environment.set(\"T1\", formattedONEDayAheadDate);\r",
							"\r",
							"var formattedoneDayBackDate = new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toLocaleDateString('en-US', { month: '2-digit',day: '2-digit', year: '2-digit' }).replace(/\\//g, '');\r",
							"pm.environment.set(\"Y\", formattedoneDayBackDate);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "kxtoken",
						"value": "{{kn_token_env}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"eventMessage\":{\r\n    \"requestid\":\"{{REQ_ID}}\",\r\n    \"records\":{\r\n        \"recordlist\":[\r\n        {\"record\":\"A2809S1F      071023     C1                                3P-BOL-0000          \"},\r\n        {\"record\":\"B  1704BIIC1                                               {{REC_ID}} \"},\r\n        {\"record\":\"WR1                                       SHAILESH SMILE          112E {{T1}}   \"},\r\n        {\"record\":\"WR4            {{M}}                               00000167PKG  {{MSC}}    MY1     \"},\r\n        {\"record\":\"WR5{{Y}}03421A ENTERED, INTENSIVE EXAM REQUIRED                 167      001   \"},\r\n        {\"record\":\"WR5{{Y}}06421H HOLD PLACED                                      167      002   \"},\r\n        {\"record\":\"WR5{{Y}}07422H AGRICULTURAL HOLD PLACED                         167      003   \"},\r\n        {\"record\":\"WN1            {{P}}                        58023{{Y}}                          \"},\r\n        {\"record\":\"Y  30018AFC100013                                                               \"},\r\n        {\"record\":\"Z2809S1F      063023                                                            \"}\r\n            ]}\r\n            },\r\n    \"eventType\":\"SET_RESPONSE_MANUAL_3P\",\"eventTime\":1686741426155\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.klearnow.com/staging-broker/v1/events",
					"protocol": "https",
					"host": [
						"api",
						"klearnow",
						"com"
					],
					"path": [
						"staging-broker",
						"v1",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "12 hour difference Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData=pm.response.json();\r",
							"pm.environment.set(\"REQ_ID\",jsonData[0].REQUEST_ID);\r",
							"pm.environment.set(\"ID\",jsonData[0].ID);\r",
							"pm.environment.set(\"epochTime1\",jsonData[0].NEXT_QUERY_EXECUTION_DATE_TIME);\r",
							"var e=pm.environment.get('epochTime1');\r",
							"const currentEpochTime = Math.floor(Date.now() / 1000);\r",
							"const e2=e/1000;\r",
							"// Get the absolute difference in seconds between the given epoch time and the current epoch time\r",
							"const timeDifferenceInSeconds = Math.abs(currentEpochTime -e2);\r",
							"\r",
							"// Calculate the difference in hour\r",
							"const timeDifferenceInHours = timeDifferenceInSeconds / 3600;\r",
							"const toleranceInHours=2;\r",
							"// Perform the test\r",
							"pm.test('Time difference should be approximately 12 hours', () => {\r",
							"    pm.expect(timeDifferenceInHours).to.be.closeTo(12, toleranceInHours);\r",
							"});\r",
							"\r",
							"pm.test('next query status is scheduled', function () {\r",
							"   pm.expect(jsonData[0].NEXT_QUERY_STATUS).to.eql(\"SCHEDULED\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "kxtoken",
						"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.bG24EfajNd7NMYpqsqzneMfQcxSJt2TdOp-Zqva7maOibdwVD1aBGA.xxQ6sB88NxLmMiLxIQOikA.5U80icvxdVFIMOygDvOkJAxbMJhchZqO0gtJhJIOZ8DUFnVT5QGsQTP_Rswci9j_LFxefg3egKJDxhcAAm8Se1MWq9LA1n0e1fm-6udEwOUMNl7M_cVFGlFFDUsOvLJyNy1s53hWHmj0fJe2Z6bA5DcjDD55LqUn4S_wE2pq01C1NqhNEFYIgZ22A5x7RPxyVWQknSy8p7mjwwC8k9fcHaSj_ZXQlIHW4zhB5nmgZRahWp2QrN8AXTn1ichpACuiTA2jBndroAy2B1fFcA5UgQvxJUzdyCi2sXkJAFaSZsKISqxxBqpPwSTzXfmqGzeEmSFOSXmyslAraYhTUgxZ9K4Rg9HJmDT__IFCVI-UxDaSukR04qPwivo4wyHNSe7xpRDaQQYRSzc4LF2MlCS8PIVKFSZYWfieazbE1y89csXFoJY1ItwJ5sfS9J8m5qewghd93-2YF-SHJt0mf6zh0PDUA8c0-9YARDfTaQmXDCj6Zf8ZM2vL_2rY9GJ2thLfTSxYHI-jQqGoCYarF-Uk_gsxgDI3JiEhTYipFxBre1Ng_2SN1BnBeB4GRze15Cl37av_4qDzEmY7tep05rMdMxDxPnzwv4rmvcdDI01Ql3h-jatfzfUIEhtYsVVNDaL6Q8JWxk4IbTU6ze1wTLyZ9WeW8bk3RLS0GOZzHQkveViKccEPX8jy7SrHjRWvKwjp9K53yni0JOjtwlBkLIOC2vidDK9My9qbRovTIdHoC4WshJ8ASJbRo1oWqmVvvNM5Y0km1rUQY7yxCYYM_iDgrtH_1kwvu_DtWuX_wLTN08JmHk6XM1dMptMkiQQvdniyLdPzO-Va_POvH95nrIoj1w.kDskmUi9N66CcaCOo9lASA",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/BOL_REQUEST_RECORD?_where=(BOL_REQUEST_ID,eq,{{reqid}})",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"BOL_REQUEST_RECORD"
					],
					"query": [
						{
							"key": "_where",
							"value": "(BOL_REQUEST_ID,eq,{{reqid}})"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request Copy 4",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var currentTime = new Date();\r",
							"var nextMinute = new Date(currentTime.getTime() + 60000);\r",
							"var nextMinuteEpochTime = nextMinute.getTime();\r",
							"pm.environment.set(\"e\",nextMinuteEpochTime);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"setTimeout(function() {\r",
							"    // Continue with the rest of your test logic here\r",
							"    // ...\r",
							"}, 60000);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "kxtoken",
						"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.K3IGs0kAZty5-Gw6JAoQgJDw98LBHl8yEvTyTZs9125tZ86vLd_7LQ.ehZJ6ZIZI4JrkI-t8jqaTw.eMNgyYs4wPZKut--IMLPdqz0f7KKCovtwui61k_4woLz05Li2XftWcQJfQ0UJm4IBfmmdNaho8ze3cT0wNiN_hfZiAUwUsKM67zLgpwvVuW7msrHcR9gt5hLX3yheaMbeKexq5TTnoiNv9g9r3y5ZNs3ioHkWDeGYv-QLgiLHSBKkBepETDwLuOHEkvN3nmQBMPWqqH57vlVqce5SY21MnS8-N4fMeJmNkTlFFj6ewLjYkXy8wP9skY1Y7CK8_zOqssi91aAIczlmXwz8BCeJFjfIG-KWA6GIhDz6XDhLSavnSyRAf3SjmzZorr7xWqFAG-MLn5WiJofqv-wIS-G080X-UZYiHrVUC8zV2QYciEgepnqMJT4AY05EKbW5HZ1xqt1NBMW33BwTJs3XJF7KXjZbv9urcYT9qUs6wYzd8DSjqKAOgVmqHBgoYcj_QdzLisS3VHBdb0rXfNsyqx3YxnEteerwH87eesW2D4lTzH_n1avnZOJ-kCHAOfYyD-g4NCTSmy5yRcydxVmd4VZjVRrXS4usC-gb5HmcSMyqLgjclkDKaiduGTZqc0k3-Ny15MDincxA44yyJSaeVBJjNS2OMcVBvEqkLViJwswq44jIVpYpWnzja0S_pd4HYnfUw8YrxeKW9fXhpThHq5CrGYpT5Ay4gm-LifSVnu98YQ35G_Ykv8FxFMxb1gXSbyKNUECrnocQseTD_HvBwZkfOZA4LOGDCTZhigb1rPtdDmVDEKtAVTbQbQ06b-4o1XqRXj3_kfO9Y3ldlPTdBynEtmgdv2esRjiKMhgBNWFfTAeVJi4_ZXW3J4NXKVPD9QN.YIPBlYP7PJGMiAfbPP1yjA",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n      \"NEXT_QUERY_EXECUTION_DATE_TIME\": {{e}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/BOL_REQUEST_RECORD/{{ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"BOL_REQUEST_RECORD",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "MOCK_RESPONSE_3H",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var formattedONEDayAheadDate = new Date(Date.now() + 1 * 24 * 60 * 60 * 1000).toLocaleDateString('en-US', {month: '2-digit',day: '2-digit', year: '2-digit' }).replace(/\\//g, '');\r",
							"pm.environment.set(\"T1\", formattedONEDayAheadDate);\r",
							"\r",
							"var formattedoneDayBackDate = new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toLocaleDateString('en-US', { month: '2-digit',day: '2-digit', year: '2-digit' }).replace(/\\//g, '');\r",
							"pm.environment.set(\"Y\", formattedoneDayBackDate);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "kxtoken",
						"value": "{{kn_token_env}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"eventMessage\":{\r\n    \"requestid\":\"{{REQ_ID}}\",\r\n    \"records\":{\r\n        \"recordlist\":[\r\n        {\"record\":\"A2809S1F      071023     C1                                3P-BOL-0000          \"},\r\n        {\"record\":\"B  1704BIIC1                                               {{REC_ID}} \"},\r\n        {\"record\":\"WR1                                       SHAILESH SMILE          112E {{T1}}   \"},\r\n        {\"record\":\"WR4            {{M}}                               00000167PKG  {{MSC}}    MY1     \"},\r\n        {\"record\":\"WR5{{Y}}03421A ENTERED, INTENSIVE EXAM REQUIRED                 167      001   \"},\r\n        {\"record\":\"WR5{{Y}}06421H HOLD PLACED                                      167      002   \"},\r\n        {\"record\":\"WR5{{Y}}07422H AGRICULTURAL HOLD PLACED                         167      003   \"},\r\n        {\"record\":\"WR5{{Y}}08423H OTHER GOVERNMENT AGENCY HOLD                     167      004   \"},\r\n        {\"record\":\"WN1            {{P}}                        58023{{Y}}                          \"},\r\n        {\"record\":\"Y  30018AFC100013                                                               \"},\r\n        {\"record\":\"Z2809S1F      063023                                                            \"}\r\n            ]}\r\n            },\r\n    \"eventType\":\"SET_RESPONSE_MANUAL_3P\",\"eventTime\":1686741426155\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.klearnow.com/staging-broker/v1/events",
					"protocol": "https",
					"host": [
						"api",
						"klearnow",
						"com"
					],
					"path": [
						"staging-broker",
						"v1",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "12 hour difference Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData=pm.response.json();\r",
							"pm.environment.set(\"REQ_ID\",jsonData[0].REQUEST_ID);\r",
							"pm.environment.set(\"ID\",jsonData[0].ID);\r",
							"pm.environment.set(\"epochTime1\",jsonData[0].NEXT_QUERY_EXECUTION_DATE_TIME);\r",
							"var e=pm.environment.get('epochTime1');\r",
							"const currentEpochTime = Math.floor(Date.now() / 1000);\r",
							"const e2=e/1000;\r",
							"// Get the absolute difference in seconds between the given epoch time and the current epoch time\r",
							"const timeDifferenceInSeconds = Math.abs(currentEpochTime -e2);\r",
							"\r",
							"// Calculate the difference in hour\r",
							"const timeDifferenceInHours = timeDifferenceInSeconds / 3600;\r",
							"const toleranceInHours=2;\r",
							"// Perform the test\r",
							"pm.test('Time difference should be approximately 24 hours', () => {\r",
							"    pm.expect(timeDifferenceInHours).to.be.closeTo(24, toleranceInHours);\r",
							"});\r",
							"\r",
							"pm.test('next query status is scheduled', function () {\r",
							"   pm.expect(jsonData[0].NEXT_QUERY_STATUS).to.eql(\"SCHEDULED\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "kxtoken",
						"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.bG24EfajNd7NMYpqsqzneMfQcxSJt2TdOp-Zqva7maOibdwVD1aBGA.xxQ6sB88NxLmMiLxIQOikA.5U80icvxdVFIMOygDvOkJAxbMJhchZqO0gtJhJIOZ8DUFnVT5QGsQTP_Rswci9j_LFxefg3egKJDxhcAAm8Se1MWq9LA1n0e1fm-6udEwOUMNl7M_cVFGlFFDUsOvLJyNy1s53hWHmj0fJe2Z6bA5DcjDD55LqUn4S_wE2pq01C1NqhNEFYIgZ22A5x7RPxyVWQknSy8p7mjwwC8k9fcHaSj_ZXQlIHW4zhB5nmgZRahWp2QrN8AXTn1ichpACuiTA2jBndroAy2B1fFcA5UgQvxJUzdyCi2sXkJAFaSZsKISqxxBqpPwSTzXfmqGzeEmSFOSXmyslAraYhTUgxZ9K4Rg9HJmDT__IFCVI-UxDaSukR04qPwivo4wyHNSe7xpRDaQQYRSzc4LF2MlCS8PIVKFSZYWfieazbE1y89csXFoJY1ItwJ5sfS9J8m5qewghd93-2YF-SHJt0mf6zh0PDUA8c0-9YARDfTaQmXDCj6Zf8ZM2vL_2rY9GJ2thLfTSxYHI-jQqGoCYarF-Uk_gsxgDI3JiEhTYipFxBre1Ng_2SN1BnBeB4GRze15Cl37av_4qDzEmY7tep05rMdMxDxPnzwv4rmvcdDI01Ql3h-jatfzfUIEhtYsVVNDaL6Q8JWxk4IbTU6ze1wTLyZ9WeW8bk3RLS0GOZzHQkveViKccEPX8jy7SrHjRWvKwjp9K53yni0JOjtwlBkLIOC2vidDK9My9qbRovTIdHoC4WshJ8ASJbRo1oWqmVvvNM5Y0km1rUQY7yxCYYM_iDgrtH_1kwvu_DtWuX_wLTN08JmHk6XM1dMptMkiQQvdniyLdPzO-Va_POvH95nrIoj1w.kDskmUi9N66CcaCOo9lASA",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/BOL_REQUEST_RECORD?_where=(BOL_REQUEST_ID,eq,{{reqid}})",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"BOL_REQUEST_RECORD"
					],
					"query": [
						{
							"key": "_where",
							"value": "(BOL_REQUEST_ID,eq,{{reqid}})"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request Copy 5",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var currentTime = new Date();\r",
							"var nextMinute = new Date(currentTime.getTime() + 60000);\r",
							"var nextMinuteEpochTime = nextMinute.getTime();\r",
							"pm.environment.set(\"e\",nextMinuteEpochTime);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"setTimeout(function() {\r",
							"    // Continue with the rest of your test logic here\r",
							"    // ...\r",
							"}, 60000);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "kxtoken",
						"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.K3IGs0kAZty5-Gw6JAoQgJDw98LBHl8yEvTyTZs9125tZ86vLd_7LQ.ehZJ6ZIZI4JrkI-t8jqaTw.eMNgyYs4wPZKut--IMLPdqz0f7KKCovtwui61k_4woLz05Li2XftWcQJfQ0UJm4IBfmmdNaho8ze3cT0wNiN_hfZiAUwUsKM67zLgpwvVuW7msrHcR9gt5hLX3yheaMbeKexq5TTnoiNv9g9r3y5ZNs3ioHkWDeGYv-QLgiLHSBKkBepETDwLuOHEkvN3nmQBMPWqqH57vlVqce5SY21MnS8-N4fMeJmNkTlFFj6ewLjYkXy8wP9skY1Y7CK8_zOqssi91aAIczlmXwz8BCeJFjfIG-KWA6GIhDz6XDhLSavnSyRAf3SjmzZorr7xWqFAG-MLn5WiJofqv-wIS-G080X-UZYiHrVUC8zV2QYciEgepnqMJT4AY05EKbW5HZ1xqt1NBMW33BwTJs3XJF7KXjZbv9urcYT9qUs6wYzd8DSjqKAOgVmqHBgoYcj_QdzLisS3VHBdb0rXfNsyqx3YxnEteerwH87eesW2D4lTzH_n1avnZOJ-kCHAOfYyD-g4NCTSmy5yRcydxVmd4VZjVRrXS4usC-gb5HmcSMyqLgjclkDKaiduGTZqc0k3-Ny15MDincxA44yyJSaeVBJjNS2OMcVBvEqkLViJwswq44jIVpYpWnzja0S_pd4HYnfUw8YrxeKW9fXhpThHq5CrGYpT5Ay4gm-LifSVnu98YQ35G_Ykv8FxFMxb1gXSbyKNUECrnocQseTD_HvBwZkfOZA4LOGDCTZhigb1rPtdDmVDEKtAVTbQbQ06b-4o1XqRXj3_kfO9Y3ldlPTdBynEtmgdv2esRjiKMhgBNWFfTAeVJi4_ZXW3J4NXKVPD9QN.YIPBlYP7PJGMiAfbPP1yjA",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n      \"NEXT_QUERY_EXECUTION_DATE_TIME\": {{e}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/BOL_REQUEST_RECORD/{{ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"BOL_REQUEST_RECORD",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "MOCK_RESPONSE_4A",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var formattedONEDayAheadDate = new Date(Date.now() + 1 * 24 * 60 * 60 * 1000).toLocaleDateString('en-US', {month: '2-digit',day: '2-digit', year: '2-digit' }).replace(/\\//g, '');\r",
							"pm.environment.set(\"T1\", formattedONEDayAheadDate);\r",
							"\r",
							"var formattedoneDayBackDate = new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toLocaleDateString('en-US', { month: '2-digit',day: '2-digit', year: '2-digit' }).replace(/\\//g, '');\r",
							"pm.environment.set(\"Y\", formattedoneDayBackDate);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "kxtoken",
						"value": "{{kn_token_env}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"eventMessage\":{\r\n    \"requestid\":\"{{REQ_ID}}\",\r\n    \"records\":{\r\n        \"recordlist\":[\r\n        {\"record\":\"A2809S1F      071023     C1                                3P-BOL-0000          \"},\r\n        {\"record\":\"B  1704BIIC1                                               {{REC_ID}} \"},\r\n        {\"record\":\"WR1                                       SHAILESH SMILE          112E {{T1}}   \"},\r\n        {\"record\":\"WR4            {{M}}                               00000167PKG  {{MSC}}    MY1     \"},\r\n        {\"record\":\"WR5{{Y}}03421A ENTERED, INTENSIVE EXAM REQUIRED                 167      001   \"},\r\n        {\"record\":\"WR5{{Y}}06421H HOLD PLACED                                      167      002   \"},\r\n        {\"record\":\"WR5{{Y}}07422H AGRICULTURAL HOLD PLACED                         167      003   \"},\r\n        {\"record\":\"WR5{{Y}}08423H OTHER GOVERNMENT AGENCY HOLD                     167      004   \"},\r\n        {\"record\":\"WR5{{Y}}09424A INTENSIVE EXAM REQUIRED                          167      005   \"},\r\n        {\"record\":\"WN1            {{P}}                        58023{{Y}}                          \"},\r\n        {\"record\":\"Y  30018AFC100013                                                               \"},\r\n        {\"record\":\"Z2809S1F      063023                                                            \"}\r\n            ]}\r\n            },\r\n    \"eventType\":\"SET_RESPONSE_MANUAL_3P\",\"eventTime\":1686741426155\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.klearnow.com/staging-broker/v1/events",
					"protocol": "https",
					"host": [
						"api",
						"klearnow",
						"com"
					],
					"path": [
						"staging-broker",
						"v1",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "12 hour difference Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData=pm.response.json();\r",
							"pm.environment.set(\"REQ_ID\",jsonData[0].REQUEST_ID);\r",
							"pm.environment.set(\"ID\",jsonData[0].ID);\r",
							"pm.environment.set(\"epochTime1\",jsonData[0].NEXT_QUERY_EXECUTION_DATE_TIME);\r",
							"var e=pm.environment.get('epochTime1');\r",
							"const currentEpochTime = Math.floor(Date.now() / 1000);\r",
							"const e2=e/1000;\r",
							"// Get the absolute difference in seconds between the given epoch time and the current epoch time\r",
							"const timeDifferenceInSeconds = Math.abs(currentEpochTime -e2);\r",
							"\r",
							"// Calculate the difference in hour\r",
							"const timeDifferenceInHours = timeDifferenceInSeconds / 3600;\r",
							"const toleranceInHours=2;\r",
							"// Perform the test\r",
							"pm.test('Time difference should be approximately 12 hours', () => {\r",
							"    pm.expect(timeDifferenceInHours).to.be.closeTo(12, toleranceInHours);\r",
							"});\r",
							"\r",
							"pm.test('next query status is scheduled', function () {\r",
							"   pm.expect(jsonData[0].NEXT_QUERY_STATUS).to.eql(\"SCHEDULED\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "kxtoken",
						"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.bG24EfajNd7NMYpqsqzneMfQcxSJt2TdOp-Zqva7maOibdwVD1aBGA.xxQ6sB88NxLmMiLxIQOikA.5U80icvxdVFIMOygDvOkJAxbMJhchZqO0gtJhJIOZ8DUFnVT5QGsQTP_Rswci9j_LFxefg3egKJDxhcAAm8Se1MWq9LA1n0e1fm-6udEwOUMNl7M_cVFGlFFDUsOvLJyNy1s53hWHmj0fJe2Z6bA5DcjDD55LqUn4S_wE2pq01C1NqhNEFYIgZ22A5x7RPxyVWQknSy8p7mjwwC8k9fcHaSj_ZXQlIHW4zhB5nmgZRahWp2QrN8AXTn1ichpACuiTA2jBndroAy2B1fFcA5UgQvxJUzdyCi2sXkJAFaSZsKISqxxBqpPwSTzXfmqGzeEmSFOSXmyslAraYhTUgxZ9K4Rg9HJmDT__IFCVI-UxDaSukR04qPwivo4wyHNSe7xpRDaQQYRSzc4LF2MlCS8PIVKFSZYWfieazbE1y89csXFoJY1ItwJ5sfS9J8m5qewghd93-2YF-SHJt0mf6zh0PDUA8c0-9YARDfTaQmXDCj6Zf8ZM2vL_2rY9GJ2thLfTSxYHI-jQqGoCYarF-Uk_gsxgDI3JiEhTYipFxBre1Ng_2SN1BnBeB4GRze15Cl37av_4qDzEmY7tep05rMdMxDxPnzwv4rmvcdDI01Ql3h-jatfzfUIEhtYsVVNDaL6Q8JWxk4IbTU6ze1wTLyZ9WeW8bk3RLS0GOZzHQkveViKccEPX8jy7SrHjRWvKwjp9K53yni0JOjtwlBkLIOC2vidDK9My9qbRovTIdHoC4WshJ8ASJbRo1oWqmVvvNM5Y0km1rUQY7yxCYYM_iDgrtH_1kwvu_DtWuX_wLTN08JmHk6XM1dMptMkiQQvdniyLdPzO-Va_POvH95nrIoj1w.kDskmUi9N66CcaCOo9lASA",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/BOL_REQUEST_RECORD?_where=(BOL_REQUEST_ID,eq,{{reqid}})",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"BOL_REQUEST_RECORD"
					],
					"query": [
						{
							"key": "_where",
							"value": "(BOL_REQUEST_ID,eq,{{reqid}})"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request Copy 6",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var currentTime = new Date();\r",
							"var nextMinute = new Date(currentTime.getTime() + 60000);\r",
							"var nextMinuteEpochTime = nextMinute.getTime();\r",
							"pm.environment.set(\"e\",nextMinuteEpochTime);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"setTimeout(function() {\r",
							"    // Continue with the rest of your test logic here\r",
							"    // ...\r",
							"}, 60000);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "kxtoken",
						"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.K3IGs0kAZty5-Gw6JAoQgJDw98LBHl8yEvTyTZs9125tZ86vLd_7LQ.ehZJ6ZIZI4JrkI-t8jqaTw.eMNgyYs4wPZKut--IMLPdqz0f7KKCovtwui61k_4woLz05Li2XftWcQJfQ0UJm4IBfmmdNaho8ze3cT0wNiN_hfZiAUwUsKM67zLgpwvVuW7msrHcR9gt5hLX3yheaMbeKexq5TTnoiNv9g9r3y5ZNs3ioHkWDeGYv-QLgiLHSBKkBepETDwLuOHEkvN3nmQBMPWqqH57vlVqce5SY21MnS8-N4fMeJmNkTlFFj6ewLjYkXy8wP9skY1Y7CK8_zOqssi91aAIczlmXwz8BCeJFjfIG-KWA6GIhDz6XDhLSavnSyRAf3SjmzZorr7xWqFAG-MLn5WiJofqv-wIS-G080X-UZYiHrVUC8zV2QYciEgepnqMJT4AY05EKbW5HZ1xqt1NBMW33BwTJs3XJF7KXjZbv9urcYT9qUs6wYzd8DSjqKAOgVmqHBgoYcj_QdzLisS3VHBdb0rXfNsyqx3YxnEteerwH87eesW2D4lTzH_n1avnZOJ-kCHAOfYyD-g4NCTSmy5yRcydxVmd4VZjVRrXS4usC-gb5HmcSMyqLgjclkDKaiduGTZqc0k3-Ny15MDincxA44yyJSaeVBJjNS2OMcVBvEqkLViJwswq44jIVpYpWnzja0S_pd4HYnfUw8YrxeKW9fXhpThHq5CrGYpT5Ay4gm-LifSVnu98YQ35G_Ykv8FxFMxb1gXSbyKNUECrnocQseTD_HvBwZkfOZA4LOGDCTZhigb1rPtdDmVDEKtAVTbQbQ06b-4o1XqRXj3_kfO9Y3ldlPTdBynEtmgdv2esRjiKMhgBNWFfTAeVJi4_ZXW3J4NXKVPD9QN.YIPBlYP7PJGMiAfbPP1yjA",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n      \"NEXT_QUERY_EXECUTION_DATE_TIME\": {{e}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/BOL_REQUEST_RECORD/{{ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"BOL_REQUEST_RECORD",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "MOCK_RESPONSE_4C",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var formattedONEDayAheadDate = new Date(Date.now() + 1 * 24 * 60 * 60 * 1000).toLocaleDateString('en-US', {month: '2-digit',day: '2-digit', year: '2-digit' }).replace(/\\//g, '');\r",
							"pm.environment.set(\"T1\", formattedONEDayAheadDate);\r",
							"\r",
							"var formattedoneDayBackDate = new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toLocaleDateString('en-US', { month: '2-digit',day: '2-digit', year: '2-digit' }).replace(/\\//g, '');\r",
							"pm.environment.set(\"Y\", formattedoneDayBackDate);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "kxtoken",
						"value": "{{kn_token_env}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"eventMessage\":{\r\n    \"requestid\":\"{{REQ_ID}}\",\r\n    \"records\":{\r\n        \"recordlist\":[\r\n        {\"record\":\"A2809S1F      071023     C1                                3P-BOL-0000          \"},\r\n        {\"record\":\"B  1704BIIC1                                               {{REC_ID}} \"},\r\n        {\"record\":\"WR1                                       SHAILESH SMILE          112E {{T1}}   \"},\r\n        {\"record\":\"WR4            {{M}}                               00000167PKG  {{MSC}}    MY1     \"},\r\n        {\"record\":\"WR5{{Y}}03421A ENTERED, INTENSIVE EXAM REQUIRED                 167      001   \"},\r\n        {\"record\":\"WR5{{Y}}06421H HOLD PLACED                                      167      002   \"},\r\n        {\"record\":\"WR5{{Y}}07422H AGRICULTURAL HOLD PLACED                         167      003   \"},\r\n        {\"record\":\"WR5{{Y}}08423H OTHER GOVERNMENT AGENCY HOLD                     167      004   \"},\r\n        {\"record\":\"WR5{{Y}}09424A INTENSIVE EXAM REQUIRED                          167      005   \"},\r\n        {\"record\":\"WR5{{Y}}10424C ENTERED GENERAL EXAMINATION                      167      006   \"},\r\n        {\"record\":\"WN1            {{P}}                        58023{{Y}}                          \"},\r\n        {\"record\":\"Y  30018AFC100013                                                               \"},\r\n        {\"record\":\"Z2809S1F      063023                                                            \"}\r\n            ]}\r\n            },\r\n    \"eventType\":\"SET_RESPONSE_MANUAL_3P\",\"eventTime\":1686741426155\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.klearnow.com/staging-broker/v1/events",
					"protocol": "https",
					"host": [
						"api",
						"klearnow",
						"com"
					],
					"path": [
						"staging-broker",
						"v1",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "12 hour difference Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData=pm.response.json();\r",
							"pm.environment.set(\"REQ_ID\",jsonData[0].REQUEST_ID);\r",
							"pm.environment.set(\"ID\",jsonData[0].ID);\r",
							"pm.environment.set(\"epochTime1\",jsonData[0].NEXT_QUERY_EXECUTION_DATE_TIME);\r",
							"var e=pm.environment.get('epochTime1');\r",
							"const currentEpochTime = Math.floor(Date.now() / 1000);\r",
							"const e2=e/1000;\r",
							"// Get the absolute difference in seconds between the given epoch time and the current epoch time\r",
							"const timeDifferenceInSeconds = Math.abs(currentEpochTime -e2);\r",
							"\r",
							"// Calculate the difference in hours\r",
							"const timeDifferenceInHours = timeDifferenceInSeconds / 3600;\r",
							"const toleranceInHours=2;\r",
							"// Perform the test\r",
							"pm.test('Time difference should be approximately 12 hours', () => {\r",
							"    pm.expect(timeDifferenceInHours).to.be.closeTo(12, toleranceInHours);\r",
							"});\r",
							"\r",
							"pm.test('next query status is scheduled', function () {\r",
							"   pm.expect(jsonData[0].NEXT_QUERY_STATUS).to.eql(\"SCHEDULED\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "kxtoken",
						"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.bG24EfajNd7NMYpqsqzneMfQcxSJt2TdOp-Zqva7maOibdwVD1aBGA.xxQ6sB88NxLmMiLxIQOikA.5U80icvxdVFIMOygDvOkJAxbMJhchZqO0gtJhJIOZ8DUFnVT5QGsQTP_Rswci9j_LFxefg3egKJDxhcAAm8Se1MWq9LA1n0e1fm-6udEwOUMNl7M_cVFGlFFDUsOvLJyNy1s53hWHmj0fJe2Z6bA5DcjDD55LqUn4S_wE2pq01C1NqhNEFYIgZ22A5x7RPxyVWQknSy8p7mjwwC8k9fcHaSj_ZXQlIHW4zhB5nmgZRahWp2QrN8AXTn1ichpACuiTA2jBndroAy2B1fFcA5UgQvxJUzdyCi2sXkJAFaSZsKISqxxBqpPwSTzXfmqGzeEmSFOSXmyslAraYhTUgxZ9K4Rg9HJmDT__IFCVI-UxDaSukR04qPwivo4wyHNSe7xpRDaQQYRSzc4LF2MlCS8PIVKFSZYWfieazbE1y89csXFoJY1ItwJ5sfS9J8m5qewghd93-2YF-SHJt0mf6zh0PDUA8c0-9YARDfTaQmXDCj6Zf8ZM2vL_2rY9GJ2thLfTSxYHI-jQqGoCYarF-Uk_gsxgDI3JiEhTYipFxBre1Ng_2SN1BnBeB4GRze15Cl37av_4qDzEmY7tep05rMdMxDxPnzwv4rmvcdDI01Ql3h-jatfzfUIEhtYsVVNDaL6Q8JWxk4IbTU6ze1wTLyZ9WeW8bk3RLS0GOZzHQkveViKccEPX8jy7SrHjRWvKwjp9K53yni0JOjtwlBkLIOC2vidDK9My9qbRovTIdHoC4WshJ8ASJbRo1oWqmVvvNM5Y0km1rUQY7yxCYYM_iDgrtH_1kwvu_DtWuX_wLTN08JmHk6XM1dMptMkiQQvdniyLdPzO-Va_POvH95nrIoj1w.kDskmUi9N66CcaCOo9lASA",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/BOL_REQUEST_RECORD?_where=(BOL_REQUEST_ID,eq,{{reqid}})",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"BOL_REQUEST_RECORD"
					],
					"query": [
						{
							"key": "_where",
							"value": "(BOL_REQUEST_ID,eq,{{reqid}})"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request Copy 7",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var currentTime = new Date();\r",
							"var nextMinute = new Date(currentTime.getTime() + 60000);\r",
							"var nextMinuteEpochTime = nextMinute.getTime();\r",
							"pm.environment.set(\"e\",nextMinuteEpochTime);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"setTimeout(function() {\r",
							"    // Continue with the rest of your test logic here\r",
							"    // ...\r",
							"}, 60000);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "kxtoken",
						"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.K3IGs0kAZty5-Gw6JAoQgJDw98LBHl8yEvTyTZs9125tZ86vLd_7LQ.ehZJ6ZIZI4JrkI-t8jqaTw.eMNgyYs4wPZKut--IMLPdqz0f7KKCovtwui61k_4woLz05Li2XftWcQJfQ0UJm4IBfmmdNaho8ze3cT0wNiN_hfZiAUwUsKM67zLgpwvVuW7msrHcR9gt5hLX3yheaMbeKexq5TTnoiNv9g9r3y5ZNs3ioHkWDeGYv-QLgiLHSBKkBepETDwLuOHEkvN3nmQBMPWqqH57vlVqce5SY21MnS8-N4fMeJmNkTlFFj6ewLjYkXy8wP9skY1Y7CK8_zOqssi91aAIczlmXwz8BCeJFjfIG-KWA6GIhDz6XDhLSavnSyRAf3SjmzZorr7xWqFAG-MLn5WiJofqv-wIS-G080X-UZYiHrVUC8zV2QYciEgepnqMJT4AY05EKbW5HZ1xqt1NBMW33BwTJs3XJF7KXjZbv9urcYT9qUs6wYzd8DSjqKAOgVmqHBgoYcj_QdzLisS3VHBdb0rXfNsyqx3YxnEteerwH87eesW2D4lTzH_n1avnZOJ-kCHAOfYyD-g4NCTSmy5yRcydxVmd4VZjVRrXS4usC-gb5HmcSMyqLgjclkDKaiduGTZqc0k3-Ny15MDincxA44yyJSaeVBJjNS2OMcVBvEqkLViJwswq44jIVpYpWnzja0S_pd4HYnfUw8YrxeKW9fXhpThHq5CrGYpT5Ay4gm-LifSVnu98YQ35G_Ykv8FxFMxb1gXSbyKNUECrnocQseTD_HvBwZkfOZA4LOGDCTZhigb1rPtdDmVDEKtAVTbQbQ06b-4o1XqRXj3_kfO9Y3ldlPTdBynEtmgdv2esRjiKMhgBNWFfTAeVJi4_ZXW3J4NXKVPD9QN.YIPBlYP7PJGMiAfbPP1yjA",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n      \"NEXT_QUERY_EXECUTION_DATE_TIME\": {{e}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/BOL_REQUEST_RECORD/{{ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"BOL_REQUEST_RECORD",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "MOCK_RESPONSE_5H",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var formattedONEDayAheadDate = new Date(Date.now() + 1 * 24 * 60 * 60 * 1000).toLocaleDateString('en-US', {month: '2-digit',day: '2-digit', year: '2-digit' }).replace(/\\//g, '');\r",
							"pm.environment.set(\"T1\", formattedONEDayAheadDate);\r",
							"\r",
							"var formattedoneDayBackDate = new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toLocaleDateString('en-US', { month: '2-digit',day: '2-digit', year: '2-digit' }).replace(/\\//g, '');\r",
							"pm.environment.set(\"Y\", formattedoneDayBackDate);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "kxtoken",
						"value": "{{kn_token_env}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"eventMessage\":{\r\n    \"requestid\":\"{{REQ_ID}}\",\r\n    \"records\":{\r\n        \"recordlist\":[\r\n        {\"record\":\"A2809S1F      071023     C1                                3P-BOL-0000          \"},\r\n        {\"record\":\"B  1704BIIC1                                               {{REC_ID}} \"},\r\n        {\"record\":\"WR1                                       SHAILESH SMILE          112E {{T1}}   \"},\r\n        {\"record\":\"WR4            {{M}}                               00000167PKG  {{MSC}}    MY1     \"},\r\n        {\"record\":\"WR5{{Y}}03421A ENTERED, INTENSIVE EXAM REQUIRED                 167      001   \"},\r\n        {\"record\":\"WR5{{Y}}06421H HOLD PLACED                                      167      002   \"},\r\n        {\"record\":\"WR5{{Y}}07422H AGRICULTURAL HOLD PLACED                         167      003   \"},\r\n        {\"record\":\"WR5{{Y}}08423H OTHER GOVERNMENT AGENCY HOLD                     167      004   \"},\r\n        {\"record\":\"WR5{{Y}}09424A INTENSIVE EXAM REQUIRED                          167      005   \"},\r\n        {\"record\":\"WR5{{Y}}10424C ENTERED GENERAL EXAMINATION                      167      006   \"},\r\n        {\"record\":\"WR5{{Y}}11425H DOCUMENT REVIEW HOLD                             167      007   \"},\r\n        {\"record\":\"WN1            {{P}}                        58023{{Y}}                          \"},\r\n        {\"record\":\"Y  30018AFC100013                                                               \"},\r\n        {\"record\":\"Z2809S1F      063023                                                            \"}\r\n            ]}\r\n            },\r\n    \"eventType\":\"SET_RESPONSE_MANUAL_3P\",\"eventTime\":1686741426155\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.klearnow.com/staging-broker/v1/events",
					"protocol": "https",
					"host": [
						"api",
						"klearnow",
						"com"
					],
					"path": [
						"staging-broker",
						"v1",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "12 hour difference Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData=pm.response.json();\r",
							"pm.environment.set(\"REQ_ID\",jsonData[0].REQUEST_ID);\r",
							"pm.environment.set(\"ID\",jsonData[0].ID);\r",
							"pm.environment.set(\"epochTime1\",jsonData[0].NEXT_QUERY_EXECUTION_DATE_TIME);\r",
							"var e=pm.environment.get('epochTime1');\r",
							"const currentEpochTime = Math.floor(Date.now() / 1000);\r",
							"const e2=e/1000;\r",
							"// Get the absolute difference in seconds between the given epoch time and the current epoch time\r",
							"const timeDifferenceInSeconds = Math.abs(currentEpochTime -e2);\r",
							"\r",
							"// Calculate the difference in hours\r",
							"const timeDifferenceInHours = timeDifferenceInSeconds / 3600;\r",
							"const toleranceInHours=2;\r",
							"// Perform the test\r",
							"pm.test('Time difference should be approximately 12 hours', () => {\r",
							"    pm.expect(timeDifferenceInHours).to.be.closeTo(12, toleranceInHours);\r",
							"});\r",
							"\r",
							"pm.test('next query status is scheduled', function () {\r",
							"   pm.expect(jsonData[0].NEXT_QUERY_STATUS).to.eql(\"SCHEDULED\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "kxtoken",
						"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.bG24EfajNd7NMYpqsqzneMfQcxSJt2TdOp-Zqva7maOibdwVD1aBGA.xxQ6sB88NxLmMiLxIQOikA.5U80icvxdVFIMOygDvOkJAxbMJhchZqO0gtJhJIOZ8DUFnVT5QGsQTP_Rswci9j_LFxefg3egKJDxhcAAm8Se1MWq9LA1n0e1fm-6udEwOUMNl7M_cVFGlFFDUsOvLJyNy1s53hWHmj0fJe2Z6bA5DcjDD55LqUn4S_wE2pq01C1NqhNEFYIgZ22A5x7RPxyVWQknSy8p7mjwwC8k9fcHaSj_ZXQlIHW4zhB5nmgZRahWp2QrN8AXTn1ichpACuiTA2jBndroAy2B1fFcA5UgQvxJUzdyCi2sXkJAFaSZsKISqxxBqpPwSTzXfmqGzeEmSFOSXmyslAraYhTUgxZ9K4Rg9HJmDT__IFCVI-UxDaSukR04qPwivo4wyHNSe7xpRDaQQYRSzc4LF2MlCS8PIVKFSZYWfieazbE1y89csXFoJY1ItwJ5sfS9J8m5qewghd93-2YF-SHJt0mf6zh0PDUA8c0-9YARDfTaQmXDCj6Zf8ZM2vL_2rY9GJ2thLfTSxYHI-jQqGoCYarF-Uk_gsxgDI3JiEhTYipFxBre1Ng_2SN1BnBeB4GRze15Cl37av_4qDzEmY7tep05rMdMxDxPnzwv4rmvcdDI01Ql3h-jatfzfUIEhtYsVVNDaL6Q8JWxk4IbTU6ze1wTLyZ9WeW8bk3RLS0GOZzHQkveViKccEPX8jy7SrHjRWvKwjp9K53yni0JOjtwlBkLIOC2vidDK9My9qbRovTIdHoC4WshJ8ASJbRo1oWqmVvvNM5Y0km1rUQY7yxCYYM_iDgrtH_1kwvu_DtWuX_wLTN08JmHk6XM1dMptMkiQQvdniyLdPzO-Va_POvH95nrIoj1w.kDskmUi9N66CcaCOo9lASA",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/BOL_REQUEST_RECORD?_where=(BOL_REQUEST_ID,eq,{{reqid}})",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"BOL_REQUEST_RECORD"
					],
					"query": [
						{
							"key": "_where",
							"value": "(BOL_REQUEST_ID,eq,{{reqid}})"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request Copy 8",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var currentTime = new Date();\r",
							"var nextMinute = new Date(currentTime.getTime() + 60000);\r",
							"var nextMinuteEpochTime = nextMinute.getTime();\r",
							"pm.environment.set(\"e\",nextMinuteEpochTime);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"setTimeout(function() {\r",
							"    // Continue with the rest of your test logic here\r",
							"    // ...\r",
							"}, 60000);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "kxtoken",
						"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.K3IGs0kAZty5-Gw6JAoQgJDw98LBHl8yEvTyTZs9125tZ86vLd_7LQ.ehZJ6ZIZI4JrkI-t8jqaTw.eMNgyYs4wPZKut--IMLPdqz0f7KKCovtwui61k_4woLz05Li2XftWcQJfQ0UJm4IBfmmdNaho8ze3cT0wNiN_hfZiAUwUsKM67zLgpwvVuW7msrHcR9gt5hLX3yheaMbeKexq5TTnoiNv9g9r3y5ZNs3ioHkWDeGYv-QLgiLHSBKkBepETDwLuOHEkvN3nmQBMPWqqH57vlVqce5SY21MnS8-N4fMeJmNkTlFFj6ewLjYkXy8wP9skY1Y7CK8_zOqssi91aAIczlmXwz8BCeJFjfIG-KWA6GIhDz6XDhLSavnSyRAf3SjmzZorr7xWqFAG-MLn5WiJofqv-wIS-G080X-UZYiHrVUC8zV2QYciEgepnqMJT4AY05EKbW5HZ1xqt1NBMW33BwTJs3XJF7KXjZbv9urcYT9qUs6wYzd8DSjqKAOgVmqHBgoYcj_QdzLisS3VHBdb0rXfNsyqx3YxnEteerwH87eesW2D4lTzH_n1avnZOJ-kCHAOfYyD-g4NCTSmy5yRcydxVmd4VZjVRrXS4usC-gb5HmcSMyqLgjclkDKaiduGTZqc0k3-Ny15MDincxA44yyJSaeVBJjNS2OMcVBvEqkLViJwswq44jIVpYpWnzja0S_pd4HYnfUw8YrxeKW9fXhpThHq5CrGYpT5Ay4gm-LifSVnu98YQ35G_Ykv8FxFMxb1gXSbyKNUECrnocQseTD_HvBwZkfOZA4LOGDCTZhigb1rPtdDmVDEKtAVTbQbQ06b-4o1XqRXj3_kfO9Y3ldlPTdBynEtmgdv2esRjiKMhgBNWFfTAeVJi4_ZXW3J4NXKVPD9QN.YIPBlYP7PJGMiAfbPP1yjA",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n      \"NEXT_QUERY_EXECUTION_DATE_TIME\": {{e}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/BOL_REQUEST_RECORD/{{ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"BOL_REQUEST_RECORD",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "MOCK_RESPONSE_2O",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var formattedONEDayAheadDate = new Date(Date.now() + 1 * 24 * 60 * 60 * 1000).toLocaleDateString('en-US', {month: '2-digit',day: '2-digit', year: '2-digit' }).replace(/\\//g, '');\r",
							"pm.environment.set(\"T1\", formattedONEDayAheadDate);\r",
							"\r",
							"var formattedoneDayBackDate = new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toLocaleDateString('en-US', { month: '2-digit',day: '2-digit', year: '2-digit' }).replace(/\\//g, '');\r",
							"pm.environment.set(\"Y\", formattedoneDayBackDate);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "kxtoken",
						"value": "{{kn_token_env}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"eventMessage\":{\r\n    \"requestid\":\"{{REQ_ID}}\",\r\n    \"records\":{\r\n        \"recordlist\":[\r\n        {\"record\":\"A2809S1F      071023     C1                                3P-BOL-0000          \"},\r\n        {\"record\":\"B  1704BIIC1                                               {{REC_ID}} \"},\r\n        {\"record\":\"WR1                                       SHAILESH SMILE          112E {{T1}}   \"},\r\n        {\"record\":\"WR4            {{M}}                               00000167PKG  {{MSC}}    MY1     \"},\r\n        {\"record\":\"WR5{{Y}}03421A ENTERED, INTENSIVE EXAM REQUIRED                 167      001   \"},\r\n        {\"record\":\"WR5{{Y}}06421H HOLD PLACED                                      167      002   \"},\r\n        {\"record\":\"WR5{{Y}}07422H AGRICULTURAL HOLD PLACED                         167      003   \"},\r\n        {\"record\":\"WR5{{Y}}08423H OTHER GOVERNMENT AGENCY HOLD                     167      004   \"},\r\n        {\"record\":\"WR5{{Y}}09424A INTENSIVE EXAM REQUIRED                          167      005   \"},\r\n        {\"record\":\"WR5{{Y}}10424C ENTERED GENERAL EXAMINATION                      167      006   \"},\r\n        {\"record\":\"WR5{{Y}}11425H DOCUMENT REVIEW HOLD                             167      007   \"},\r\n        {\"record\":\"WR5{{Y}}12422O ISF HOLD, NO ISF ON FILE                         167      008   \"},\r\n        {\"record\":\"WN1            {{P}}                        58023{{Y}}                          \"},\r\n        {\"record\":\"Y  30018AFC100013                                                               \"},\r\n        {\"record\":\"Z2809S1F      063023                                                            \"}\r\n            ]}\r\n            },\r\n    \"eventType\":\"SET_RESPONSE_MANUAL_3P\",\"eventTime\":1686741426155\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.klearnow.com/staging-broker/v1/events",
					"protocol": "https",
					"host": [
						"api",
						"klearnow",
						"com"
					],
					"path": [
						"staging-broker",
						"v1",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "12 hour difference Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData=pm.response.json();\r",
							"pm.environment.set(\"REQ_ID\",jsonData[0].REQUEST_ID);\r",
							"pm.environment.set(\"ID\",jsonData[0].ID);\r",
							"pm.environment.set(\"epochTime1\",jsonData[0].NEXT_QUERY_EXECUTION_DATE_TIME);\r",
							"var e=pm.environment.get('epochTime1');\r",
							"const currentEpochTime = Math.floor(Date.now() / 1000);\r",
							"const e2=e/1000;\r",
							"// Get the absolute difference in seconds between the given epoch time and the current epoch time\r",
							"const timeDifferenceInSeconds = Math.abs(currentEpochTime -e2);\r",
							"\r",
							"// Calculate the difference in hours\r",
							"const timeDifferenceInHours = timeDifferenceInSeconds / 3600;\r",
							"const toleranceInHours=2;\r",
							"// Perform the test\r",
							"pm.test('Time difference should be approximately 12 hours', () => {\r",
							"    pm.expect(timeDifferenceInHours).to.be.closeTo(12, toleranceInHours);\r",
							"});\r",
							"\r",
							"pm.test('next query status is scheduled', function () {\r",
							"   pm.expect(jsonData[0].NEXT_QUERY_STATUS).to.eql(\"SCHEDULED\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "kxtoken",
						"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.bG24EfajNd7NMYpqsqzneMfQcxSJt2TdOp-Zqva7maOibdwVD1aBGA.xxQ6sB88NxLmMiLxIQOikA.5U80icvxdVFIMOygDvOkJAxbMJhchZqO0gtJhJIOZ8DUFnVT5QGsQTP_Rswci9j_LFxefg3egKJDxhcAAm8Se1MWq9LA1n0e1fm-6udEwOUMNl7M_cVFGlFFDUsOvLJyNy1s53hWHmj0fJe2Z6bA5DcjDD55LqUn4S_wE2pq01C1NqhNEFYIgZ22A5x7RPxyVWQknSy8p7mjwwC8k9fcHaSj_ZXQlIHW4zhB5nmgZRahWp2QrN8AXTn1ichpACuiTA2jBndroAy2B1fFcA5UgQvxJUzdyCi2sXkJAFaSZsKISqxxBqpPwSTzXfmqGzeEmSFOSXmyslAraYhTUgxZ9K4Rg9HJmDT__IFCVI-UxDaSukR04qPwivo4wyHNSe7xpRDaQQYRSzc4LF2MlCS8PIVKFSZYWfieazbE1y89csXFoJY1ItwJ5sfS9J8m5qewghd93-2YF-SHJt0mf6zh0PDUA8c0-9YARDfTaQmXDCj6Zf8ZM2vL_2rY9GJ2thLfTSxYHI-jQqGoCYarF-Uk_gsxgDI3JiEhTYipFxBre1Ng_2SN1BnBeB4GRze15Cl37av_4qDzEmY7tep05rMdMxDxPnzwv4rmvcdDI01Ql3h-jatfzfUIEhtYsVVNDaL6Q8JWxk4IbTU6ze1wTLyZ9WeW8bk3RLS0GOZzHQkveViKccEPX8jy7SrHjRWvKwjp9K53yni0JOjtwlBkLIOC2vidDK9My9qbRovTIdHoC4WshJ8ASJbRo1oWqmVvvNM5Y0km1rUQY7yxCYYM_iDgrtH_1kwvu_DtWuX_wLTN08JmHk6XM1dMptMkiQQvdniyLdPzO-Va_POvH95nrIoj1w.kDskmUi9N66CcaCOo9lASA",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/BOL_REQUEST_RECORD?_where=(BOL_REQUEST_ID,eq,{{reqid}})",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"BOL_REQUEST_RECORD"
					],
					"query": [
						{
							"key": "_where",
							"value": "(BOL_REQUEST_ID,eq,{{reqid}})"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request Copy 9",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var currentTime = new Date();\r",
							"var nextMinute = new Date(currentTime.getTime() + 60000);\r",
							"var nextMinuteEpochTime = nextMinute.getTime();\r",
							"pm.environment.set(\"e\",nextMinuteEpochTime);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"setTimeout(function() {\r",
							"    // Continue with the rest of your test logic here\r",
							"    // ...\r",
							"}, 60000);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "kxtoken",
						"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.K3IGs0kAZty5-Gw6JAoQgJDw98LBHl8yEvTyTZs9125tZ86vLd_7LQ.ehZJ6ZIZI4JrkI-t8jqaTw.eMNgyYs4wPZKut--IMLPdqz0f7KKCovtwui61k_4woLz05Li2XftWcQJfQ0UJm4IBfmmdNaho8ze3cT0wNiN_hfZiAUwUsKM67zLgpwvVuW7msrHcR9gt5hLX3yheaMbeKexq5TTnoiNv9g9r3y5ZNs3ioHkWDeGYv-QLgiLHSBKkBepETDwLuOHEkvN3nmQBMPWqqH57vlVqce5SY21MnS8-N4fMeJmNkTlFFj6ewLjYkXy8wP9skY1Y7CK8_zOqssi91aAIczlmXwz8BCeJFjfIG-KWA6GIhDz6XDhLSavnSyRAf3SjmzZorr7xWqFAG-MLn5WiJofqv-wIS-G080X-UZYiHrVUC8zV2QYciEgepnqMJT4AY05EKbW5HZ1xqt1NBMW33BwTJs3XJF7KXjZbv9urcYT9qUs6wYzd8DSjqKAOgVmqHBgoYcj_QdzLisS3VHBdb0rXfNsyqx3YxnEteerwH87eesW2D4lTzH_n1avnZOJ-kCHAOfYyD-g4NCTSmy5yRcydxVmd4VZjVRrXS4usC-gb5HmcSMyqLgjclkDKaiduGTZqc0k3-Ny15MDincxA44yyJSaeVBJjNS2OMcVBvEqkLViJwswq44jIVpYpWnzja0S_pd4HYnfUw8YrxeKW9fXhpThHq5CrGYpT5Ay4gm-LifSVnu98YQ35G_Ykv8FxFMxb1gXSbyKNUECrnocQseTD_HvBwZkfOZA4LOGDCTZhigb1rPtdDmVDEKtAVTbQbQ06b-4o1XqRXj3_kfO9Y3ldlPTdBynEtmgdv2esRjiKMhgBNWFfTAeVJi4_ZXW3J4NXKVPD9QN.YIPBlYP7PJGMiAfbPP1yjA",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n      \"NEXT_QUERY_EXECUTION_DATE_TIME\": {{e}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/BOL_REQUEST_RECORD/{{ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"BOL_REQUEST_RECORD",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "MOCK_RESPONSE_2P",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var formattedONEDayAheadDate = new Date(Date.now() + 1 * 24 * 60 * 60 * 1000).toLocaleDateString('en-US', {month: '2-digit',day: '2-digit', year: '2-digit' }).replace(/\\//g, '');\r",
							"pm.environment.set(\"T1\", formattedONEDayAheadDate);\r",
							"\r",
							"var formattedoneDayBackDate = new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toLocaleDateString('en-US', { month: '2-digit',day: '2-digit', year: '2-digit' }).replace(/\\//g, '');\r",
							"pm.environment.set(\"Y\", formattedoneDayBackDate);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "kxtoken",
						"value": "{{kn_token_env}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"eventMessage\":{\r\n    \"requestid\":\"{{REQ_ID}}\",\r\n    \"records\":{\r\n        \"recordlist\":[\r\n        {\"record\":\"A2809S1F      071023     C1                                3P-BOL-0000          \"},\r\n        {\"record\":\"B  1704BIIC1                                               {{REC_ID}} \"},\r\n        {\"record\":\"WR1                                       SHAILESH SMILE          112E {{T1}}   \"},\r\n        {\"record\":\"WR4            {{M}}                               00000167PKG  {{MSC}}    MY1     \"},\r\n        {\"record\":\"WR5{{Y}}03421A ENTERED, INTENSIVE EXAM REQUIRED                 167      001   \"},\r\n        {\"record\":\"WR5{{Y}}06421H HOLD PLACED                                      167      002   \"},\r\n        {\"record\":\"WR5{{Y}}07422H AGRICULTURAL HOLD PLACED                         167      003   \"},\r\n        {\"record\":\"WR5{{Y}}08423H OTHER GOVERNMENT AGENCY HOLD                     167      004   \"},\r\n        {\"record\":\"WR5{{Y}}09424A INTENSIVE EXAM REQUIRED                          167      005   \"},\r\n        {\"record\":\"WR5{{Y}}10424C ENTERED GENERAL EXAMINATION                      167      006   \"},\r\n        {\"record\":\"WR5{{Y}}11425H DOCUMENT REVIEW HOLD                             167      007   \"},\r\n        {\"record\":\"WR5{{Y}}12422O ISF HOLD, NO ISF ON FILE                         167      008   \"},\r\n        {\"record\":\"WR5{{Y}}13422P ISF HOLD, ISF COMPLIANCE ISSUE                   167      009   \"},\r\n        {\"record\":\"WN1            {{P}}                        58023{{Y}}                          \"},\r\n        {\"record\":\"Y  30018AFC100013                                                               \"},\r\n        {\"record\":\"Z2809S1F      063023                                                            \"}\r\n            ]}\r\n            },\r\n    \"eventType\":\"SET_RESPONSE_MANUAL_3P\",\"eventTime\":1686741426155\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.klearnow.com/staging-broker/v1/events",
					"protocol": "https",
					"host": [
						"api",
						"klearnow",
						"com"
					],
					"path": [
						"staging-broker",
						"v1",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "12 hour difference Test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData=pm.response.json();\r",
							"pm.environment.set(\"REQ_ID\",jsonData[0].REQUEST_ID);\r",
							"pm.environment.set(\"ID\",jsonData[0].ID);\r",
							"pm.environment.set(\"epochTime1\",jsonData[0].NEXT_QUERY_EXECUTION_DATE_TIME);\r",
							"var e=pm.environment.get('epochTime1');\r",
							"const currentEpochTime = Math.floor(Date.now() / 1000);\r",
							"const e2=e/1000;\r",
							"// Get the absolute difference in seconds between the given epoch time and the current epoch time\r",
							"const timeDifferenceInSeconds = Math.abs(currentEpochTime -e2);\r",
							"\r",
							"// Calculate the difference in hours\r",
							"const timeDifferenceInHours = timeDifferenceInSeconds / 3600;\r",
							"const toleranceInHours=2;\r",
							"// Perform the test\r",
							"pm.test('Time difference should be approximately 12 hours', () => {\r",
							"    pm.expect(timeDifferenceInHours).to.be.closeTo(12, toleranceInHours);\r",
							"});\r",
							"\r",
							"pm.test('next query status is scheduled', function () {\r",
							"   pm.expect(jsonData[0].NEXT_QUERY_STATUS).to.eql(\"SCHEDULED\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "kxtoken",
						"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.bG24EfajNd7NMYpqsqzneMfQcxSJt2TdOp-Zqva7maOibdwVD1aBGA.xxQ6sB88NxLmMiLxIQOikA.5U80icvxdVFIMOygDvOkJAxbMJhchZqO0gtJhJIOZ8DUFnVT5QGsQTP_Rswci9j_LFxefg3egKJDxhcAAm8Se1MWq9LA1n0e1fm-6udEwOUMNl7M_cVFGlFFDUsOvLJyNy1s53hWHmj0fJe2Z6bA5DcjDD55LqUn4S_wE2pq01C1NqhNEFYIgZ22A5x7RPxyVWQknSy8p7mjwwC8k9fcHaSj_ZXQlIHW4zhB5nmgZRahWp2QrN8AXTn1ichpACuiTA2jBndroAy2B1fFcA5UgQvxJUzdyCi2sXkJAFaSZsKISqxxBqpPwSTzXfmqGzeEmSFOSXmyslAraYhTUgxZ9K4Rg9HJmDT__IFCVI-UxDaSukR04qPwivo4wyHNSe7xpRDaQQYRSzc4LF2MlCS8PIVKFSZYWfieazbE1y89csXFoJY1ItwJ5sfS9J8m5qewghd93-2YF-SHJt0mf6zh0PDUA8c0-9YARDfTaQmXDCj6Zf8ZM2vL_2rY9GJ2thLfTSxYHI-jQqGoCYarF-Uk_gsxgDI3JiEhTYipFxBre1Ng_2SN1BnBeB4GRze15Cl37av_4qDzEmY7tep05rMdMxDxPnzwv4rmvcdDI01Ql3h-jatfzfUIEhtYsVVNDaL6Q8JWxk4IbTU6ze1wTLyZ9WeW8bk3RLS0GOZzHQkveViKccEPX8jy7SrHjRWvKwjp9K53yni0JOjtwlBkLIOC2vidDK9My9qbRovTIdHoC4WshJ8ASJbRo1oWqmVvvNM5Y0km1rUQY7yxCYYM_iDgrtH_1kwvu_DtWuX_wLTN08JmHk6XM1dMptMkiQQvdniyLdPzO-Va_POvH95nrIoj1w.kDskmUi9N66CcaCOo9lASA",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/BOL_REQUEST_RECORD?_where=(BOL_REQUEST_ID,eq,{{reqid}})",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"BOL_REQUEST_RECORD"
					],
					"query": [
						{
							"key": "_where",
							"value": "(BOL_REQUEST_ID,eq,{{reqid}})"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request Copy 10",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var currentTime = new Date();\r",
							"var nextMinute = new Date(currentTime.getTime() + 60000);\r",
							"var nextMinuteEpochTime = nextMinute.getTime();\r",
							"pm.environment.set(\"e\",nextMinuteEpochTime);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"setTimeout(function() {\r",
							"    // Continue with the rest of your test logic here\r",
							"    // ...\r",
							"}, 60000);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "kxtoken",
						"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.K3IGs0kAZty5-Gw6JAoQgJDw98LBHl8yEvTyTZs9125tZ86vLd_7LQ.ehZJ6ZIZI4JrkI-t8jqaTw.eMNgyYs4wPZKut--IMLPdqz0f7KKCovtwui61k_4woLz05Li2XftWcQJfQ0UJm4IBfmmdNaho8ze3cT0wNiN_hfZiAUwUsKM67zLgpwvVuW7msrHcR9gt5hLX3yheaMbeKexq5TTnoiNv9g9r3y5ZNs3ioHkWDeGYv-QLgiLHSBKkBepETDwLuOHEkvN3nmQBMPWqqH57vlVqce5SY21MnS8-N4fMeJmNkTlFFj6ewLjYkXy8wP9skY1Y7CK8_zOqssi91aAIczlmXwz8BCeJFjfIG-KWA6GIhDz6XDhLSavnSyRAf3SjmzZorr7xWqFAG-MLn5WiJofqv-wIS-G080X-UZYiHrVUC8zV2QYciEgepnqMJT4AY05EKbW5HZ1xqt1NBMW33BwTJs3XJF7KXjZbv9urcYT9qUs6wYzd8DSjqKAOgVmqHBgoYcj_QdzLisS3VHBdb0rXfNsyqx3YxnEteerwH87eesW2D4lTzH_n1avnZOJ-kCHAOfYyD-g4NCTSmy5yRcydxVmd4VZjVRrXS4usC-gb5HmcSMyqLgjclkDKaiduGTZqc0k3-Ny15MDincxA44yyJSaeVBJjNS2OMcVBvEqkLViJwswq44jIVpYpWnzja0S_pd4HYnfUw8YrxeKW9fXhpThHq5CrGYpT5Ay4gm-LifSVnu98YQ35G_Ykv8FxFMxb1gXSbyKNUECrnocQseTD_HvBwZkfOZA4LOGDCTZhigb1rPtdDmVDEKtAVTbQbQ06b-4o1XqRXj3_kfO9Y3ldlPTdBynEtmgdv2esRjiKMhgBNWFfTAeVJi4_ZXW3J4NXKVPD9QN.YIPBlYP7PJGMiAfbPP1yjA",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n      \"NEXT_QUERY_EXECUTION_DATE_TIME\": {{e}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/BOL_REQUEST_RECORD/{{ID}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"BOL_REQUEST_RECORD",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "MOCK_RESPONSE_1C",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var formattedONEDayAheadDate = new Date(Date.now() + 1 * 24 * 60 * 60 * 1000).toLocaleDateString('en-US', {month: '2-digit',day: '2-digit', year: '2-digit' }).replace(/\\//g, '');\r",
							"pm.environment.set(\"T1\", formattedONEDayAheadDate);\r",
							"\r",
							"var formattedoneDayBackDate = new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toLocaleDateString('en-US', { month: '2-digit',day: '2-digit', year: '2-digit' }).replace(/\\//g, '');\r",
							"pm.environment.set(\"Y\", formattedoneDayBackDate);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"setTimeout(function() {\r",
							"    // Continue with the rest of your test logic here\r",
							"    // ...\r",
							"}, 30000);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "kxtoken",
						"value": "{{kn_token_env}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"eventMessage\":{\r\n    \"requestid\":\"{{REQ_ID}}\",\r\n    \"records\":{\r\n        \"recordlist\":[\r\n        {\"record\":\"A2809S1F      071023     C1                                3P-BOL-0000          \"},\r\n        {\"record\":\"B  1704BIIC1                                               {{REC_ID}} \"},\r\n        {\"record\":\"WR1                                       SHAILESH SMILE          112E {{T1}}   \"},\r\n        {\"record\":\"WR4            {{M}}                               00000167PKG  {{MSC}}    MY1     \"},\r\n        {\"record\":\"WR5{{Y}}03421A ENTERED, INTENSIVE EXAM REQUIRED                 167      001   \"},\r\n        {\"record\":\"WR5{{Y}}06421H HOLD PLACED                                      167      002   \"},\r\n        {\"record\":\"WR5{{Y}}07422H AGRICULTURAL HOLD PLACED                         167      003   \"},\r\n        {\"record\":\"WR5{{Y}}08423H OTHER GOVERNMENT AGENCY HOLD                     167      004   \"},\r\n        {\"record\":\"WR5{{Y}}09424A INTENSIVE EXAM REQUIRED                          167      005   \"},\r\n        {\"record\":\"WR5{{Y}}10424C ENTERED GENERAL EXAMINATION                      167      006   \"},\r\n        {\"record\":\"WR5{{Y}}11425H DOCUMENT REVIEW HOLD                             167      007   \"},\r\n        {\"record\":\"WR5{{Y}}12422O ISF HOLD, NO ISF ON FILE                         167      008   \"},\r\n        {\"record\":\"WR5{{Y}}13422P ISF HOLD, ISF COMPLIANCE ISSUE                   167      009   \"},\r\n        {\"record\":\"WR5{{Y}}17421C ENTERED AND RELEASED GENERAL EXAM                167      010   \"},\r\n        {\"record\":\"WN1            {{P}}                        58023{{Y}}                          \"},\r\n        {\"record\":\"Y  30018AFC100013                                                               \"},\r\n        {\"record\":\"Z2809S1F      063023                                                            \"}\r\n            ]}\r\n            },\r\n    \"eventType\":\"SET_RESPONSE_MANUAL_3P\",\"eventTime\":1686741426155\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.klearnow.com/staging-broker/v1/events",
					"protocol": "https",
					"host": [
						"api",
						"klearnow",
						"com"
					],
					"path": [
						"staging-broker",
						"v1",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "END TEST",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData=pm.response.json();\r",
							"\r",
							"pm.test('Scheduler working is correct', function () {\r",
							"   pm.expect(jsonData[0].NEXT_QUERY_STATUS).to.eql(\"DONE\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "kxtoken",
						"value": "eyJhbGciOiJBMTI4S1ciLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0.bG24EfajNd7NMYpqsqzneMfQcxSJt2TdOp-Zqva7maOibdwVD1aBGA.xxQ6sB88NxLmMiLxIQOikA.5U80icvxdVFIMOygDvOkJAxbMJhchZqO0gtJhJIOZ8DUFnVT5QGsQTP_Rswci9j_LFxefg3egKJDxhcAAm8Se1MWq9LA1n0e1fm-6udEwOUMNl7M_cVFGlFFDUsOvLJyNy1s53hWHmj0fJe2Z6bA5DcjDD55LqUn4S_wE2pq01C1NqhNEFYIgZ22A5x7RPxyVWQknSy8p7mjwwC8k9fcHaSj_ZXQlIHW4zhB5nmgZRahWp2QrN8AXTn1ichpACuiTA2jBndroAy2B1fFcA5UgQvxJUzdyCi2sXkJAFaSZsKISqxxBqpPwSTzXfmqGzeEmSFOSXmyslAraYhTUgxZ9K4Rg9HJmDT__IFCVI-UxDaSukR04qPwivo4wyHNSe7xpRDaQQYRSzc4LF2MlCS8PIVKFSZYWfieazbE1y89csXFoJY1ItwJ5sfS9J8m5qewghd93-2YF-SHJt0mf6zh0PDUA8c0-9YARDfTaQmXDCj6Zf8ZM2vL_2rY9GJ2thLfTSxYHI-jQqGoCYarF-Uk_gsxgDI3JiEhTYipFxBre1Ng_2SN1BnBeB4GRze15Cl37av_4qDzEmY7tep05rMdMxDxPnzwv4rmvcdDI01Ql3h-jatfzfUIEhtYsVVNDaL6Q8JWxk4IbTU6ze1wTLyZ9WeW8bk3RLS0GOZzHQkveViKccEPX8jy7SrHjRWvKwjp9K53yni0JOjtwlBkLIOC2vidDK9My9qbRovTIdHoC4WshJ8ASJbRo1oWqmVvvNM5Y0km1rUQY7yxCYYM_iDgrtH_1kwvu_DtWuX_wLTN08JmHk6XM1dMptMkiQQvdniyLdPzO-Va_POvH95nrIoj1w.kDskmUi9N66CcaCOo9lASA",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/BOL_REQUEST_RECORD?_where=(BOL_REQUEST_ID,eq,{{reqid}})",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"BOL_REQUEST_RECORD"
					],
					"query": [
						{
							"key": "_where",
							"value": "(BOL_REQUEST_ID,eq,{{reqid}})"
						}
					]
				}
			},
			"response": []
		}
	]
}